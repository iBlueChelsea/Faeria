{"version":3,"sources":["hooks-store/store.js","assets/images/cards/images.js","assets/images/ui/icons.js","components/Game/Board/Tile/Occupant/Occupant.js","components/Game/Board/Tile/Tile.js","components/Game/Board/Well/Well.js","components/Game/Board/God/God.js","components/Game/Board/Board.js","components/Game/Hand/Card/Card.js","components/Game/Hand/Hand.js","assets/images/ui/images_ui.js","components/Game/Wheel/WheelButton/WheelButton.js","components/UI/EndTurnButton/EndTurnButton.js","components/Game/Wheel/Wheel.js","components/Game/Faeria/Faeria.js","components/Game/Deck/Deck.js","components/UI/Hexagon/Hexagon.js","components/UI/Infobox/Infobox.js","components/UI/MulliganModal/MulliganModal.js","components/UI/ChooseModal/ChooseModal.js","components/UI/EndGameButton/EndGameButton.js","components/Game/Game.js","App.js","hooks-store/event-processor.js","hooks-store/global-store.js","index.js"],"names":["globalState","listeners","actions","useStore","shouldListen","setState","useState","dispatch","actionIdentifier","payload","newState","listener","useEffect","push","filter","li","images","0","1","2","3","4","5","6","7","8","9","10","11","12","13","14","15","16","17","18","19","20","21","22","23","24","25","26","27","28","29","30","31","32","33","34","35","36","37","38","39","40","41","42","43","44","45","46","47","48","49","50","51","52","53","54","55","icons","aquatic_enemy","aquatic_enemyhover","aquatic_friendly","aquatic_friendlyhover","flying_enemy","flying_enemyhover","flying_friendly","flying_friendlyhover","jump_enemy","jump_enemyhover","jump_friendly","jump_friendlyhover","ranged_enemy","ranged_enemyhover","ranged_friendly","ranged_friendlyhover","scoot_enemy","scoot_enemyhover","scoot_friendly","scoot_friendlyhover","taunt_enemy","taunt_enemyhover","taunt_friendly","taunt_friendlyhover","Occupant","props","state","points_divine","x","y","join","occupantClass","data","board","tiles","tile","occupant","player","user","occupantSelectable","status","current","creatureClass","occupantSelected","iconClass","icon_taunt","taunt","rx","ry","width","height","fill","icon_ranged","ranged","icon_flying","movement","special","flying","icon_aquatic","aquatic","icon_jump","jump","icon_scoot","range","divine","points","className","protection","cx","cy","onClick","event","opponent","tile_id","currentAction","onMouseEnter","highlight","id","onMouseLeave","patternContentUnits","preserveAspectRatio","href","dy","attack","health","Tile","extraclass","selectable","tileclass","owner","type","hexSize","startPosX","startPosY","Math","sqrt","Fragment","Well","wellClass","collected","r","God","gods","god","textAnchor","stroke","strokeWidth","fontSize","Board","boardTilesMap","G","F","E","D","C","B","A","wellPositions","godPositions","Object","keys","map","column","i","Array","_","j","parity","columnNr","wells","indexOf","length","boardMaxHeight","style","justifyContent","display","Card","clickAction","mulligan","hand","index","cards","faeria_cost","faeria","hand_id","card_id","imgSrc","classname","alt","src","parseInt","Hand","cardClass","selected","cardOwner","alignSelf","align","images_ui","WheelButton","wheelbuttons","wheelbutton_id","EndTurnButton","btnText","turn","btnClass","btnClassText","btnOnClick","Wheel","offsetX","offsetY","wheel","wheelOutput","wheel_used","strokeColor","fillColor","Faeria","Deck","border","deckcounter","handcounter","Hexagon","Infobox","landCount","lands","f","l","m","d","values","forEach","charAt","getLandCount","landCounter","info_landcounter","margin","info_faeria","info_player","textAlign","name","info","deck","MulliganModal","initialHand","setInitialHand","btnDisabled","setBtnDisabled","swapHandler","newHand","JSON","parse","stringify","target","slice","getdata","FormData","append","axios","post","then","res","prevState","prevHand","cardsToReplace","replacePool","entries","card","includes","random","floor","splice","shuffledDeck","prevDeck","deckLength","postdata","catch","error","console","log","message","ChooseModal","chooseHandler","chooseParams","EndGameButton","Game","document","getElementById","value","shuffle","timer","setTimeout","formdata","timestamp","Date","now","clearTimeout","choose","highlighted_card","highlightedOccupant","cardLibrary","finished","flexDirection","alignItems","winner","position","flexWrap","app","EventProcessor","this","eventLibrary","summonEffectLibrary","giftEffectLibrary","lastwordEffectLibrary","productionEffectLibrary","specialEffectLibrary","key","wheel_neutral_counter","selected_card_id","getSelectedCard","selected_occupant_id","params","friendly","enemy","playerCheck","processSpecialEffect","action","land_cost","forest","desert","mountain","lake","wild","base_attack","base_health","haste","dash","canCollect","hasMoved","hasDashed","hasAttacked","effects","summon","gift","lastword","production","effectUsed","landtype","newTileState","anyAdjacent","anyAdjacentFromOccupant","god_key","tileType","tileOwner","adjacent","some","player1","player2","dmgAllowed","getGodTile","health_dmg","randomTiles","jumpTiles","adjacent_tile","movementRange","rangeTiles","rangeTilesHelper","valid","prevTile","currentTile","rangetile","rangetile_key","rangetile_adj","rangetile_adj_key","rangetile_adj_adj","adjacentNonTile","moveRequirementsMet","process","setSelectStateForOccupantsDivine","setSelectStateForAllTiles","setSelectStateForOccupants","setSelectStateForBuildTiles","getRemoveOccupant","processLastwordEffect","handleCustomDrawLogic","findIndex","getLandCostForType","tileAvailable","availableTiles","getRandomTiles","count","getOccupantByID","getLandCostForOccupant","setSelectStateForGods","max","setSelectStateForMovementTiles","reduce","sum","land","min","setSelectStateForHand","setSelectStateForWheel","adjTile","randomTile","setSelectStateForConditionalOccupants","processSummonEffect","initGiftEffect","configureStore","loadStore","userActions","initialState","SET_DATA","currentState","SHUFFLE_DECK","updatedState","CONFIRM_MULLIGAN","START_GAME","SELECT_LAND","newWheelState","DRAW_CARD","PLUS_FAERIA","BUILD_TILE","wheelbutton","SELECT_CARD","getLands","landtypes","canSpawnAdjacentToFriendliesArray","String","currentValue","requirementsMet","SELECT_EVENT","runLogic","EP","initEventLogic","handleEventLogic","PROCESS_EVENT_OCCUPANT","PROCESS_EVENT_TILE","PROCESS_GIFT_OCCUPANT","processGiftEffect","CHOOSE_CARD","SUMMON_CREATURE","newOccupant","available","SELECT_OCCUPANT","isTaunted","taunt_tile","rangeAttack","rangeAttackHelper","attackRequirementsMet","rangeAttackArrayHelper","rangeAttackArray","attacktile","MOVE_OCCUPANT","selected_tile_id","ATTACK_OCCUPANT","attacker","defender","removeOccupant","ATTACK_GOD","wasHit","END_TURN","processProductionEffect","HIGHLIGHT_OCCUPANT","END_GAME","ReactDOM","render","StrictMode","App"],"mappings":"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","file":"static/js/main.e7d29f84.chunk.js","sourcesContent":["import { useState, useEffect } from \"react\";\r\n\r\nlet globalState = {};\r\nlet listeners = [];\r\nlet actions = {};\r\n\r\nexport const useStore = (shouldListen = true) => {\r\n  const setState = useState(globalState)[1];\r\n\r\n  const dispatch = (actionIdentifier, payload) => {\r\n    const newState = actions[actionIdentifier](globalState, payload);\r\n    globalState = { ...globalState, ...newState };\r\n\r\n    for (const listener of listeners) {\r\n      listener(globalState);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (shouldListen) {\r\n      listeners.push(setState);\r\n    }\r\n\r\n    return () => {\r\n      if (shouldListen) {\r\n        listeners = listeners.filter((li) => li !== setState);\r\n      }\r\n    };\r\n  }, [setState, shouldListen]);\r\n\r\n  return [globalState, dispatch];\r\n};\r\n\r\nexport const initStore = (userActions, initialState) => {\r\n  if (initialState) {\r\n    globalState = { ...globalState, ...initialState };\r\n  }\r\n  actions = { ...actions, ...userActions };\r\n};\r\n","const images = {\r\n    'cardback': 'assets/images/cards/cardback.jpg',\r\n    0: 'assets/images/cards/cheeksplore.jpg',\r\n    1: 'assets/images/cards/mercheek.jpg',\r\n    2: 'assets/images/cards/dolphin_cheekrider.jpg',\r\n    3: 'assets/images/cards/clamcheek.jpg',\r\n    4: 'assets/images/cards/ninjacheek.jpg',\r\n    5: 'assets/images/cards/song_of_the_mercheek.jpg',\r\n    6: 'assets/images/cards/cheek_in_a_bottle.jpg',\r\n    7: 'assets/images/cards/cheekie_in_a_lamp.jpg',\r\n    8: 'assets/images/cards/cheeklord.jpg',\r\n    9: 'assets/images/cards/rain_of_cheek.jpg',\r\n    10: 'assets/images/cards/cheekdrop.jpg',\r\n    11: 'assets/images/cards/cheekmoon.jpg',\r\n    12: 'assets/images/cards/cheekpearl.jpg',\r\n    13: 'assets/images/cards/crabcheek.jpg',\r\n    14: 'assets/images/cards/cheekcano.jpg',\r\n    15: 'assets/images/cards/cheekdevil.jpg',\r\n    16: 'assets/images/cards/cheekflame.jpg',\r\n    17: 'assets/images/cards/cheekblast.jpg',\r\n    18: 'assets/images/cards/cheekflame_faerie.jpg',\r\n    19: 'assets/images/cards/baby_cheekdevil.jpg',\r\n    20: 'assets/images/cards/ghostcheek_tower.jpg',\r\n    21: 'assets/images/cards/ghostcheek.jpg',\r\n    22: 'assets/images/cards/ghostcheek_alchemist.jpg',\r\n    23: 'assets/images/cards/cheekruption.jpg',\r\n    24: 'assets/images/cards/suncheek.jpg',\r\n    25: 'assets/images/cards/cheekflower.jpg',\r\n    26: 'assets/images/cards/cavecheek_dweller.jpg',\r\n    27: 'assets/images/cards/mushroom_cheek.jpg',\r\n    28: 'assets/images/cards/cheekshrooms.jpg',\r\n    29: 'assets/images/cards/cheektree_giant.jpg',\r\n    30: 'assets/images/cards/cheekworld_tree.jpg',\r\n    31: 'assets/images/cards/cheek_shaman.jpg',\r\n    32: 'assets/images/cards/cheekfox.jpg',\r\n    33: 'assets/images/cards/cheekbloom_spirit.jpg',\r\n    34: 'assets/images/cards/cheekshield_spirit.jpg',\r\n    35: 'assets/images/cards/cheek_dancers.jpg',\r\n    36: 'assets/images/cards/cheeksphynx.jpg',\r\n    37: 'assets/images/cards/cheeksphynx_a.jpg',\r\n    38: 'assets/images/cards/cheeksphynx_b.jpg',\r\n    39: 'assets/images/cards/cheeksphynx_c.jpg',\r\n    40: 'assets/images/cards/mummy_cheek.jpg',\r\n    41: 'assets/images/cards/cheeksquito.jpg',\r\n    42: 'assets/images/cards/cheek_air_balloon.jpg',\r\n    43: 'assets/images/cards/balloon_cheek.jpg',\r\n    44: 'assets/images/cards/dragon_cheekrider.jpg',\r\n    45: 'assets/images/cards/baby_dragoncheek.jpg',\r\n    46: 'assets/images/cards/cheek_glider.jpg',\r\n    47: 'assets/images/cards/cheek_pyramid.jpg',\r\n    48: 'assets/images/cards/cheek_wind.jpg',\r\n    49: 'assets/images/cards/canopic_cheekjar.jpg',\r\n    50: 'assets/images/cards/cavecheek.jpg',\r\n    51: 'assets/images/cards/book_of_cheek.jpg',\r\n    52: 'assets/images/cards/milk_of_the_cheek.jpg',\r\n    53: 'assets/images/cards/cheek_cannon.jpg',\r\n    54: 'assets/images/cards/cheekcrobats.jpg',\r\n    55: 'assets/images/cards/cheekcrobat.jpg',\r\n}\r\n\r\nexport default images;","const icons = {\r\n    aquatic_enemy: 'assets/images/ui/aquatic_enemy.png',\r\n    aquatic_enemyhover: 'assets/images/ui/aquatic_enemyhover.png',\r\n    aquatic_friendly: 'assets/images/ui/aquatic_friendly.png',\r\n    aquatic_friendlyhover: 'assets/images/ui/aquatic_friendlyhover.png',\r\n    flying_enemy: 'assets/images/ui/flying_enemy.png',\r\n    flying_enemyhover: 'assets/images/ui/flying_enemyhover.png',\r\n    flying_friendly: 'assets/images/ui/flying_friendly.png',\r\n    flying_friendlyhover: 'assets/images/ui/flying_friendlyhover.png',\r\n    jump_enemy: 'assets/images/ui/jump_enemy.png',\r\n    jump_enemyhover: 'assets/images/ui/jump_enemyhover.png',\r\n    jump_friendly: 'assets/images/ui/jump_friendly.png',\r\n    jump_friendlyhover: 'assets/images/ui/jump_friendlyhover.png',\r\n    ranged_enemy: 'assets/images/ui/ranged_enemy.png',\r\n    ranged_enemyhover: 'assets/images/ui/ranged_enemyhover.png',\r\n    ranged_friendly: 'assets/images/ui/ranged_friendly.png',\r\n    ranged_friendlyhover: 'assets/images/ui/ranged_friendlyhover.png',\r\n    scoot_enemy: 'assets/images/ui/scoot_enemy.png',\r\n    scoot_enemyhover: 'assets/images/ui/scoot_enemyhover.png',\r\n    scoot_friendly: 'assets/images/ui/scoot_friendly.png',\r\n    scoot_friendlyhover: 'assets/images/ui/scoot_friendlyhover.png',\r\n    taunt_enemy: 'assets/images/ui/taunt_enemy.png',\r\n    taunt_enemyhover: 'assets/images/ui/taunt_enemyhover.png',\r\n    taunt_friendly: 'assets/images/ui/taunt_friendly.png',\r\n    taunt_friendlyhover: 'assets/images/ui/taunt_friendlyhover.png',\r\n}\r\n\r\nexport default icons;","import React from \"react\";\r\nimport { useStore } from \"../../../../../hooks-store/store\";\r\nimport \"./Occupant.css\";\r\nimport images from \"../../../../../assets/images/cards/images\";\r\nimport icons from \"../../../../../assets/images/ui/icons\";\r\n\r\nconst Occupant = (props) => {\r\n  const [state, dispatch] = useStore();\r\n\r\n  const points_divine = [\r\n    [props.x + 30, props.y - 10].join(),\r\n    [props.x - 10, props.y + 60].join(),\r\n    [props.x + 70, props.y + 60].join(),\r\n  ].join(\" \");\r\n\r\n  const occupantClass =\r\n    state.data.board.tiles[props.tile].occupant.player === props.user\r\n      ? state.tiles[props.tile].occupantSelectable &&\r\n        state.data.status.current === props.user\r\n        ? \"friendly-selectable\"\r\n        : \"friendly\"\r\n      : state.tiles[props.tile].occupantSelectable\r\n      ? \"enemy-selectable\"\r\n      : \"enemy\";\r\n  const creatureClass =\r\n    state.data.board.tiles[props.tile].occupant.player === props.user\r\n      ? state.tiles[props.tile].occupantSelected\r\n        ? \"creature-selected\"\r\n        : \"creature\"\r\n      : \"creature-enemy\";\r\n  const iconClass =\r\n    state.data.board.tiles[props.tile].occupant.player === props.user\r\n      ? \"friendly\"\r\n      : \"enemy\";\r\n  const icon_taunt = state.data.board.tiles[props.tile].occupant.taunt ? (\r\n    <rect\r\n      x={props.x + 20}\r\n      y={props.y - 7}\r\n      rx=\"5\"\r\n      ry=\"5\"\r\n      width=\"20\"\r\n      height=\"20\"\r\n      fill={\"url(#icon_taunt\" + props.tile + \")\"}\r\n    />\r\n  ) : null;\r\n  const icon_ranged = state.data.board.tiles[props.tile].occupant.ranged ? (\r\n    <rect\r\n      x={props.x + 50}\r\n      y={props.y + 30}\r\n      rx=\"5\"\r\n      ry=\"5\"\r\n      width=\"20\"\r\n      height=\"20\"\r\n      fill={\"url(#icon_ranged\" + props.tile + \")\"}\r\n    />\r\n  ) : null;\r\n  const icon_flying = state.data.board.tiles[props.tile].occupant.movement\r\n    .special.flying ? (\r\n    <rect\r\n      x={props.x + 20}\r\n      y={props.y + 45}\r\n      rx=\"5\"\r\n      ry=\"5\"\r\n      width=\"20\"\r\n      height=\"20\"\r\n      fill={\"url(#icon_flying\" + props.tile + \")\"}\r\n    />\r\n  ) : null;\r\n  const icon_aquatic =\r\n    !icon_flying &&\r\n    state.data.board.tiles[props.tile].occupant.movement.special.aquatic ? (\r\n      <rect\r\n        x={props.x + 20}\r\n        y={props.y + 45}\r\n        rx=\"5\"\r\n        ry=\"5\"\r\n        width=\"20\"\r\n        height=\"20\"\r\n        fill={\"url(#icon_aquatic\" + props.tile + \")\"}\r\n      />\r\n    ) : null;\r\n  const icon_jump = state.data.board.tiles[props.tile].occupant.movement.special\r\n    .jump ? (\r\n    <rect\r\n      x={props.x + 20}\r\n      y={props.y + 65}\r\n      rx=\"5\"\r\n      ry=\"5\"\r\n      width=\"20\"\r\n      height=\"20\"\r\n      fill={\"url(#icon_jump\" + props.tile + \")\"}\r\n    />\r\n  ) : null;\r\n  const icon_scoot =\r\n    !icon_jump &&\r\n    state.data.board.tiles[props.tile].occupant.movement.range > 1 ? (\r\n      <rect\r\n        x={props.x + 20}\r\n        y={props.y + 65}\r\n        rx=\"5\"\r\n        ry=\"5\"\r\n        width=\"20\"\r\n        height=\"20\"\r\n        fill={\"url(#icon_scoot\" + props.tile + \")\"}\r\n      />\r\n    ) : null;\r\n  const divine = state.data.board.tiles[props.tile].occupant.divine ? (\r\n    <polygon points={points_divine} className=\"divine\" />\r\n  ) : null;\r\n  const protection = state.data.board.tiles[props.tile].occupant.protection ? (\r\n    <ellipse\r\n      cx={props.x + 30}\r\n      cy={props.y + 39}\r\n      rx=\"49\"\r\n      ry=\"49\"\r\n      className=\"protection\"\r\n    />\r\n  ) : null;\r\n\r\n  const occupantHandler = () => {\r\n    if (\r\n      state.tiles[props.tile].occupantSelectable &&\r\n      state.data.status.current === props.user\r\n    ) {\r\n      const payload = {\r\n        event: \"occupant\",\r\n        player: props.user,\r\n        opponent: props.opponent,\r\n        tile_id: props.tile,\r\n      };\r\n      if (state.currentAction === \"gift_occupant\") {\r\n        dispatch(\"PROCESS_GIFT_OCCUPANT\", payload);\r\n      } else if (state.currentAction === \"event_occupant\") {\r\n        dispatch(\"PROCESS_EVENT_OCCUPANT\", payload);\r\n      } else {\r\n        if (state.data.board.tiles[props.tile].occupant.player === props.user) {\r\n          dispatch(\"SELECT_OCCUPANT\", payload);\r\n        } else if (state.currentAction === \"occupant_selected\") {\r\n          dispatch(\"ATTACK_OCCUPANT\", payload);\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  const highlightOccupant = () => {\r\n    const payload = {\r\n      highlight: state.data.board.tiles[props.tile].occupant.id,\r\n    };\r\n    dispatch(\"HIGHLIGHT_OCCUPANT\", payload);\r\n  };\r\n\r\n  const deHighlightOccupant = () => {\r\n    const payload = {\r\n      highlight: false,\r\n    };\r\n    dispatch(\"HIGHLIGHT_OCCUPANT\", payload);\r\n  };\r\n\r\n  const occupant = (\r\n    <g\r\n      className={occupantClass}\r\n      onClick={occupantHandler}\r\n      onMouseEnter={highlightOccupant}\r\n      onMouseLeave={deHighlightOccupant}\r\n    >\r\n      <defs>\r\n        <pattern\r\n          id={\"creature-image\" + props.tile}\r\n          height=\"100%\"\r\n          width=\"100%\"\r\n          patternContentUnits=\"objectBoundingBox\"\r\n        >\r\n          <image\r\n            height=\"1\"\r\n            width=\"1\"\r\n            preserveAspectRatio=\"none\"\r\n            href={images[state.data.board.tiles[props.tile].occupant.id]}\r\n          />\r\n        </pattern>\r\n        <pattern\r\n          id={\"icon_aquatic\" + props.tile}\r\n          height=\"100%\"\r\n          width=\"100%\"\r\n          patternContentUnits=\"objectBoundingBox\"\r\n        >\r\n          <image\r\n            height=\"1\"\r\n            width=\"1\"\r\n            preserveAspectRatio=\"none\"\r\n            href={icons[\"aquatic_\" + iconClass]}\r\n          />\r\n        </pattern>\r\n        <pattern\r\n          id={\"icon_flying\" + props.tile}\r\n          height=\"100%\"\r\n          width=\"100%\"\r\n          patternContentUnits=\"objectBoundingBox\"\r\n        >\r\n          <image\r\n            height=\"1\"\r\n            width=\"1\"\r\n            preserveAspectRatio=\"none\"\r\n            href={icons[\"flying_\" + iconClass]}\r\n          />\r\n        </pattern>\r\n        <pattern\r\n          id={\"icon_jump\" + props.tile}\r\n          height=\"100%\"\r\n          width=\"100%\"\r\n          patternContentUnits=\"objectBoundingBox\"\r\n        >\r\n          <image\r\n            height=\"1\"\r\n            width=\"1\"\r\n            preserveAspectRatio=\"none\"\r\n            href={icons[\"jump_\" + iconClass]}\r\n          />\r\n        </pattern>\r\n        <pattern\r\n          id={\"icon_ranged\" + props.tile}\r\n          height=\"100%\"\r\n          width=\"100%\"\r\n          patternContentUnits=\"objectBoundingBox\"\r\n        >\r\n          <image\r\n            height=\"1\"\r\n            width=\"1\"\r\n            preserveAspectRatio=\"none\"\r\n            href={icons[\"ranged_\" + iconClass]}\r\n          />\r\n        </pattern>\r\n        <pattern\r\n          id={\"icon_scoot\" + props.tile}\r\n          height=\"100%\"\r\n          width=\"100%\"\r\n          patternContentUnits=\"objectBoundingBox\"\r\n        >\r\n          <image\r\n            height=\"1\"\r\n            width=\"1\"\r\n            preserveAspectRatio=\"none\"\r\n            href={icons[\"scoot_\" + iconClass]}\r\n          />\r\n        </pattern>\r\n        <pattern\r\n          id={\"icon_taunt\" + props.tile}\r\n          height=\"100%\"\r\n          width=\"100%\"\r\n          patternContentUnits=\"objectBoundingBox\"\r\n        >\r\n          <image\r\n            height=\"1\"\r\n            width=\"1\"\r\n            preserveAspectRatio=\"none\"\r\n            href={icons[\"taunt_\" + iconClass]}\r\n          />\r\n        </pattern>\r\n      </defs>\r\n\r\n      <rect\r\n        x={props.x}\r\n        y={props.y}\r\n        rx=\"5\"\r\n        ry=\"5\"\r\n        width={props.width}\r\n        height={(props.width / 3) * 4}\r\n        className={creatureClass}\r\n        fill={\"url(#creature-image\" + props.tile + \")\"}\r\n      />\r\n\r\n      {icon_taunt}\r\n      {icon_ranged}\r\n      {icon_flying}\r\n      {icon_aquatic}\r\n      {icon_jump}\r\n      {icon_scoot}\r\n\r\n      <rect\r\n        x={props.x}\r\n        y={props.y + 55}\r\n        rx=\"5\"\r\n        ry=\"5\"\r\n        width=\"20\"\r\n        height=\"25\"\r\n        className=\"attack\"\r\n      />\r\n      <text x={props.x + 10} y={props.y + 70} dy=\".3em\" className=\"attack-text\">\r\n        {state.data.board.tiles[props.tile].occupant.attack}\r\n      </text>\r\n\r\n      <rect\r\n        x={props.x + 40}\r\n        y={props.y + 55}\r\n        rx=\"5\"\r\n        ry=\"5\"\r\n        width=\"20\"\r\n        height=\"25\"\r\n        className=\"health\"\r\n      />\r\n      <text x={props.x + 50} y={props.y + 70} dy=\".3em\" className=\"health-text\">\r\n        {state.data.board.tiles[props.tile].occupant.health}\r\n      </text>\r\n\r\n      {divine}\r\n      {protection}\r\n    </g>\r\n  );\r\n\r\n  return state.data.board.tiles[props.tile].occupant.id > 0 ? occupant : null;\r\n};\r\n\r\nexport default Occupant;\r\n","import React from \"react\";\r\nimport { useStore } from \"../../../../hooks-store/store\";\r\nimport Occupant from \"./Occupant/Occupant\";\r\nimport \"./Tile.css\";\r\n\r\nconst Tile = (props) => {\r\n  const [state, dispatch] = useStore();\r\n\r\n  const extraclass =\r\n    state.tiles[props.id].selectable && state.data.status.current === props.user\r\n      ? \"tile-selectable\"\r\n      : \"tile-not-selectable\";\r\n  const tileclass =\r\n    state.data.board.tiles[props.id].owner !== props.user\r\n      ? props.type + \"-opponent\"\r\n      : props.type;\r\n\r\n  const hexSize = props.hexSize;\r\n  const startPosX = props.startPosX;\r\n  const startPosY = props.startPosY;\r\n  const points = [\r\n    [startPosX + hexSize * 0.5, startPosY].join(),\r\n    [startPosX + hexSize * 1.5, startPosY].join(),\r\n    [startPosX + hexSize * 2, startPosY + Math.sqrt(3) * hexSize * 0.5].join(),\r\n    [startPosX + hexSize * 1.5, startPosY + Math.sqrt(3) * hexSize].join(),\r\n    [startPosX + hexSize * 0.5, startPosY + Math.sqrt(3) * hexSize].join(),\r\n    [startPosX, startPosY + Math.sqrt(3) * hexSize * 0.5].join(),\r\n  ].join(\" \");\r\n\r\n  const tileHandler = () => {\r\n    if (\r\n      state.tiles[props.id].selectable &&\r\n      state.data.status.current === props.user\r\n    ) {\r\n      const payload = {\r\n        player: props.user,\r\n        opponent: props.opponent,\r\n        tile_id: props.id,\r\n      };\r\n      if (state.currentAction === \"summon_creature\") {\r\n        dispatch(\"SUMMON_CREATURE\", payload);\r\n      } else if (state.currentAction === \"occupant_selected\" || state.currentAction === \"event_move_occupant\") {\r\n        dispatch(\"MOVE_OCCUPANT\", payload);\r\n      } else if (state.currentAction === \"event_tile\") {\r\n        dispatch(\"PROCESS_EVENT_TILE\", payload);\r\n      } else {\r\n        dispatch(\"BUILD_TILE\", payload);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <polygon\r\n        className={tileclass + \" \" + extraclass}\r\n        points={points}\r\n        onClick={tileHandler}\r\n      />\r\n      <Occupant\r\n        tile={props.id}\r\n        x={startPosX + hexSize * 0.5}\r\n        y={startPosY + Math.sqrt(3) * hexSize * 0.125}\r\n        width={hexSize}\r\n        user={props.user}\r\n        opponent={props.opponent}\r\n      />\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Tile;\r\n","import React from \"react\";\r\nimport \"./Well.css\";\r\n\r\nconst Well = (props) => {\r\n  const wellClass = props.data.collected ? \"well-collected\" : \"well-available\";\r\n\r\n  return (\r\n    <circle cx={props.cx} cy={props.cy} r={props.r} className={wellClass} />\r\n  );\r\n};\r\n\r\nexport default Well;\r\n","import React from \"react\";\r\nimport { useStore } from \"../../../../hooks-store/store\";\r\nimport \"./God.css\";\r\n\r\nconst God = (props) => {\r\n  const [state, dispatch] = useStore();\r\n  const selectable = state.gods[props.id].selectable\r\n    ? \"god-selectable\"\r\n    : \"god-not-selectable\";\r\n\r\n  const godHandler = () => {\r\n    if (state.gods[props.id].selectable) {\r\n      const payload = {\r\n        event: \"god\",\r\n        god: props.id,\r\n        player: props.user,\r\n        opponent: props.opponent,\r\n      };\r\n      if (state.currentAction === \"event_occupant\") {\r\n        dispatch(\"PROCESS_EVENT_OCCUPANT\", payload);\r\n      } else if (state.currentAction === \"gift_occupant\") {\r\n        dispatch(\"PROCESS_GIFT_OCCUPANT\", payload);\r\n      } else {\r\n        dispatch(\"ATTACK_GOD\", payload);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <g className={selectable} onClick={godHandler}>\r\n      <circle cx={props.cx} cy={props.cy} r={props.r} />\r\n      <text\r\n        x={props.cx}\r\n        y={props.cy}\r\n        textAnchor=\"middle\"\r\n        stroke=\"#8B0000\"\r\n        strokeWidth=\"4px\"\r\n        fontSize=\"40px\"\r\n        dy=\".3em\"\r\n      >\r\n        {props.data.health}\r\n      </text>\r\n    </g>\r\n  );\r\n};\r\n\r\nexport default God;\r\n","import React from \"react\";\r\nimport Tile from \"./Tile/Tile\";\r\nimport Well from \"./Well/Well\";\r\nimport God from \"./God/God\";\r\n\r\nconst Board = (props) => {\r\n  const hexSize = 60;\r\n  const boardMaxHeight = 6;\r\n  const godMaxHeight = boardMaxHeight + 1;\r\n  const boardTilesMap =\r\n    props.user === \"player2\"\r\n      ? { G: 2, F: 5, E: 6, D: 5, C: 6, B: 5, A: 2 }\r\n      : { A: 2, B: 5, C: 6, D: 5, E: 6, F: 5, G: 2 };\r\n  const wellPositions =\r\n    props.user === \"player2\"\r\n      ? { G: [3, 0], A: [3, 0] }\r\n      : { A: [0, 3], G: [0, 3] };\r\n  const godPositions = props.user === \"player2\" ? { D: [6, 0] } : { D: [0, 6] };\r\n\r\n  const tiles = Object.keys(boardTilesMap).map((column, i) => {\r\n    return [...Array(boardTilesMap[column])].map((_, j) => {\r\n      let parity = i % 2 === 0;\r\n      let columnNr =\r\n        props.user === \"player2\" ? boardTilesMap[column] - j : j + 1;\r\n      return (\r\n        <Tile\r\n          key={column + columnNr}\r\n          id={column + columnNr}\r\n          type={props.data.tiles[column + columnNr].type}\r\n          hexSize={hexSize}\r\n          startPosX={hexSize * i * 1.5}\r\n          startPosY={\r\n            parity\r\n              ? Math.sqrt(3) *\r\n                  hexSize *\r\n                  ((boardMaxHeight - boardTilesMap[column]) * 0.5 + j) +\r\n                Math.sqrt(3) * hexSize * 0.5\r\n              : Math.sqrt(3) * hexSize * j + Math.sqrt(3) * hexSize\r\n          }\r\n          user={props.user}\r\n          opponent={props.opponent}\r\n        />\r\n      );\r\n    });\r\n  });\r\n\r\n  const wells = Object.keys(wellPositions).map((column) => {\r\n    return wellPositions[column].map((_, i) => {\r\n      let parity = Object.keys(boardTilesMap).indexOf(column) % 2 === 0;\r\n      return (\r\n        <Well\r\n          key={\"well-\" + column + wellPositions[column][i]}\r\n          id={\"well-\" + column + wellPositions[column][i]}\r\n          data={props.data.wells[column + wellPositions[column][i]]}\r\n          r={hexSize * 0.5}\r\n          cx={\r\n            hexSize * 1.5 * Object.keys(boardTilesMap).indexOf(column) + hexSize\r\n          }\r\n          cy={\r\n            parity\r\n              ? (boardMaxHeight -\r\n                  boardTilesMap[column] -\r\n                  wellPositions[column].length +\r\n                  [0, 3][i]) *\r\n                Math.sqrt(3) *\r\n                hexSize\r\n              : (boardMaxHeight -\r\n                  boardTilesMap[column] -\r\n                  wellPositions[column].length +\r\n                  [0, 3][i]) *\r\n                  Math.sqrt(3) *\r\n                  hexSize +\r\n                Math.sqrt(3) * hexSize * 0.5\r\n          }\r\n        />\r\n      );\r\n    });\r\n  });\r\n\r\n  const gods = Object.keys(godPositions).map((column) => {\r\n    return godPositions[column].map((_, i) => {\r\n      let parity = Object.keys(boardTilesMap).indexOf(column) % 2 === 0;\r\n      return (\r\n        <God\r\n          key={\"god-\" + column + godPositions[column][i]}\r\n          id={column + godPositions[column][i]}\r\n          data={props.data.gods[column + godPositions[column][i]]}\r\n          r={hexSize * 0.65}\r\n          cx={\r\n            hexSize * 1.5 * Object.keys(boardTilesMap).indexOf(column) + hexSize\r\n          }\r\n          cy={\r\n            parity\r\n              ? (godMaxHeight -\r\n                  boardTilesMap[column] -\r\n                  godPositions[column].length +\r\n                  [0, 6][i]) *\r\n                Math.sqrt(3) *\r\n                hexSize\r\n              : (godMaxHeight -\r\n                  boardTilesMap[column] -\r\n                  godPositions[column].length +\r\n                  [0, 6][i]) *\r\n                  Math.sqrt(3) *\r\n                  hexSize +\r\n                Math.sqrt(3) * hexSize * 0.5\r\n          }\r\n          user={props.user}\r\n          opponent={props.opponent}\r\n        />\r\n      );\r\n    });\r\n  });\r\n\r\n  return (\r\n    <div style={{ width: \"60vw\", justifyContent: \"center\", display: \"flex\" }}>\r\n      <svg\r\n        width={\r\n          hexSize * 1.5 * Object.keys(boardTilesMap).length + hexSize * 0.5\r\n        }\r\n        height={Math.sqrt(3) * hexSize * godMaxHeight}\r\n      >\r\n        {tiles}\r\n        {wells}\r\n        {gods}\r\n      </svg>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Board;\r\n","import React from \"react\";\r\nimport images from \"../../../../assets/images/cards/images\";\r\nimport \"./Card.css\";\r\nimport { useStore } from \"../../../../hooks-store/store\";\r\n\r\nconst Card = (props) => {\r\n  const [state, dispatch] = useStore();\r\n\r\n  const cardHandler = () => {\r\n    if (\r\n      state.hand[props.index].selectable &&\r\n      state.data[props.user].cards[props.id].faeria_cost <=\r\n        state.data[props.user].faeria\r\n    ) {\r\n      const payload = {\r\n        player: props.user,\r\n        opponent: props.opponent,\r\n        hand_id: props.index,\r\n        card_id: props.id,\r\n      };\r\n      if (state.data[props.user].cards[props.id].type === \"event\") {\r\n        dispatch(\"SELECT_EVENT\", payload);\r\n      } else {\r\n        dispatch(\"SELECT_CARD\", payload);\r\n      }\r\n    }\r\n  };\r\n\r\n  const cardDisabled = () => {};\r\n\r\n  const clickAction =\r\n    state.data[props.user].mulligan ||\r\n    state.currentAction === \"event_choose_occupant\"\r\n      ? props.clickAction\r\n      : state.data.status.current !== props.user || props.owner !== props.user\r\n      ? cardDisabled\r\n      : cardHandler;\r\n\r\n  const imgSrc =\r\n    props.owner === props.opponent ? images[\"cardback\"] : images[props.data.id];\r\n\r\n  return (\r\n    <div className={props.classname} onClick={clickAction}>\r\n      <img\r\n        id={props.index}\r\n        alt=\"\"\r\n        src={imgSrc}\r\n        width={props.width}\r\n        height={parseInt(props.height) - 6 + \"px\"}\r\n      ></img>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","import React from \"react\";\r\nimport Card from \"./Card/Card\";\r\nimport { useStore } from \"../../../hooks-store/store\";\r\n\r\nconst Hand = (props) => {\r\n  const state = useStore()[0];\r\n\r\n  const cards = props.data.hand.map((id, index) => {\r\n    const cardClass =\r\n      state.hand[index + 1].selected && props.user === props.owner\r\n        ? \"-selected\"\r\n        : \"\";\r\n    const cardOwner = props.user === props.owner ? \"card\" : \"enemy-card\";\r\n    return (\r\n      <Card\r\n        key={id}\r\n        id={id}\r\n        index={index + 1}\r\n        data={props.data.cards[id]}\r\n        height={props.height}\r\n        width=\"120px\"\r\n        classname={cardOwner + cardClass}\r\n        user={props.user}\r\n        opponent={props.opponent}\r\n        owner={props.owner}\r\n      />\r\n    );\r\n  });\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        width: \"60vw\",\r\n        height: props.height,\r\n        justifyContent: \"center\",\r\n        display: \"flex\",\r\n        alignSelf: props.align,\r\n      }}\r\n    >\r\n      {cards}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Hand;\r\n","const images_ui = {\r\n    'wheel-B3': 'assets/images/ui/pluscard.png',\r\n    'wheel-C2': 'assets/images/ui/pluscheekia.png',\r\n}\r\n\r\nexport default images_ui;","import React from \"react\";\r\nimport { useStore } from \"../../../../hooks-store/store\";\r\nimport images_ui from \"../../../../assets/images/ui/images_ui\";\r\n\r\nconst WheelButton = (props) => {\r\n  const [state, dispatch] = useStore();\r\n  const selectable = state.wheelbuttons[props.id].selectable\r\n    ? \"\"\r\n    : \" not-selectable\";\r\n  const hexSize = props.hexSize;\r\n  const startPosX = props.startPosX;\r\n  const startPosY = props.startPosY;\r\n  const points = [\r\n    [startPosX + hexSize * 0.5, startPosY].join(),\r\n    [startPosX + hexSize * 1.5, startPosY].join(),\r\n    [startPosX + hexSize * 2, startPosY + Math.sqrt(3) * hexSize * 0.5].join(),\r\n    [startPosX + hexSize * 1.5, startPosY + Math.sqrt(3) * hexSize].join(),\r\n    [startPosX + hexSize * 0.5, startPosY + Math.sqrt(3) * hexSize].join(),\r\n    [startPosX, startPosY + Math.sqrt(3) * hexSize * 0.5].join(),\r\n  ].join(\" \");\r\n\r\n  const selectHandler = () => {\r\n    if (state.wheelbuttons[props.id].selectable) {\r\n      const payload = {\r\n        player: props.user,\r\n        opponent: props.opponent,\r\n      };\r\n      switch (props.id) {\r\n        case \"wheel-B3\":\r\n          dispatch(\"DRAW_CARD\", payload);\r\n          break;\r\n        case \"wheel-C2\":\r\n          dispatch(\"PLUS_FAERIA\", props.user);\r\n          break;\r\n        default:\r\n          dispatch(\"SELECT_LAND\", {\r\n            player: props.user,\r\n            wheelbutton_id: props.id,\r\n          });\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <g>\r\n      <defs>\r\n        <pattern\r\n          id={\"buttonimage-\" + props.id}\r\n          height=\"100%\"\r\n          width=\"100%\"\r\n          patternContentUnits=\"objectBoundingBox\"\r\n        >\r\n          <image\r\n            height=\"1\"\r\n            width=\"1\"\r\n            preserveAspectRatio=\"none\"\r\n            href={images_ui[props.id]}\r\n          />\r\n        </pattern>\r\n      </defs>\r\n      <polygon\r\n        className={props.className + selectable}\r\n        fill={\"url(#buttonimage-\" + props.id + \")\"}\r\n        id={props.id}\r\n        points={points}\r\n        onClick={selectHandler}\r\n      />\r\n    </g>\r\n  );\r\n};\r\n\r\nexport default WheelButton;\r\n","import React from \"react\";\r\nimport \"./EndTurnButton.css\";\r\nimport { useStore } from \"../../../hooks-store/store\";\r\n\r\nconst EndTurnButton = (props) => {\r\n  const dispatch = useStore()[1];\r\n\r\n  const endTurnHandler = () => {\r\n    const payload = {\r\n      player: props.user,\r\n      opponent: props.opponent,\r\n      id: props.id,\r\n    };\r\n    dispatch(\"END_TURN\", payload);\r\n  };\r\n\r\n  const enemyTurnHandler = () => {};\r\n\r\n  const btnText =\r\n    props.data.turn === 0\r\n      ? \"MULLIGAN\"\r\n      : props.opponent === props.data.current\r\n      ? \"ENEMY TURN\"\r\n      : \"END TURN\";\r\n  const btnClass =\r\n    props.opponent === props.data.current\r\n      ? \"enemyturn-button\"\r\n      : \"endturn-button\";\r\n  const btnClassText =\r\n    props.opponent === props.data.current ? \"enemyturn-text\" : \"endturn-text\";\r\n  const btnOnClick =\r\n    props.data.turn === 0 || props.opponent === props.data.current\r\n      ? enemyTurnHandler\r\n      : endTurnHandler;\r\n\r\n  return (\r\n    <g onClick={btnOnClick}>\r\n      <rect\r\n        x=\"50\"\r\n        y=\"125\"\r\n        rx=\"20\"\r\n        ry=\"20\"\r\n        width=\"200\"\r\n        height=\"50\"\r\n        className={btnClass}\r\n      />\r\n      <text x=\"150\" y=\"150\" fontSize=\"25\" className={btnClassText} dy=\".3em\">\r\n        {btnText}\r\n      </text>\r\n    </g>\r\n  );\r\n};\r\n\r\nexport default EndTurnButton;\r\n","import React from \"react\";\r\nimport WheelButton from \"./WheelButton/WheelButton\";\r\nimport EndTurnButton from \"../../UI/EndTurnButton/EndTurnButton\";\r\nimport \"./Wheel.css\";\r\nimport { useStore } from \"../../../hooks-store/store\";\r\n\r\nconst Wheel = (props) => {\r\n  const state = useStore()[0];\r\n\r\n  const hexSize = 40;\r\n  const boardTilesMap = { A: 2, B: 3, C: 2 };\r\n  const boardMaxHeight = 3;\r\n  const offsetX =\r\n    (300 -\r\n      (hexSize * 1.5 * Object.keys(boardTilesMap).length + hexSize * 0.5)) *\r\n    0.5;\r\n  const offsetY =\r\n    (300 - Math.sqrt(3) * hexSize * boardMaxHeight - Math.sqrt(3) * hexSize) *\r\n    0.5;\r\n\r\n  const wheel = Object.keys(boardTilesMap).map((column, i) => {\r\n    return [...Array(boardTilesMap[column])].map((_, j) => {\r\n      let parity = i % 2 !== 0;\r\n      return (\r\n        <WheelButton\r\n          key={\"wheel-\" + column + (j + 1)}\r\n          id={\"wheel-\" + column + (j + 1)}\r\n          className={\"wheel-\" + column + (j + 1)}\r\n          hexSize={hexSize}\r\n          startPosX={hexSize * i * 1.5 + offsetX}\r\n          startPosY={\r\n            parity\r\n              ? Math.sqrt(3) *\r\n                  hexSize *\r\n                  ((boardMaxHeight - boardTilesMap[column]) * 0.5 + j) +\r\n                Math.sqrt(3) * hexSize * 0.5 +\r\n                offsetY\r\n              : Math.sqrt(3) * hexSize * j + Math.sqrt(3) * hexSize + offsetY\r\n          }\r\n          user={props.user}\r\n          opponent={props.opponent}\r\n        />\r\n      );\r\n    });\r\n  });\r\n\r\n  const wheelOutput = !state.data[props.user].wheel_used ? (\r\n    wheel\r\n  ) : (\r\n    <EndTurnButton\r\n      data={props.data}\r\n      user={props.user}\r\n      opponent={props.opponent}\r\n      id={props.id}\r\n    />\r\n  );\r\n  const strokeColor =\r\n    props.data.current === props.opponent ? \"#962d3e\" : \"#00FA9A\";\r\n  const fillColor =\r\n    props.data.current === props.opponent ? \"#262626\" : \"#2F4F4F\";\r\n\r\n  return (\r\n    <svg width=\"300px\" height=\"300\">\r\n      <circle\r\n        cx=\"150\"\r\n        cy=\"150\"\r\n        r=\"145\"\r\n        stroke={strokeColor}\r\n        strokeWidth=\"5\"\r\n        fill={fillColor}\r\n      />\r\n      {wheelOutput}\r\n    </svg>\r\n  );\r\n};\r\n\r\nexport default Wheel;\r\n","import React from \"react\";\r\n\r\nconst Faeria = (props) => {\r\n  return (\r\n    <svg>\r\n      <g>\r\n        <circle\r\n          cx=\"50%\"\r\n          cy=\"50%\"\r\n          r=\"50\"\r\n          stroke=\"#001920\"\r\n          strokeWidth=\"5\"\r\n          fill=\"#00bae8\"\r\n        />\r\n        <text\r\n          x=\"50%\"\r\n          y=\"50%\"\r\n          stroke=\"#001920\"\r\n          strokeWidth=\"3px\"\r\n          textAnchor=\"middle\"\r\n          fontSize=\"50px\"\r\n          dy=\".3em\"\r\n        >\r\n          {props.faeria}\r\n        </text>\r\n      </g>\r\n    </svg>\r\n  );\r\n};\r\n\r\nexport default Faeria;\r\n","import React from \"react\";\r\n\r\nconst Deck = (props) => {\r\n  return (\r\n    <div style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n      <div style={{ border: \"5px solid #001920\" }}>\r\n        Deck: {props.deckcounter}\r\n      </div>\r\n      <div style={{ border: \"5px solid #001920\" }}>\r\n        Hand: {props.handcounter}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Deck;\r\n","import React from \"react\";\r\n\r\nconst Hexagon = (props) => {\r\n  const hexSize = props.hexSize;\r\n  const startPosX = props.startPosX;\r\n  const startPosY = props.startPosY;\r\n  const points = [\r\n    [startPosX + hexSize * 0.5, startPosY].join(),\r\n    [startPosX + hexSize * 1.5, startPosY].join(),\r\n    [startPosX + hexSize * 2, startPosY + Math.sqrt(3) * hexSize * 0.5].join(),\r\n    [startPosX + hexSize * 1.5, startPosY + Math.sqrt(3) * hexSize].join(),\r\n    [startPosX + hexSize * 0.5, startPosY + Math.sqrt(3) * hexSize].join(),\r\n    [startPosX, startPosY + Math.sqrt(3) * hexSize * 0.5].join(),\r\n  ].join(\" \");\r\n\r\n  return <polygon className={props.className} points={points} />;\r\n};\r\n\r\nexport default Hexagon;\r\n","import React from \"react\";\r\nimport Faeria from \"../../Game/Faeria/Faeria\";\r\nimport Deck from \"../../Game/Deck/Deck\";\r\nimport Hexagon from \"../Hexagon/Hexagon\";\r\nimport \"./Infobox.css\";\r\n\r\nconst Infobox = (props) => {\r\n  const landCount = getLandCount(props.tiles, props.player);\r\n  const align = props.align;\r\n  const hexSize = 20;\r\n  const landCounter = Object.keys(landCount).map((column, i) => {\r\n    return (\r\n      <g key={column} id={column}>\r\n        <Hexagon\r\n          className={column}\r\n          hexSize={hexSize}\r\n          startPosX={hexSize * i * 2.5 + 8}\r\n          startPosY={hexSize - hexSize * Math.sqrt(3) * 0.5}\r\n        />\r\n        <text\r\n          x={hexSize * i * 2.5 + hexSize + 8}\r\n          y={\r\n            hexSize * Math.sqrt(3) * 0.5 +\r\n            (hexSize - hexSize * Math.sqrt(3) * 0.5)\r\n          }\r\n          className={column + \"-text\"}\r\n          fontSize={hexSize}\r\n          dy=\".3em\"\r\n        >\r\n          {landCount[column]}\r\n        </text>\r\n      </g>\r\n    );\r\n  });\r\n  const info_landcounter = (\r\n    <div style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n      <svg height={hexSize * 2} width=\"208px\" display=\"block\" margin=\"auto\">\r\n        {landCounter}\r\n      </svg>\r\n    </div>\r\n  );\r\n  const info_faeria = (\r\n    <div style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n      <Faeria faeria={props.data.faeria} />\r\n    </div>\r\n  );\r\n  const info_player = (\r\n    <div style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n      <div\r\n        style={{\r\n          width: \"50%\",\r\n          border: \"5px solid #001920\",\r\n          textAlign: \"center\",\r\n        }}\r\n      >\r\n        <b>{props.data.name}</b>\r\n      </div>\r\n    </div>\r\n  );\r\n  const info =\r\n    align === \"flex-end\" ? (\r\n      <React.Fragment>\r\n        {info_landcounter}\r\n        {info_faeria}\r\n        {info_player}\r\n        <Deck\r\n          deckcounter={props.data.deck.length}\r\n          handcounter={props.data.hand.length}\r\n        />\r\n      </React.Fragment>\r\n    ) : (\r\n      <React.Fragment>\r\n        <Deck\r\n          deckcounter={props.data.deck.length}\r\n          handcounter={props.data.hand.length}\r\n        />\r\n        {info_player}\r\n        {info_faeria}\r\n        {info_landcounter}\r\n      </React.Fragment>\r\n    );\r\n  return (\r\n    <div\r\n      style={{\r\n        alignSelf: align,\r\n        margin: \"25px\",\r\n      }}\r\n    >\r\n      {info}\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction getLandCount(tiles, player) {\r\n  let lands = { f: 0, l: 0, m: 0, d: 0 };\r\n  Object.values(tiles).forEach((tile) => {\r\n    if (tile.owner === player && tile.type.charAt(0) !== \"p\") {\r\n      lands[tile.type.charAt(0)] += 1;\r\n    }\r\n  });\r\n  return lands;\r\n}\r\n\r\nexport default Infobox;\r\n","import React, { useState } from \"react\";\r\nimport \"./MulliganModal.css\";\r\nimport Card from \"../../Game/Hand/Card/Card\";\r\nimport { useStore } from \"../../../hooks-store/store\";\r\nimport axios from \"axios\";\r\n\r\nconst MulliganModal = (props) => {\r\n  const [state, dispatch] = useStore();\r\n  const [initialHand, setInitialHand] = useState({\r\n    0: false,\r\n    1: false,\r\n    2: false,\r\n  });\r\n  const [btnDisabled, setBtnDisabled] = useState(false);\r\n\r\n  const swapHandler = (event) => {\r\n    const newHand = JSON.parse(JSON.stringify(initialHand));\r\n    newHand[event.target.id] = !newHand[event.target.id];\r\n    setInitialHand(newHand);\r\n  };\r\n\r\n  const classname = (index) => {\r\n    return !initialHand[index] ? \"card-mulligan\" : \"card-mulligan-selected\";\r\n  };\r\n\r\n  const cards = state.data[props.user].deck.slice(0, 3).map((id, index) => {\r\n    return (\r\n      <Card\r\n        key={id}\r\n        id={id}\r\n        index={index}\r\n        data={state.data[props.user].cards[id]}\r\n        height=\"486px\"\r\n        width=\"360px\"\r\n        clickAction={swapHandler}\r\n        classname={classname(index)}\r\n        user={props.user}\r\n        opponent={props.opponent}\r\n        owner={props.user}\r\n      />\r\n    );\r\n  });\r\n\r\n  const confirmHandler = () => {\r\n    if (btnDisabled) {\r\n      return;\r\n    }\r\n    setBtnDisabled(true);\r\n    const newState = JSON.parse(JSON.stringify(state));\r\n    const getdata = new FormData();\r\n    getdata.append(\"id\", props.id);\r\n    axios\r\n      .post(\"/faeria/Faeria/utils/getState.php\", getdata)\r\n      .then((res) => {\r\n        const prevState = JSON.parse(res.data);\r\n        newState.data[props.opponent] = prevState.data[props.opponent];\r\n        const prevHand = newState.data[props.user].deck.slice(0, 3);\r\n        const cardsToReplace = [];\r\n        const newHand = [];\r\n        for (let i = 0; i < prevHand.length; i++) {\r\n          if (initialHand[i]) {\r\n            cardsToReplace.push(\r\n              newState.data[props.user].cards[prevHand[i]].id\r\n            );\r\n          } else {\r\n            newHand.push(parseInt(prevHand[i]));\r\n          }\r\n        }\r\n        const replacePool = Object.entries(\r\n          newState.data[props.user].cards\r\n        ).filter(\r\n          (card) =>\r\n            !cardsToReplace.includes(card[1].id) &&\r\n            !newHand.includes(parseInt(card[0])) &&\r\n            parseInt(card[0]) !== 0\r\n        );\r\n        for (let i = 0; i < cardsToReplace.length; i++) {\r\n          let random = Math.floor(Math.random() * replacePool.length);\r\n          newHand.push(parseInt(replacePool[random][0]));\r\n          replacePool.splice(random, 1);\r\n        }\r\n        const shuffledDeck = [];\r\n        const prevDeck = newState.data[props.user].deck.filter(\r\n          (card) => !newHand.includes(card)\r\n        );\r\n        const deckLength = prevDeck.length;\r\n        for (let i = 0; i < deckLength; i++) {\r\n          let random = Math.floor(Math.random() * prevDeck.length);\r\n          shuffledDeck.push(prevDeck[random]);\r\n          prevDeck.splice(random, 1);\r\n        }\r\n        if (props.user === \"player2\") {\r\n          newHand.push(0);\r\n        }\r\n        newState.data[props.user].deck = shuffledDeck;\r\n        newState.data[props.user].hand = newHand;\r\n        newState.data[props.user].mulligan = false;\r\n        const postdata = new FormData();\r\n        postdata.append(\"react_state\", JSON.stringify(newState));\r\n        postdata.append(\"id\", props.id);\r\n        axios\r\n          .post(\r\n            \"/faeria/Faeria/utils/saveState.php\",\r\n            postdata\r\n          )\r\n          .then(() => {\r\n            dispatch(\"CONFIRM_MULLIGAN\", newState);\r\n          })\r\n          .catch((error) => {\r\n            console.log(\"Network Error\", error.message);\r\n          });\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Network Error\", error.message);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"modal\">\r\n      <div style={{ justifyContent: \"center\", display: \"flex\", height: \"75%\" }}>\r\n        {cards}\r\n      </div>\r\n      <div style={{ justifyContent: \"center\", display: \"flex\" }}>\r\n        <div className=\"modal-confirm\" onClick={confirmHandler}>\r\n          CONFIRM\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MulliganModal;\r\n","import React from \"react\";\r\nimport \"./ChooseModal.css\";\r\nimport Card from \"../../Game/Hand/Card/Card\";\r\nimport { useStore } from \"../../../hooks-store/store\";\r\n\r\nconst ChooseModal = (props) => {\r\n  const [state, dispatch] = useStore();\r\n\r\n  const chooseHandler = (event) => {\r\n    const payload = {\r\n      id: state.chooseParams.cards[event.target.id],\r\n      tile: state.chooseParams.tile,\r\n      player: props.user,\r\n      opponent: props.opponent,\r\n    };\r\n    dispatch(\"CHOOSE_CARD\", payload);\r\n  };\r\n\r\n  const cards = state.chooseParams.cards.map((id, index) => {\r\n    return (\r\n      <Card\r\n        key={id}\r\n        id={id}\r\n        index={index}\r\n        data={{ id: id }}\r\n        height=\"486px\"\r\n        width=\"360px\"\r\n        clickAction={chooseHandler}\r\n        classname=\"card-choose\"\r\n        user={props.user}\r\n        opponent={props.opponent}\r\n        owner={props.user}\r\n      />\r\n    );\r\n  });\r\n\r\n  return (\r\n    <div className=\"modal\">\r\n      <div style={{ justifyContent: \"center\", display: \"flex\", height: \"75%\" }}>\r\n        {cards}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChooseModal;\r\n","import React from \"react\";\r\nimport \"./EndGameButton.css\";\r\nimport { useStore } from \"../../../hooks-store/store\";\r\n\r\nconst EndGameButton = (props) => {\r\n  const dispatch = useStore()[1];\r\n\r\n  const endGameHandler = () => {\r\n    const payload = {\r\n      opponent: props.opponent,\r\n    };\r\n    dispatch(\"END_GAME\", payload);\r\n  };\r\n\r\n  return (\r\n    <svg width=\"200px\" height=\"60px\">\r\n      <g onClick={endGameHandler}>\r\n        <rect\r\n          x=\"10\"\r\n          y=\"5\"\r\n          rx=\"20\"\r\n          ry=\"20\"\r\n          width=\"180\"\r\n          height=\"50\"\r\n          className=\"endgame-button\"\r\n        />\r\n        <text x=\"100\" y=\"30\" fontSize=\"25\" className=\"endgame-text\" dy=\".3em\">\r\n          SCOOP\r\n        </text>\r\n      </g>\r\n    </svg>\r\n  );\r\n};\r\n\r\nexport default EndGameButton;\r\n","import React, { useEffect } from \"react\";\r\nimport Board from \"./Board/Board\";\r\nimport Hand from \"./Hand/Hand\";\r\nimport Wheel from \"./Wheel/Wheel\";\r\nimport Infobox from \"../UI/Infobox/Infobox\";\r\nimport MulliganModal from \"../UI/MulliganModal/MulliganModal\";\r\nimport ChooseModal from \"../UI/ChooseModal/ChooseModal\";\r\nimport Card from \"./Hand/Card/Card\";\r\nimport EndGameButton from \"../UI/EndGameButton/EndGameButton\";\r\nimport { useStore } from \"../../hooks-store/store\";\r\nimport axios from \"axios\";\r\n\r\nconst Game = () => {\r\n  const [state, dispatch] = useStore();\r\n  const user = document.getElementById(\"user\").value;\r\n  const opponent = document.getElementById(\"opponent\").value;\r\n  const id = document.getElementById(\"game_id\").value;\r\n\r\n  useEffect(() => {\r\n    const payload = { player: user, opponent: opponent, id: id };\r\n    if (!state.data[user].shuffle) {\r\n      dispatch(\"SHUFFLE_DECK\", payload);\r\n    }\r\n    if (\r\n      !state.data[user].mulligan &&\r\n      !state.data[opponent].mulligan &&\r\n      state.data.status.turn === 0 &&\r\n      user === \"player1\"\r\n    ) {\r\n      dispatch(\"START_GAME\", payload);\r\n    }\r\n    if (\r\n      (state.data.status.current === opponent && !state.data[user].mulligan) ||\r\n      (!state.data[user].mulligan && state.data[opponent].mulligan)\r\n    ) {\r\n      const timer = setTimeout(() => {\r\n        const formdata = new FormData();\r\n        formdata.append(\"id\", id);\r\n        let timestamp = Date.now();\r\n        axios\r\n          .post(\r\n            \"/faeria/Faeria/utils/getState.php?timestamp=\" + timestamp,\r\n            formdata\r\n          )\r\n          .then((res) => {\r\n            dispatch(\"SET_DATA\", JSON.parse(res.data));\r\n          })\r\n          .catch((error) => {\r\n            console.log(\"Network Error\", error.message);\r\n          });\r\n      }, 1000);\r\n      return () => clearTimeout(timer);\r\n    }\r\n  });\r\n\r\n  const mulligan = state.data[user].mulligan ? (\r\n    <MulliganModal user={user} opponent={opponent} id={id} />\r\n  ) : null;\r\n\r\n  const choose =\r\n    state.data.status.current === user &&\r\n    state.currentAction === \"event_choose_occupant\" ? (\r\n      <ChooseModal user={user} opponent={opponent} id={id} />\r\n    ) : null;\r\n\r\n  const highlighted_card = state.highlightedOccupant ? (\r\n    <Card\r\n      id={id}\r\n      index={0}\r\n      data={state.cardLibrary[state.highlightedOccupant]}\r\n      classname=\"card-highlight\"\r\n      width=\"180px\"\r\n      height=\"246px\"\r\n      user={user}\r\n      opponent={opponent}\r\n      owner={user}\r\n    />\r\n  ) : null;\r\n\r\n  const output = state.data.status.finished ? (\r\n    <div\r\n      style={{ display: \"flex\", flexDirection: \"column\", alignItems: \"center\" }}\r\n    >\r\n      <h1 style={{ textAlign: \"center\" }}>\r\n        WINNER: {state.data[state.data.status.winner].name}\r\n      </h1>\r\n      <img src=\"assets/images/ui/cheekwinner.png\" width=\"50%\"></img>\r\n    </div>\r\n  ) : (\r\n    <div style={{ display: \"flex\", height: \"100vh\" }}>\r\n      {mulligan}\r\n      {choose}\r\n      <div\r\n        style={{\r\n          width: \"20vw\",\r\n          position: \"relative\",\r\n          display: \"flex\",\r\n          justifyContent: \"center\",\r\n          flexWrap: \"wrap\",\r\n        }}\r\n      >\r\n        <Infobox\r\n          align=\"flex-start\"\r\n          data={state.data[opponent]}\r\n          tiles={state.data.board.tiles}\r\n          player={opponent}\r\n        />\r\n        <Infobox\r\n          align=\"flex-end\"\r\n          data={state.data[user]}\r\n          tiles={state.data.board.tiles}\r\n          player={user}\r\n        />\r\n      </div>\r\n      <div\r\n        style={{\r\n          width: \"60vw\",\r\n          display: \"flex\",\r\n          justifyContent: \"center\",\r\n          flexWrap: \"wrap\",\r\n        }}\r\n      >\r\n        <Hand\r\n          data={state.data[opponent]}\r\n          owner={opponent}\r\n          height=\"36px\"\r\n          align=\"flex-start\"\r\n          user={user}\r\n          opponent={opponent}\r\n        />\r\n        <Board data={state.data.board} user={user} opponent={opponent} />\r\n        <Hand\r\n          data={state.data[user]}\r\n          owner={user}\r\n          height=\"166px\"\r\n          align=\"flex-end\"\r\n          user={user}\r\n          opponent={opponent}\r\n        />\r\n      </div>\r\n      <div\r\n        style={{\r\n          width: \"20vw\",\r\n          display: \"flex\",\r\n          alignItems: \"center\",\r\n          flexDirection: \"column\",\r\n        }}\r\n      >\r\n        <div style={{ height: \"10vh\" }}>\r\n          <EndGameButton opponent={opponent} />\r\n        </div>\r\n        <div style={{ height: \"40vh\" }}>{highlighted_card}</div>\r\n        <div style={{ height: \"50vh\" }}>\r\n          <Wheel\r\n            data={state.data.status}\r\n            user={user}\r\n            opponent={opponent}\r\n            id={id}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  return output;\r\n};\r\n\r\nexport default Game;\r\n","import React from \"react\";\nimport Game from \"./components/Game/Game\";\n\nconst app = () => {\n  return <Game />;\n};\n\nexport default app;\n","export default class EventProcessor {\r\n  constructor(state, data) {\r\n    this.state = state;\r\n    this.data = data;\r\n    this.eventLibrary = {\r\n      0: \"processEvent_0\",\r\n      5: \"processEvent_5\",\r\n      6: \"processEvent_6\",\r\n      7: \"processEvent_7\",\r\n      9: \"processEvent_9\",\r\n      11: \"processEvent_11\",\r\n      17: \"processEvent_17\",\r\n      23: \"processEvent_23\",\r\n      34: \"processEvent_34\",\r\n      35: \"processEvent_35\",\r\n      46: \"processEvent_46\",\r\n      48: \"processEvent_48\",\r\n      49: \"processEvent_49\",\r\n      51: \"processEvent_51\",\r\n      52: \"processEvent_52\",\r\n    };\r\n    this.summonEffectLibrary = {\r\n      8: \"processSummonEffect_8\",\r\n      14: \"processSummonEffect_14\",\r\n      25: \"processSummonEffect_25\",\r\n      27: \"processSummonEffect_27\",\r\n      30: \"processSummonEffect_30\",\r\n      36: \"processSummonEffect_36\",\r\n      37: \"processSummonEffect_37\",\r\n      38: \"processSummonEffect_38\",\r\n    };\r\n    this.giftEffectLibrary = {\r\n      1: \"processGiftEffect_1\",\r\n      16: \"processGiftEffect_16\",\r\n      22: \"processGiftEffect_22\",\r\n      26: \"processGiftEffect_26\",\r\n      31: \"processGiftEffect_31\",\r\n      39: \"processGiftEffect_39\",\r\n    };\r\n    this.lastwordEffectLibrary = {\r\n      3: \"processLastwordEffect_3\",\r\n      24: \"processLastwordEffect_24\",\r\n      41: \"processLastwordEffect_41\",\r\n      44: \"processLastwordEffect_44\",\r\n      54: \"processLastwordEffect_54\",\r\n    };\r\n    this.productionEffectLibrary = {\r\n      19: \"processProductionEffect_19\",\r\n      20: \"processProductionEffect_20\",\r\n      40: \"processProductionEffect_40\",\r\n      47: \"processProductionEffect_47\",\r\n    };\r\n    this.specialEffectLibrary = {\r\n      37: \"processSpecialEffect_37\",\r\n      38: \"processSpecialEffect_38\",\r\n      39: \"processSpecialEffect_39\",\r\n      43: \"processSpecialEffect_43\",\r\n      53: \"processSpecialEffect_53\",\r\n    };\r\n  }\r\n\r\n  initEventLogic() {\r\n    const newHand = this.state.hand;\r\n    newHand[this.data.hand_id].selected = !newHand[this.data.hand_id].selected;\r\n    if (newHand[this.data.hand_id].selected) {\r\n      this[\r\n        this.eventLibrary[\r\n          this.state.data[this.data.player].cards[this.data.card_id].id\r\n        ]\r\n      ](\"init\");\r\n    } else {\r\n      this[\r\n        this.eventLibrary[\r\n          this.state.data[this.data.player].cards[this.data.card_id].id\r\n        ]\r\n      ](\"revert\");\r\n    }\r\n    Object.keys(newHand).forEach((key) => {\r\n      if (parseInt(key) !== this.data.hand_id) {\r\n        newHand[key].selectable = !newHand[key].selectable;\r\n      }\r\n    });\r\n    this.state.hand = newHand;\r\n    if (this.state.data[this.data.player].wheel_neutral_counter !== 1) {\r\n      Object.keys(this.state.wheelbuttons).forEach((key) => {\r\n        if (newHand[this.data.hand_id].selected) {\r\n          this.state.wheelbuttons[key].selectable = false;\r\n        } else {\r\n          this.state.wheelbuttons[key].selectable = true;\r\n        }\r\n      });\r\n    } else {\r\n      if (newHand[this.data.hand_id].selected) {\r\n        this.state.wheelbuttons[\"wheel-B2\"].selectable = true;\r\n      } else {\r\n        this.state.wheelbuttons[\"wheel-B2\"].selectable = true;\r\n      }\r\n    }\r\n    return this.state;\r\n  }\r\n\r\n  handleEventLogic() {\r\n    const selected_card_id = this.getSelectedCard();\r\n    this[\r\n      this.eventLibrary[\r\n        this.state.data[this.data.player].cards[\r\n          this.state.data[this.data.player].hand[selected_card_id - 1]\r\n        ].id\r\n      ]\r\n    ](\"handle\");\r\n    const newHand = this.state.hand;\r\n    newHand[selected_card_id].selected = !newHand[selected_card_id].selected;\r\n    if (\r\n      this.state.currentAction !== \"event_move_occupant\" &&\r\n      this.state.currentAction !== \"event_choose_occupant\"\r\n    ) {\r\n      Object.keys(newHand).forEach((key) => {\r\n        newHand[key].selectable = true;\r\n      });\r\n      if (this.state.data[this.data.player].wheel_neutral_counter !== 1) {\r\n        Object.keys(this.state.wheelbuttons).forEach((key) => {\r\n          this.state.wheelbuttons[key].selectable = true;\r\n        });\r\n      } else {\r\n        this.state.wheelbuttons[\"wheel-B2\"].selectable = true;\r\n      }\r\n      this.state.currentAction = \"\";\r\n    }\r\n    this.state.hand = newHand;\r\n    this.state.data[this.data.player].faeria -=\r\n      this.state.data[this.data.player].cards[\r\n        this.state.data[this.data.player].hand[selected_card_id - 1]\r\n      ].faeria_cost;\r\n    this.state.data[this.data.player].hand.splice(selected_card_id - 1, 1);\r\n    return this.state;\r\n  }\r\n\r\n  processSummonEffect(occupant) {\r\n    this[this.summonEffectLibrary[occupant.id]]();\r\n    return this.state;\r\n  }\r\n\r\n  initGiftEffect(occupant) {\r\n    this[this.giftEffectLibrary[occupant.id]](\"init\", occupant);\r\n    return this.state;\r\n  }\r\n\r\n  processGiftEffect(selected_occupant_id) {\r\n    const occupant = this.state.data.board.tiles[selected_occupant_id].occupant;\r\n    this[this.giftEffectLibrary[occupant.id]](\"handle\", selected_occupant_id);\r\n    this.state.tiles[selected_occupant_id].occupantSelected = false;\r\n    this.state.currentAction = \"\";\r\n    Object.keys(this.state.hand).forEach((key) => {\r\n      this.state.hand[key].selectable = true;\r\n    });\r\n    if (this.state.data[this.data.player].wheel_neutral_counter !== 1) {\r\n      Object.keys(this.state.wheelbuttons).forEach((key) => {\r\n        this.state.wheelbuttons[key].selectable = true;\r\n      });\r\n    } else {\r\n      this.state.wheelbuttons[\"wheel-B2\"].selectable = true;\r\n    }\r\n    return this.state;\r\n  }\r\n\r\n  processLastwordEffect(occupant, tile) {\r\n    this[this.lastwordEffectLibrary[occupant.id]](occupant, tile);\r\n    return this.state;\r\n  }\r\n\r\n  processProductionEffect(occupant, tile) {\r\n    this[this.productionEffectLibrary[occupant.id]](tile);\r\n    return this.state;\r\n  }\r\n\r\n  processSpecialEffect(id, params) {\r\n    this[this.specialEffectLibrary[id]](params);\r\n    return this.state;\r\n  }\r\n\r\n  //HELPERS\r\n\r\n  setSelectStateForOccupants(friendly, enemy) {\r\n    const playerCheck = [];\r\n    if (friendly) {\r\n      playerCheck.push(this.data.player);\r\n    }\r\n    if (enemy) {\r\n      playerCheck.push(this.data.opponent);\r\n    }\r\n    Object.keys(this.state.data.board.tiles).forEach((key) => {\r\n      if (\r\n        playerCheck.includes(\r\n          this.state.data.board.tiles[key].occupant.player\r\n        ) &&\r\n        !this.state.data.board.tiles[key].occupant.divine\r\n      ) {\r\n        this.state.tiles[key].occupantSelectable = true;\r\n      } else {\r\n        this.state.tiles[key].occupantSelectable = false;\r\n      }\r\n    });\r\n  }\r\n\r\n  setSelectStateForOccupantsDivine(friendly, enemy) {\r\n    const playerCheck = [];\r\n    if (friendly) {\r\n      playerCheck.push(this.data.player);\r\n    }\r\n    if (enemy) {\r\n      playerCheck.push(this.data.opponent);\r\n    }\r\n    Object.keys(this.state.data.board.tiles).forEach((key) => {\r\n      if (\r\n        playerCheck.includes(this.state.data.board.tiles[key].occupant.player)\r\n      ) {\r\n        this.state.tiles[key].occupantSelectable = true;\r\n      } else {\r\n        this.state.tiles[key].occupantSelectable = false;\r\n      }\r\n    });\r\n  }\r\n\r\n  setSelectStateForConditionalOccupants(friendly, enemy, attack) {\r\n    const playerCheck = [];\r\n    if (friendly) {\r\n      playerCheck.push(this.data.player);\r\n    }\r\n    if (enemy) {\r\n      playerCheck.push(this.data.opponent);\r\n    }\r\n    Object.keys(this.state.data.board.tiles).forEach((key) => {\r\n      if (\r\n        playerCheck.includes(\r\n          this.state.data.board.tiles[key].occupant.player\r\n        ) &&\r\n        !this.state.data.board.tiles[key].occupant.divine &&\r\n        this.state.data.board.tiles[key].occupant.attack <= attack\r\n      ) {\r\n        this.state.tiles[key].occupantSelectable = true;\r\n      } else {\r\n        this.state.tiles[key].occupantSelectable = false;\r\n      }\r\n    });\r\n  }\r\n\r\n  getSelectedCard() {\r\n    return parseInt(\r\n      Object.keys(this.state.hand).filter(\r\n        (key) => this.state.hand[key].selected\r\n      )[0]\r\n    );\r\n  }\r\n\r\n  getRemoveOccupant(tile) {\r\n    //Balloon Cheek\r\n    this.processSpecialEffect(43, {\r\n      action: \"remove\",\r\n      tile: tile,\r\n      attack: -1,\r\n    });\r\n    //Balloon Cheek\r\n\r\n    return {\r\n      player: \"\",\r\n      id: 0,\r\n      type: \"\",\r\n      faeria_cost: 0,\r\n      land_cost: {\r\n        forest: 0,\r\n        desert: 0,\r\n        mountain: 0,\r\n        lake: 0,\r\n        wild: 0,\r\n      },\r\n      attack: 0,\r\n      base_attack: 0,\r\n      health: 0,\r\n      base_health: 0,\r\n      movement: {\r\n        range: 1,\r\n        haste: true,\r\n        dash: 0,\r\n        special: {\r\n          aquatic: false,\r\n          flying: false,\r\n          jump: false,\r\n        },\r\n      },\r\n      taunt: false,\r\n      divine: false,\r\n      protection: false,\r\n      ranged: false,\r\n      canCollect: false,\r\n      hasMoved: false,\r\n      hasDashed: false,\r\n      hasAttacked: false,\r\n      effects: {\r\n        summon: false,\r\n        gift: false,\r\n        lastword: false,\r\n        production: false,\r\n      },\r\n      effectUsed: false,\r\n    };\r\n  }\r\n\r\n  setSelectStateForBuildTiles(landtype) {\r\n    const newTileState = this.state.tiles;\r\n    const anyAdjacent = (tile) =>\r\n      this.state.data.board.tiles[tile].owner === this.data.player;\r\n    const anyAdjacentFromOccupant = (tile) =>\r\n      this.state.data.board.tiles[tile].occupant.player === this.data.player &&\r\n      this.state.data.board.tiles[tile].type !== \"none\";\r\n    const god_key = Object.keys(this.state.gods).filter(\r\n      (god) => this.state.gods[god].player === this.data.player\r\n    );\r\n    Object.keys(newTileState).forEach((key) => {\r\n      let tileType = this.state.data.board.tiles[key].type;\r\n      let tileOwner = this.state.data.board.tiles[key].owner;\r\n      if (\r\n        tileType === \"none\" ||\r\n        (tileType === \"prairie\" && tileOwner === this.data.player)\r\n      ) {\r\n        if (\r\n          newTileState[key].adjacent.some(anyAdjacent) ||\r\n          newTileState[key].adjacent.some(anyAdjacentFromOccupant) ||\r\n          this.state.gods[god_key].adjacent.includes(key)\r\n        ) {\r\n          if (\r\n            !this.state.data.board.tiles[key].occupant.movement.special.aquatic\r\n          ) {\r\n            newTileState[key].selectable = true;\r\n          } else if (landtype === \"lake\") {\r\n            newTileState[key].selectable = true;\r\n          }\r\n        }\r\n      }\r\n    });\r\n    this.state.tiles = newTileState;\r\n  }\r\n\r\n  setSelectStateForAllTiles(selectable) {\r\n    Object.keys(this.state.tiles).forEach((key) => {\r\n      this.state.tiles[key].selectable = selectable;\r\n    });\r\n  }\r\n\r\n  setSelectStateForGods(selectable) {\r\n    Object.keys(this.state.gods).forEach((key) => {\r\n      this.state.gods[key].selectable = selectable;\r\n    });\r\n  }\r\n\r\n  setSelectStateForHand(selectable) {\r\n    Object.keys(this.state.hand).forEach((key) => {\r\n      this.state.hand[key].selectable = selectable;\r\n    });\r\n  }\r\n\r\n  setSelectStateForWheel(selectable) {\r\n    Object.keys(this.state.wheelbuttons).forEach((key) => {\r\n      this.state.wheelbuttons[key].selectable = selectable;\r\n    });\r\n  }\r\n\r\n  getGodTile() {\r\n    const god = {\r\n      player1: \"D6\",\r\n      player2: \"D0\",\r\n    };\r\n    return god[this.data.player];\r\n  }\r\n\r\n  getLandCostForType(card, type) {\r\n    return this.state.data[this.data.player].cards[card].land_cost[type];\r\n  }\r\n\r\n  getLandCostForOccupant(tile, type) {\r\n    return this.state.data.board.tiles[tile].occupant.land_cost[type];\r\n  }\r\n\r\n  handleCustomDrawLogic(index, length, dmgAllowed) {\r\n    if (index !== -1) {\r\n      if (this.state.data[this.data.player].hand.length < length) {\r\n        this.state.data[this.data.player].hand.push(\r\n          this.state.data[this.data.player].deck.splice(index, 1)[0]\r\n        );\r\n      } else {\r\n        this.state.data[this.data.player].deck.splice(index, 1);\r\n      }\r\n    } else if (dmgAllowed) {\r\n      this.state.data.board.gods[this.getGodTile()].health -= ++this.state.data[\r\n        this.data.player\r\n      ].health_dmg;\r\n      if (this.state.data.board.gods[this.getGodTile()].health <= 0) {\r\n        this.state.data.status.finished = true;\r\n        this.state.data.status.winner = this.data.opponent;\r\n      }\r\n    }\r\n  }\r\n\r\n  getRandomTiles() {\r\n    const randomTiles = Object.keys(this.state.data.board.tiles);\r\n    for (let i = randomTiles.length - 1; i > 0; i--) {\r\n      const j = Math.floor(Math.random() * (i + 1));\r\n      [randomTiles[i], randomTiles[j]] = [randomTiles[j], randomTiles[i]];\r\n    }\r\n    return randomTiles;\r\n  }\r\n\r\n  getOccupantByID(id, params = {}) {\r\n    switch (id) {\r\n      case 10:\r\n        return {\r\n          player: this.data.player,\r\n          id: 10,\r\n          type: \"creature\",\r\n          faeria_cost: 1,\r\n          land_cost: { forest: 0, desert: 0, mountain: 0, lake: 1, wild: 0 },\r\n          attack: 1,\r\n          base_attack: 1,\r\n          health: 1,\r\n          base_health: 1,\r\n          movement: {\r\n            range: 1,\r\n            haste: false,\r\n            dash: 0,\r\n            special: {\r\n              aquatic: true,\r\n              flying: false,\r\n              jump: false,\r\n            },\r\n          },\r\n          taunt: false,\r\n          divine: false,\r\n          protection: false,\r\n          ranged: false,\r\n          canCollect: false,\r\n          hasMoved: true,\r\n          hasDashed: false,\r\n          hasAttacked: true,\r\n          effects: {\r\n            summon: false,\r\n            gift: false,\r\n            lastword: false,\r\n            production: false,\r\n          },\r\n          effectUsed: false,\r\n        };\r\n      case 12:\r\n        return {\r\n          player: params.player,\r\n          id: 12,\r\n          type: \"creature\",\r\n          faeria_cost: 2,\r\n          land_cost: { forest: 0, desert: 0, mountain: 0, lake: 2, wild: 0 },\r\n          attack: 1,\r\n          base_attack: 1,\r\n          health: 1,\r\n          base_health: 1,\r\n          movement: {\r\n            range: 1,\r\n            haste: false,\r\n            dash: 0,\r\n            special: {\r\n              aquatic: false,\r\n              flying: false,\r\n              jump: false,\r\n            },\r\n          },\r\n          taunt: true,\r\n          divine: true,\r\n          protection: true,\r\n          ranged: false,\r\n          canCollect: false,\r\n          hasMoved: true,\r\n          hasDashed: false,\r\n          hasAttacked: true,\r\n          effects: {\r\n            summon: false,\r\n            gift: false,\r\n            lastword: false,\r\n            production: false,\r\n          },\r\n          effectUsed: false,\r\n        };\r\n      case 13:\r\n        return {\r\n          player: this.data.player,\r\n          id: 13,\r\n          type: \"creature\",\r\n          faeria_cost: 4,\r\n          land_cost: { forest: 0, desert: 0, mountain: 0, lake: 2, wild: 0 },\r\n          attack: 6,\r\n          base_attack: 6,\r\n          health: 4,\r\n          base_health: 4,\r\n          movement: {\r\n            range: 1,\r\n            haste: false,\r\n            dash: 0,\r\n            special: {\r\n              aquatic: false,\r\n              flying: false,\r\n              jump: false,\r\n            },\r\n          },\r\n          taunt: false,\r\n          divine: false,\r\n          protection: false,\r\n          ranged: false,\r\n          canCollect: params.canCollect,\r\n          hasMoved: params.hasMoved,\r\n          hasDashed: false,\r\n          hasAttacked: params.hasAttacked,\r\n          effects: {\r\n            summon: false,\r\n            gift: false,\r\n            lastword: false,\r\n            production: false,\r\n          },\r\n          effectUsed: false,\r\n        };\r\n      case 21:\r\n        return {\r\n          player: params.player,\r\n          id: 21,\r\n          type: \"creature\",\r\n          faeria_cost: 2,\r\n          land_cost: { forest: 0, desert: 0, mountain: 2, lake: 0, wild: 0 },\r\n          attack: 2,\r\n          base_attack: 2,\r\n          health: 1,\r\n          base_health: 1,\r\n          movement: {\r\n            range: 1,\r\n            haste: false,\r\n            dash: 0,\r\n            special: {\r\n              aquatic: false,\r\n              flying: true,\r\n              jump: false,\r\n            },\r\n          },\r\n          taunt: false,\r\n          divine: false,\r\n          protection: false,\r\n          ranged: false,\r\n          canCollect: false,\r\n          hasMoved: true,\r\n          hasDashed: false,\r\n          hasAttacked: true,\r\n          effects: {\r\n            summon: false,\r\n            gift: false,\r\n            lastword: false,\r\n            production: false,\r\n          },\r\n          effectUsed: false,\r\n        };\r\n      case 28:\r\n        return {\r\n          player: this.data.player,\r\n          id: 28,\r\n          type: \"creature\",\r\n          faeria_cost: 2,\r\n          land_cost: { forest: 1, desert: 0, mountain: 0, lake: 0, wild: 0 },\r\n          attack: 1,\r\n          base_attack: 1,\r\n          health: 2,\r\n          base_health: 2,\r\n          movement: {\r\n            range: 1,\r\n            haste: false,\r\n            dash: 0,\r\n            special: {\r\n              aquatic: false,\r\n              flying: false,\r\n              jump: false,\r\n            },\r\n          },\r\n          taunt: false,\r\n          divine: false,\r\n          protection: false,\r\n          ranged: false,\r\n          canCollect: false,\r\n          hasMoved: true,\r\n          hasDashed: false,\r\n          hasAttacked: true,\r\n          effects: {\r\n            summon: false,\r\n            gift: false,\r\n            lastword: false,\r\n            production: false,\r\n          },\r\n          effectUsed: false,\r\n        };\r\n      case 40:\r\n        return {\r\n          player: params.player,\r\n          id: 40,\r\n          type: \"creature\",\r\n          faeria_cost: 4,\r\n          land_cost: { forest: 0, desert: 1, mountain: 0, lake: 0, wild: 0 },\r\n          attack: 3,\r\n          base_attack: 3,\r\n          health: 5,\r\n          base_health: 5,\r\n          movement: {\r\n            range: 1,\r\n            haste: false,\r\n            dash: 0,\r\n            special: {\r\n              aquatic: false,\r\n              flying: false,\r\n              jump: false,\r\n            },\r\n          },\r\n          taunt: false,\r\n          divine: false,\r\n          protection: false,\r\n          ranged: false,\r\n          canCollect: false,\r\n          hasMoved: true,\r\n          hasDashed: false,\r\n          hasAttacked: true,\r\n          effects: {\r\n            summon: false,\r\n            gift: false,\r\n            lastword: false,\r\n            production: true,\r\n          },\r\n          effectUsed: false,\r\n        };\r\n      case 41:\r\n        return {\r\n          player: params.player,\r\n          id: 41,\r\n          type: \"creature\",\r\n          faeria_cost: 2,\r\n          land_cost: { forest: 0, desert: 1, mountain: 0, lake: 0, wild: 0 },\r\n          attack: 1,\r\n          base_attack: 1,\r\n          health: 1,\r\n          base_health: 1,\r\n          movement: {\r\n            range: 1,\r\n            haste: false,\r\n            dash: 0,\r\n            special: {\r\n              aquatic: false,\r\n              flying: true,\r\n              jump: false,\r\n            },\r\n          },\r\n          taunt: false,\r\n          divine: false,\r\n          protection: false,\r\n          ranged: false,\r\n          canCollect: false,\r\n          hasMoved: true,\r\n          hasDashed: false,\r\n          hasAttacked: true,\r\n          effects: {\r\n            summon: false,\r\n            gift: false,\r\n            lastword: true,\r\n            production: false,\r\n          },\r\n          effectUsed: false,\r\n        };\r\n      case 45:\r\n        return {\r\n          player: params.player,\r\n          id: 45,\r\n          type: \"creature\",\r\n          faeria_cost: 2,\r\n          land_cost: { forest: 0, desert: 2, mountain: 0, lake: 0, wild: 0 },\r\n          attack: 2,\r\n          base_attack: 2,\r\n          health: 2,\r\n          base_health: 2,\r\n          movement: {\r\n            range: 2,\r\n            haste: false,\r\n            dash: 0,\r\n            special: {\r\n              aquatic: false,\r\n              flying: true,\r\n              jump: false,\r\n            },\r\n          },\r\n          taunt: false,\r\n          divine: false,\r\n          protection: false,\r\n          ranged: false,\r\n          canCollect: false,\r\n          hasMoved: true,\r\n          hasDashed: false,\r\n          hasAttacked: true,\r\n          effects: {\r\n            summon: false,\r\n            gift: false,\r\n            lastword: false,\r\n            production: false,\r\n          },\r\n          effectUsed: false,\r\n        };\r\n      case 55:\r\n        return {\r\n          player: params.player,\r\n          id: 55,\r\n          type: \"creature\",\r\n          faeria_cost: 2,\r\n          land_cost: { forest: 0, desert: 0, mountain: 0, lake: 0, wild: 0 },\r\n          attack: 2,\r\n          base_attack: 2,\r\n          health: 1,\r\n          base_health: 1,\r\n          movement: {\r\n            range: 1,\r\n            haste: true,\r\n            dash: 0,\r\n            special: {\r\n              aquatic: false,\r\n              flying: false,\r\n              jump: true,\r\n            },\r\n          },\r\n          taunt: false,\r\n          divine: false,\r\n          protection: false,\r\n          ranged: false,\r\n          canCollect: true,\r\n          hasMoved: false,\r\n          hasDashed: false,\r\n          hasAttacked: false,\r\n          effects: {\r\n            summon: false,\r\n            gift: false,\r\n            lastword: false,\r\n            production: false,\r\n          },\r\n          effectUsed: false,\r\n        };\r\n      default:\r\n        return {};\r\n    }\r\n  }\r\n\r\n  setSelectStateForMovementTiles() {\r\n    const jumpTiles = [];\r\n    if (\r\n      this.state.data.board.tiles[this.data.tile_id].occupant.movement.special\r\n        .jump\r\n    ) {\r\n      this.state.tiles[this.data.tile_id].adjacent.forEach((tile) => {\r\n        if (!jumpTiles.includes(tile) && tile !== this.data.tile_id) {\r\n          jumpTiles.push(tile);\r\n        }\r\n        this.state.tiles[tile].adjacent.forEach((adjacent_tile) => {\r\n          if (\r\n            !jumpTiles.includes(adjacent_tile) &&\r\n            adjacent_tile !== this.data.tile_id\r\n          ) {\r\n            jumpTiles.push(adjacent_tile);\r\n          }\r\n        });\r\n      });\r\n    }\r\n    const movementRange =\r\n      this.state.data.board.tiles[this.data.tile_id].occupant.movement.dash >\r\n        0 && !this.state.data.board.tiles[this.data.tile_id].occupant.hasDashed\r\n        ? this.state.data.board.tiles[this.data.tile_id].occupant.movement.dash\r\n        : this.state.data.board.tiles[this.data.tile_id].occupant.movement\r\n            .range;\r\n    const rangeTiles = [];\r\n    const rangeTilesHelper = {};\r\n    for (let i = 1; i <= movementRange; i++) {\r\n      if (i === 1) {\r\n        rangeTilesHelper[i] = {};\r\n        this.state.tiles[this.data.tile_id].adjacent.forEach((tile) => {\r\n          let valid = true;\r\n          if (\r\n            this.state.data.board.tiles[this.data.tile_id].occupant.movement\r\n              .special.aquatic &&\r\n            !this.state.data.board.tiles[this.data.tile_id].occupant.movement\r\n              .special.flying\r\n          ) {\r\n            if (\r\n              this.state.data.board.tiles[tile].type !== \"lake\" &&\r\n              this.state.data.board.tiles[tile].type !== \"none\"\r\n            ) {\r\n              valid = false;\r\n            }\r\n          }\r\n          if (\r\n            !this.state.data.board.tiles[this.data.tile_id].occupant.movement\r\n              .special.aquatic &&\r\n            !this.state.data.board.tiles[this.data.tile_id].occupant.movement\r\n              .special.flying\r\n          ) {\r\n            if (this.state.data.board.tiles[tile].type === \"none\") {\r\n              valid = false;\r\n            }\r\n          }\r\n          if (valid && !this.state.data.board.tiles[tile].occupant.player) {\r\n            rangeTiles.push(tile);\r\n            rangeTilesHelper[i][tile] = {\r\n              prevTile: this.data.tile_id,\r\n              currentTile: tile,\r\n            };\r\n          }\r\n        });\r\n      } else {\r\n        rangeTilesHelper[i] = {};\r\n        Object.values(rangeTilesHelper[i - 1]).forEach((rangetile) => {\r\n          this.state.tiles[rangetile.currentTile].adjacent\r\n            .filter(\r\n              (rangetile_key) =>\r\n                !this.state.tiles[rangetile.prevTile].adjacent.includes(\r\n                  rangetile_key\r\n                ) && rangetile_key !== rangetile.prevTile\r\n            )\r\n            .forEach((rangetile_adj) => {\r\n              let valid = true;\r\n              this.state.tiles[rangetile_adj].adjacent\r\n                .filter(\r\n                  (rangetile_adj_key) =>\r\n                    rangetile_adj_key !== rangetile.currentTile\r\n                )\r\n                .forEach((rangetile_adj_adj) => {\r\n                  if (\r\n                    this.state.tiles[rangetile_adj_adj].adjacent.includes(\r\n                      rangetile.prevTile\r\n                    )\r\n                  ) {\r\n                    valid = false;\r\n                  }\r\n                });\r\n              if (this.state.tiles[rangetile_adj].adjacentNonTile) {\r\n                if (\r\n                  this.state.tiles[rangetile_adj].adjacentNonTile.includes(\"D\")\r\n                ) {\r\n                  if (\r\n                    this.state.gods[\r\n                      this.state.tiles[rangetile_adj].adjacentNonTile\r\n                    ].adjacent.includes(rangetile.prevTile)\r\n                  ) {\r\n                    valid = false;\r\n                  }\r\n                } else {\r\n                  if (\r\n                    this.state.data.board.wells[\r\n                      this.state.tiles[rangetile_adj].adjacentNonTile\r\n                    ].adjacent.includes(rangetile.prevTile)\r\n                  ) {\r\n                    valid = false;\r\n                  }\r\n                }\r\n              }\r\n              if (\r\n                this.state.data.board.tiles[this.data.tile_id].occupant.movement\r\n                  .special.aquatic &&\r\n                !this.state.data.board.tiles[this.data.tile_id].occupant\r\n                  .movement.special.flying\r\n              ) {\r\n                if (\r\n                  this.state.data.board.tiles[rangetile_adj].type !== \"lake\" &&\r\n                  this.state.data.board.tiles[rangetile_adj].type !== \"none\"\r\n                ) {\r\n                  valid = false;\r\n                }\r\n              }\r\n              if (\r\n                !this.state.data.board.tiles[this.data.tile_id].occupant\r\n                  .movement.special.aquatic &&\r\n                !this.state.data.board.tiles[this.data.tile_id].occupant\r\n                  .movement.special.flying\r\n              ) {\r\n                if (\r\n                  this.state.data.board.tiles[rangetile_adj].type === \"none\"\r\n                ) {\r\n                  valid = false;\r\n                }\r\n              }\r\n              if (\r\n                valid &&\r\n                !rangeTiles.includes(rangetile_adj) &&\r\n                !this.state.data.board.tiles[rangetile_adj].occupant.player\r\n              ) {\r\n                rangeTiles.push(rangetile_adj);\r\n                rangeTilesHelper[i][rangetile_adj] = {\r\n                  prevTile: rangetile.currentTile,\r\n                  currentTile: rangetile_adj,\r\n                };\r\n              }\r\n            });\r\n        });\r\n      }\r\n    }\r\n    const moveRequirementsMet = (tile_id) => {\r\n      if (this.state.data.board.tiles[tile_id].occupant.player) {\r\n        return false;\r\n      }\r\n      if (\r\n        this.state.data.board.tiles[this.data.tile_id].occupant.movement.dash >\r\n          0 &&\r\n        !this.state.data.board.tiles[this.data.tile_id].occupant.hasDashed\r\n      ) {\r\n        if (!rangeTiles.includes(tile_id)) {\r\n          return false;\r\n        }\r\n      } else {\r\n        if (\r\n          this.state.data.board.tiles[this.data.tile_id].occupant.movement\r\n            .special.jump\r\n        ) {\r\n          if (!jumpTiles.includes(tile_id) && !rangeTiles.includes(tile_id)) {\r\n            return false;\r\n          }\r\n        } else {\r\n          if (!rangeTiles.includes(tile_id)) {\r\n            return false;\r\n          }\r\n        }\r\n      }\r\n      if (\r\n        !this.state.data.board.tiles[this.data.tile_id].occupant.movement\r\n          .special.aquatic &&\r\n        !this.state.data.board.tiles[this.data.tile_id].occupant.movement\r\n          .special.flying\r\n      ) {\r\n        if (this.state.data.board.tiles[tile_id].type === \"none\") {\r\n          return false;\r\n        }\r\n      }\r\n      if (\r\n        this.state.data.board.tiles[this.data.tile_id].occupant.movement.special\r\n          .aquatic &&\r\n        !this.state.data.board.tiles[this.data.tile_id].occupant.movement\r\n          .special.flying\r\n      ) {\r\n        if (\r\n          this.state.data.board.tiles[tile_id].type !== \"lake\" &&\r\n          this.state.data.board.tiles[tile_id].type !== \"none\"\r\n        ) {\r\n          return false;\r\n        }\r\n      }\r\n      return true;\r\n    };\r\n    Object.keys(this.state.tiles).forEach((key) => {\r\n      if (moveRequirementsMet(key)) {\r\n        this.state.tiles[key].selectable = true;\r\n      }\r\n    });\r\n  }\r\n\r\n  //EVENTS\r\n\r\n  //0 - Explore\r\n  processEvent_0(process) {\r\n    if (process === \"revert\") {\r\n      this.setSelectStateForOccupantsDivine(true, false);\r\n      this.setSelectStateForAllTiles(false);\r\n      this.state.currentAction = \"\";\r\n    }\r\n    if (process === \"init\") {\r\n      this.setSelectStateForOccupants(false, false);\r\n      this.setSelectStateForBuildTiles(\"prairie\");\r\n      this.state.currentAction = \"event_tile\";\r\n    }\r\n    if (process === \"handle\") {\r\n      this.setSelectStateForOccupantsDivine(true, false);\r\n      this.setSelectStateForAllTiles(false);\r\n      this.state.data[this.data.player].faeria += 2;\r\n      this.state.data.board.tiles[this.data.tile_id].type = \"prairie\";\r\n      this.state.data.board.tiles[this.data.tile_id].owner = this.data.player;\r\n    }\r\n  }\r\n\r\n  //5 - Song of the Mercheek\r\n  processEvent_5(process) {\r\n    if (process === \"revert\") {\r\n      this.setSelectStateForOccupantsDivine(true, false);\r\n      this.state.currentAction = \"\";\r\n    }\r\n    if (process === \"init\") {\r\n      this.setSelectStateForOccupants(true, true);\r\n      this.state.currentAction = \"event_occupant\";\r\n    }\r\n    if (process === \"handle\") {\r\n      this.setSelectStateForOccupantsDivine(true, false);\r\n      const target = this.state.data.board.tiles[this.data.tile_id].occupant;\r\n      target.health = Math.floor(target.health / 2);\r\n      target.attack =\r\n        Math.floor(target.attack / 2) >= 0 ? Math.floor(target.attack / 2) : 0;\r\n      this.state.data.board.tiles[this.data.tile_id].occupant =\r\n        target.health > 0 ? target : this.getRemoveOccupant(this.data.tile_id);\r\n      if (target.health <= 0 && target.effects.lastword) {\r\n        this.processLastwordEffect(target, this.data.tile_id);\r\n      }\r\n    }\r\n  }\r\n\r\n  //6 - Cheek in a bottle\r\n  processEvent_6(process) {\r\n    if (process === \"handle\") {\r\n      for (let i = 0; i < 3; i++) {\r\n        this.handleCustomDrawLogic(\r\n          this.state.data[this.data.player].deck.findIndex(\r\n            (card) => this.getLandCostForType(card, \"lake\") > 0\r\n          ),\r\n          10,\r\n          false\r\n        );\r\n      }\r\n    }\r\n  }\r\n\r\n  //7 - Cheekie in a lamp\r\n  processEvent_7(process) {\r\n    if (process === \"handle\") {\r\n      for (let i = 0; i < 2; i++) {\r\n        this.handleCustomDrawLogic(\r\n          this.state.data[this.data.player].deck.findIndex(\r\n            (card) =>\r\n              this.state.data[this.data.player].cards[card].type === \"event\"\r\n          ),\r\n          10,\r\n          false\r\n        );\r\n      }\r\n    }\r\n  }\r\n\r\n  //9 - Rain of Cheek\r\n  processEvent_9(process) {\r\n    if (process === \"handle\") {\r\n      let tileAvailable = true;\r\n      const availableTiles = this.getRandomTiles().filter(\r\n        (tile) => !this.state.data.board.tiles[tile].occupant.player\r\n      );\r\n      let count = 0;\r\n      while (tileAvailable) {\r\n        if (availableTiles.length !== 0) {\r\n          this.state.data.board.tiles[availableTiles.splice(0, 1)].occupant =\r\n            this.getOccupantByID(10);\r\n          if (++count === 6) {\r\n            tileAvailable = false;\r\n          }\r\n        } else {\r\n          tileAvailable = false;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  //11 - Mooncheek\r\n  processEvent_11(process) {\r\n    if (process === \"handle\") {\r\n      Object.keys(this.state.data.board.tiles)\r\n        .filter(\r\n          (key) =>\r\n            this.state.data.board.tiles[key].occupant.player ===\r\n              this.data.player && this.getLandCostForOccupant(key, \"lake\") > 0\r\n        )\r\n        .forEach((tile) => {\r\n          this.state.data.board.tiles[tile].occupant = this.getOccupantByID(\r\n            13,\r\n            {\r\n              hasAttacked:\r\n                this.state.data.board.tiles[tile].occupant.hasAttacked,\r\n              hasMoved: this.state.data.board.tiles[tile].occupant.hasMoved,\r\n              canCollect: this.state.data.board.tiles[tile].occupant.canCollect,\r\n            }\r\n          );\r\n        });\r\n    }\r\n  }\r\n\r\n  //17 - Cheekblast\r\n  processEvent_17(process) {\r\n    if (process === \"revert\") {\r\n      this.setSelectStateForOccupantsDivine(true, false);\r\n      this.setSelectStateForGods(false);\r\n      this.state.currentAction = \"\";\r\n    }\r\n    if (process === \"init\") {\r\n      this.setSelectStateForOccupants(true, true);\r\n      this.setSelectStateForGods(true);\r\n      this.state.currentAction = \"event_occupant\";\r\n    }\r\n    if (process === \"handle\") {\r\n      this.setSelectStateForOccupantsDivine(true, false);\r\n      this.setSelectStateForGods(false);\r\n      if (this.data.event === \"occupant\") {\r\n        const target = this.state.data.board.tiles[this.data.tile_id].occupant;\r\n        if (target.protection) {\r\n          target.protection = false;\r\n        } else {\r\n          target.health -= 3;\r\n        }\r\n        this.state.data.board.tiles[this.data.tile_id].occupant =\r\n          target.health > 0\r\n            ? target\r\n            : this.getRemoveOccupant(this.data.tile_id);\r\n        if (target.health <= 0 && target.effects.lastword) {\r\n          this.processLastwordEffect(target, this.data.tile_id);\r\n        }\r\n      }\r\n      if (this.data.event === \"god\") {\r\n        this.state.data.board.gods[this.data.god].health -= 3;\r\n        if (this.state.data.board.gods[this.data.god].health <= 0) {\r\n          this.state.data.status.finished = true;\r\n          this.state.data.status.winner =\r\n            this.state.gods[this.data.god].player === this.data.opponent\r\n              ? this.data.player\r\n              : this.data.opponent;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  //23 - Cheekruption\r\n  processEvent_23(process) {\r\n    if (process === \"handle\") {\r\n      Object.keys(this.state.data.board.tiles)\r\n        .filter(\r\n          (key) =>\r\n            this.state.data.board.tiles[key].occupant.player ===\r\n            this.data.opponent\r\n        )\r\n        .forEach((tile) => {\r\n          const target = this.state.data.board.tiles[tile].occupant;\r\n          if (target.protection) {\r\n            target.protection = false;\r\n          } else {\r\n            target.health -= 2;\r\n          }\r\n          this.state.data.board.tiles[tile].occupant =\r\n            target.health > 0 ? target : this.getRemoveOccupant(tile);\r\n          if (target.health <= 0 && target.effects.lastword) {\r\n            this.processLastwordEffect(target, tile);\r\n          }\r\n        });\r\n    }\r\n  }\r\n\r\n  //34 - Cheekshield Spirit\r\n  processEvent_34(process) {\r\n    if (process === \"revert\") {\r\n      this.setSelectStateForOccupantsDivine(true, false);\r\n      this.state.currentAction = \"\";\r\n    }\r\n    if (process === \"init\") {\r\n      this.setSelectStateForOccupants(true, false);\r\n      this.state.currentAction = \"event_occupant\";\r\n    }\r\n    if (process === \"handle\") {\r\n      this.setSelectStateForOccupantsDivine(true, false);\r\n      this.state.data.board.tiles[this.data.tile_id].occupant.health += 4;\r\n      this.state.data.board.tiles[this.data.tile_id].occupant.attack += 2;\r\n    }\r\n  }\r\n\r\n  //35 - Cheek Dancers\r\n  processEvent_35(process) {\r\n    if (process === \"revert\") {\r\n      this.setSelectStateForOccupantsDivine(true, false);\r\n      this.state.currentAction = \"\";\r\n    }\r\n    if (process === \"init\") {\r\n      this.setSelectStateForOccupants(true, false);\r\n      this.state.currentAction = \"event_occupant\";\r\n    }\r\n    if (process === \"handle\") {\r\n      this.setSelectStateForOccupantsDivine(true, false);\r\n      this.state.data.board.tiles[this.data.tile_id].occupant.health += 4;\r\n      this.state.data.board.tiles[this.data.tile_id].occupant.taunt = true;\r\n    }\r\n  }\r\n\r\n  //46 - Cheek Glider\r\n  processEvent_46(process) {\r\n    if (process === \"revert\") {\r\n      this.setSelectStateForOccupantsDivine(true, false);\r\n      this.state.currentAction = \"\";\r\n    }\r\n    if (process === \"init\") {\r\n      this.setSelectStateForOccupants(true, false);\r\n      this.state.currentAction = \"event_occupant\";\r\n    }\r\n    if (process === \"handle\") {\r\n      const flying =\r\n        this.state.data.board.tiles[this.data.tile_id].occupant.movement.special\r\n          .flying;\r\n\r\n      this.setSelectStateForOccupantsDivine(true, false);\r\n      this.state.data.board.tiles[this.data.tile_id].occupant.movement.range =\r\n        Math.max(\r\n          this.state.data.board.tiles[this.data.tile_id].occupant.movement\r\n            .range,\r\n          2\r\n        );\r\n      this.state.data.board.tiles[\r\n        this.data.tile_id\r\n      ].occupant.movement.special.flying = true;\r\n      this.state.data.board.tiles[this.data.tile_id].occupant.attack += 1;\r\n\r\n      //Balloon Cheek\r\n      if (!flying)\r\n        this.processSpecialEffect(43, {\r\n          action: \"gain\",\r\n          tile: this.data.tile_id,\r\n          attack: 1,\r\n        });\r\n      //Balloon Cheek\r\n    }\r\n  }\r\n\r\n  //48 - Cheek Wind\r\n  processEvent_48(process) {\r\n    if (process === \"revert\") {\r\n      this.setSelectStateForOccupantsDivine(true, false);\r\n      this.state.currentAction = \"\";\r\n    }\r\n    if (process === \"init\") {\r\n      this.setSelectStateForOccupants(true, true);\r\n      this.state.currentAction = \"event_occupant\";\r\n    }\r\n    if (process === \"handle\") {\r\n      this.setSelectStateForOccupantsDivine(false, false);\r\n      this.state.tiles[this.data.tile_id].occupantSelected = true;\r\n      this.state.tiles[this.data.tile_id].occupantSelectable = true;\r\n      this.setSelectStateForMovementTiles();\r\n      this.state.currentAction = \"event_move_occupant\";\r\n    }\r\n  }\r\n\r\n  //49 - Canopic Cheekjar\r\n  processEvent_49(process) {\r\n    if (process === \"revert\") {\r\n      this.setSelectStateForOccupantsDivine(true, false);\r\n      this.state.currentAction = \"\";\r\n    }\r\n    if (process === \"init\") {\r\n      this.setSelectStateForOccupants(true, true);\r\n      this.state.currentAction = \"event_occupant\";\r\n    }\r\n    if (process === \"handle\") {\r\n      this.setSelectStateForOccupantsDivine(true, false);\r\n      const target = JSON.parse(JSON.stringify(this.state)).cardLibrary[\r\n        this.state.data.board.tiles[this.data.tile_id].occupant.id\r\n      ];\r\n      target.land_cost.wild = Object.values(target.land_cost).reduce(\r\n        (sum, current) => sum + current\r\n      );\r\n      Object.keys(target.land_cost).forEach((land) => {\r\n        if (land !== \"wild\") {\r\n          target.land_cost[land] = 0;\r\n        }\r\n      });\r\n      this.state.data.board.tiles[this.data.tile_id].occupant =\r\n        this.getRemoveOccupant(this.data.tile_id);\r\n      if (target.effects.lastword) {\r\n        this.processLastwordEffect(target, this.data.tile_id);\r\n      }\r\n      const card_id =\r\n        parseInt(\r\n          Object.keys(this.state.data[this.data.player].cards)[\r\n            Object.keys(this.state.data[this.data.player].cards).length - 1\r\n          ]\r\n        ) + 1;\r\n      this.state.data[this.data.player].cards[card_id] = target;\r\n      if (this.state.data[this.data.player].hand.length < 10) {\r\n        this.state.data[this.data.player].hand.push(card_id);\r\n      }\r\n    }\r\n  }\r\n\r\n  //51 - Book of Cheek\r\n  processEvent_51(process) {\r\n    if (process === \"handle\") {\r\n      for (let i = 0; i < 3; i++) {\r\n        this.handleCustomDrawLogic(\r\n          this.state.data[this.data.player].deck.findIndex((card) => card),\r\n          10,\r\n          true\r\n        );\r\n      }\r\n    }\r\n  }\r\n\r\n  //52 - Milk of the Cheek\r\n  processEvent_52(process) {\r\n    if (process === \"handle\") {\r\n      this.state.data.board.gods[this.getGodTile()].health = Math.min(\r\n        20,\r\n        this.state.data.board.gods[this.getGodTile()].health + 5\r\n      );\r\n    }\r\n  }\r\n\r\n  //Creatures - Summon Effects\r\n\r\n  //8 - Cheek lord\r\n  processSummonEffect_8() {\r\n    const anyAdjacentOccupant = (tile) =>\r\n      this.state.data.board.tiles[tile].occupant.player === this.data.player &&\r\n      this.state.data.board.tiles[tile].occupant.land_cost.lake > 0;\r\n    if (\r\n      this.state.tiles[this.data.tile_id].adjacent.some(anyAdjacentOccupant)\r\n    ) {\r\n      this.state.data.board.tiles[this.data.tile_id].occupant.attack++;\r\n      this.state.data.board.tiles[this.data.tile_id].occupant.health++;\r\n    }\r\n  }\r\n\r\n  //14 - Cheekcano\r\n  processSummonEffect_14() {\r\n    Object.keys(this.state.data.board.tiles)\r\n      .filter(\r\n        (key) =>\r\n          this.state.data.board.tiles[key].occupant.player ===\r\n          this.data.opponent\r\n      )\r\n      .forEach((tile) => {\r\n        const target = this.state.data.board.tiles[tile].occupant;\r\n        if (target.protection) {\r\n          target.protection = false;\r\n        } else {\r\n          target.health -= 1;\r\n        }\r\n        this.state.data.board.tiles[tile].occupant =\r\n          target.health > 0 ? target : this.getRemoveOccupant(tile);\r\n        if (target.health <= 0 && target.effects.lastword) {\r\n          this.processLastwordEffect(target, tile);\r\n        }\r\n      });\r\n  }\r\n\r\n  //25 - Cheekflower\r\n  processSummonEffect_25() {\r\n    this.state.data[this.data.player].faeria += 2;\r\n  }\r\n\r\n  //27 - Mushroom Cheek\r\n  processSummonEffect_27() {\r\n    const availableTiles = this.getRandomTiles().filter(\r\n      (tile) =>\r\n        !this.state.data.board.tiles[tile].occupant.player &&\r\n        this.state.tiles[this.data.tile_id].adjacent.includes(tile) &&\r\n        this.state.data.board.tiles[tile].type !== \"none\"\r\n    );\r\n    if (availableTiles.length !== 0) {\r\n      this.state.data.board.tiles[availableTiles.splice(0, 1)].occupant =\r\n        this.getOccupantByID(28);\r\n    }\r\n  }\r\n\r\n  //30 - Cheekworld Tree\r\n  processSummonEffect_30() {\r\n    Object.keys(this.state.data.board.tiles)\r\n      .filter(\r\n        (key) =>\r\n          this.state.data.board.tiles[key].occupant.player ===\r\n            this.data.player &&\r\n          this.state.data.board.tiles[key].occupant.land_cost.forest > 0 &&\r\n          key !== this.data.tile_id\r\n      )\r\n      .forEach((tile) => {\r\n        this.state.data.board.tiles[tile].occupant.health += 9;\r\n      });\r\n  }\r\n\r\n  //36 - Cheeksphynx\r\n  processSummonEffect_36() {\r\n    this.state.currentAction = \"event_choose_occupant\";\r\n    this.state.chooseParams = {\r\n      cards: [37, 38, 39],\r\n      tile: this.data.tile_id,\r\n    };\r\n    this.setSelectStateForOccupants(false, false);\r\n    this.setSelectStateForAllTiles(false);\r\n    this.setSelectStateForGods(false);\r\n    this.setSelectStateForHand(false);\r\n    this.setSelectStateForWheel(false);\r\n  }\r\n\r\n  //37 - Cheeksphynx A\r\n  processSummonEffect_37() {\r\n    for (let i = 0; i < 3; i++) {\r\n      this.handleCustomDrawLogic(\r\n        this.state.data[this.data.player].deck.findIndex((card) => card),\r\n        9,\r\n        true\r\n      );\r\n    }\r\n    this.state.currentAction = \"\";\r\n  }\r\n\r\n  //38 - Cheeksphynx B\r\n  processSummonEffect_38() {\r\n    this.state.data[this.data.player].faeria += 3;\r\n    this.state.currentAction = \"\";\r\n  }\r\n\r\n  //Creatures - Lastword Effects\r\n\r\n  //3 - Clamcheek\r\n  processLastwordEffect_3(occupant, tile) {\r\n    this.state.data.board.tiles[tile].occupant = this.getOccupantByID(12, {\r\n      player: occupant.player,\r\n    });\r\n  }\r\n\r\n  //24 - Suncheek\r\n  processLastwordEffect_24(occupant, tile) {\r\n    this.state.tiles[tile].adjacent.forEach((adjTile) => {\r\n      if (\r\n        this.state.data.board.tiles[adjTile].occupant.player !==\r\n          occupant.player &&\r\n        this.state.data.board.tiles[adjTile].occupant.player\r\n      ) {\r\n        const target = this.state.data.board.tiles[adjTile].occupant;\r\n        if (target.protection) {\r\n          target.protection = false;\r\n        } else {\r\n          target.health -= 5;\r\n        }\r\n        this.state.data.board.tiles[adjTile].occupant =\r\n          target.health > 0 ? target : this.getRemoveOccupant(adjTile);\r\n        if (target.health <= 0 && target.effects.lastword) {\r\n          this.processLastwordEffect(target, adjTile);\r\n        }\r\n      }\r\n    });\r\n    Object.keys(this.state.gods).forEach((god) => {\r\n      if (\r\n        this.state.gods[god].adjacent.includes(tile) &&\r\n        occupant.player !== this.state.gods[god].player\r\n      ) {\r\n        this.state.data.board.gods[god].health -= 5;\r\n        if (this.state.data.board.gods[god].health <= 0) {\r\n          this.state.data.status.finished = true;\r\n          this.state.data.status.winner = occupant.player;\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  //41 - Cheeksquito\r\n  processLastwordEffect_41(occupant, tile) {\r\n    const availableTiles = this.getRandomTiles().filter(\r\n      (randomTile) => !this.state.data.board.tiles[randomTile].occupant.player\r\n    );\r\n    if (availableTiles.length !== 0) {\r\n      this.state.data.board.tiles[availableTiles[0]].occupant =\r\n        this.getOccupantByID(41, {\r\n          player: occupant.player,\r\n        });\r\n\r\n      //Balloon Cheek\r\n      this.processSpecialEffect(43, {\r\n        action: \"gain\",\r\n        tile: availableTiles[0],\r\n        attack: 1,\r\n      });\r\n      //Balloon Cheek\r\n    }\r\n  }\r\n\r\n  //44 - Dragon Cheekrider\r\n  processLastwordEffect_44(occupant, tile) {\r\n    this.state.data.board.tiles[tile].occupant = this.getOccupantByID(45, {\r\n      player: occupant.player,\r\n    });\r\n\r\n    //Balloon Cheek\r\n    this.processSpecialEffect(43, {\r\n      action: \"gain\",\r\n      tile: tile,\r\n      attack: 1,\r\n    });\r\n    //Balloon Cheek\r\n  }\r\n\r\n  //54 - Cheekcrobats\r\n  processLastwordEffect_54(occupant, tile) {\r\n    this.state.data.board.tiles[tile].occupant = this.getOccupantByID(55, {\r\n      player: occupant.player,\r\n    });\r\n  }\r\n\r\n  //Creatures - Gift Effects\r\n\r\n  //1 - Mercheek\r\n  processGiftEffect_1(process, selected_occupant_id) {\r\n    if (process === \"init\") {\r\n      this.setSelectStateForConditionalOccupants(false, true, 2);\r\n      this.setSelectStateForAllTiles(false);\r\n      this.state.tiles[this.data.tile_id].occupantSelected = true;\r\n      this.state.tiles[this.data.tile_id].occupantSelectable = true;\r\n      this.state.currentAction = \"gift_occupant\";\r\n    }\r\n    if (process === \"handle\") {\r\n      if (this.data.tile_id !== selected_occupant_id) {\r\n        this.state.data.board.tiles[this.data.tile_id].occupant.player =\r\n          this.data.player;\r\n        this.state.data.board.tiles[\r\n          this.data.tile_id\r\n        ].occupant.canCollect = false;\r\n        this.state.data.board.tiles[this.data.tile_id].occupant.hasMoved = true;\r\n        this.state.data.board.tiles[\r\n          this.data.tile_id\r\n        ].occupant.hasAttacked = true;\r\n      }\r\n      this.setSelectStateForOccupantsDivine(true, false);\r\n    }\r\n  }\r\n\r\n  //16 - Cheekflame\r\n  processGiftEffect_16(process, selected_occupant_id) {\r\n    if (process === \"init\") {\r\n      this.setSelectStateForOccupants(false, true);\r\n      this.setSelectStateForAllTiles(false);\r\n      this.state.tiles[this.data.tile_id].occupantSelected = true;\r\n      this.state.tiles[this.data.tile_id].occupantSelectable = true;\r\n      this.state.currentAction = \"gift_occupant\";\r\n    }\r\n    if (process === \"handle\") {\r\n      if (this.data.tile_id !== selected_occupant_id) {\r\n        const target = this.state.data.board.tiles[this.data.tile_id].occupant;\r\n        if (target.protection) {\r\n          target.protection = false;\r\n        } else {\r\n          target.health -= 1;\r\n        }\r\n        this.state.data.board.tiles[this.data.tile_id].occupant =\r\n          target.health > 0\r\n            ? target\r\n            : this.getRemoveOccupant(this.data.tile_id);\r\n        if (target.health <= 0 && target.effects.lastword) {\r\n          this.processLastwordEffect(target, this.data.tile_id);\r\n        }\r\n      }\r\n      this.setSelectStateForOccupantsDivine(true, false);\r\n    }\r\n  }\r\n\r\n  //22 - Ghostcheek Alchemist\r\n  processGiftEffect_22(process, selected_occupant_id) {\r\n    if (process === \"init\") {\r\n      this.setSelectStateForOccupants(false, true);\r\n      this.setSelectStateForAllTiles(false);\r\n      this.state.tiles[this.data.tile_id].occupantSelected = true;\r\n      this.state.tiles[this.data.tile_id].occupantSelectable = true;\r\n      this.state.currentAction = \"gift_occupant\";\r\n    }\r\n    if (process === \"handle\") {\r\n      if (this.data.tile_id !== selected_occupant_id) {\r\n        this.state.data.board.tiles[this.data.tile_id].occupant =\r\n          this.getOccupantByID(21, {\r\n            player: this.data.opponent,\r\n          });\r\n      }\r\n      this.setSelectStateForOccupantsDivine(true, false);\r\n    }\r\n  }\r\n\r\n  //26 - Cavecheek dweller\r\n  processGiftEffect_26(process, selected_occupant_id) {\r\n    if (process === \"init\") {\r\n      this.setSelectStateForOccupants(false, true);\r\n      this.setSelectStateForAllTiles(false);\r\n      this.state.tiles[this.data.tile_id].occupantSelected = true;\r\n      this.state.tiles[this.data.tile_id].occupantSelectable = true;\r\n      this.state.currentAction = \"gift_occupant\";\r\n    }\r\n    if (process === \"handle\") {\r\n      if (this.data.tile_id !== selected_occupant_id) {\r\n        const target = this.state.data.board.tiles[this.data.tile_id].occupant;\r\n        if (target.protection) {\r\n          target.protection = false;\r\n        } else {\r\n          target.health -= 2;\r\n        }\r\n        this.state.data.board.tiles[this.data.tile_id].occupant =\r\n          target.health > 0\r\n            ? target\r\n            : this.getRemoveOccupant(this.data.tile_id);\r\n        if (target.health <= 0 && target.effects.lastword) {\r\n          this.processLastwordEffect(target, this.data.tile_id);\r\n        }\r\n      }\r\n      this.setSelectStateForOccupantsDivine(true, false);\r\n    }\r\n  }\r\n\r\n  //31 - Cheek Shaman\r\n  processGiftEffect_31(process, selected_occupant_id) {\r\n    if (process === \"init\") {\r\n      this.setSelectStateForOccupants(true, false);\r\n      this.setSelectStateForAllTiles(false);\r\n      this.state.tiles[this.data.tile_id].occupantSelected = true;\r\n      this.state.tiles[this.data.tile_id].occupantSelectable = true;\r\n      this.state.currentAction = \"gift_occupant\";\r\n    }\r\n    if (process === \"handle\") {\r\n      this.state.data.board.tiles[this.data.tile_id].occupant.health += 4;\r\n      this.state.data.board.tiles[this.data.tile_id].occupant.attack += 2;\r\n      this.setSelectStateForOccupantsDivine(true, false);\r\n    }\r\n  }\r\n\r\n  //39 - Cheeksphynx C\r\n  processGiftEffect_39(process, selected_occupant_id) {\r\n    if (process === \"init\") {\r\n      this.setSelectStateForOccupants(true, true);\r\n      this.setSelectStateForAllTiles(false);\r\n      this.setSelectStateForGods(true);\r\n      this.setSelectStateForHand(false);\r\n      this.setSelectStateForWheel(false);\r\n      this.state.tiles[this.data.tile].occupantSelected = true;\r\n      this.state.tiles[this.data.tile].occupantSelectable = true;\r\n      this.state.currentAction = \"gift_occupant\";\r\n    }\r\n    if (process === \"handle\") {\r\n      this.setSelectStateForOccupantsDivine(true, false);\r\n      this.setSelectStateForGods(false);\r\n      if (this.data.event === \"occupant\") {\r\n        const target = this.state.data.board.tiles[this.data.tile_id].occupant;\r\n        if (target.protection) {\r\n          target.protection = false;\r\n        } else {\r\n          target.health -= 3;\r\n        }\r\n        this.state.data.board.tiles[this.data.tile_id].occupant =\r\n          target.health > 0\r\n            ? target\r\n            : this.getRemoveOccupant(this.data.tile_id);\r\n        if (target.health <= 0 && target.effects.lastword) {\r\n          this.processLastwordEffect(target, this.data.tile_id);\r\n        }\r\n      }\r\n      if (this.data.event === \"god\") {\r\n        this.state.data.board.gods[this.data.god].health -= 3;\r\n        if (this.state.data.board.gods[this.data.god].health <= 0) {\r\n          this.state.data.status.finished = true;\r\n          this.state.data.status.winner =\r\n            this.state.gods[this.data.god].player === this.data.opponent\r\n              ? this.data.player\r\n              : this.data.opponent;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  //Creatures - Production Effects\r\n\r\n  //19 - Baby Cheekdevil\r\n  processProductionEffect_19(tile) {\r\n    this.state.data.board.tiles[tile].occupant.attack += 1;\r\n    this.state.data.board.tiles[tile].occupant.health += 1;\r\n  }\r\n\r\n  //20 - Ghostcheek Tower\r\n  processProductionEffect_20(tile) {\r\n    const availableTiles = this.getRandomTiles().filter(\r\n      (tile) => !this.state.data.board.tiles[tile].occupant.player\r\n    );\r\n    if (availableTiles.length !== 0) {\r\n      this.state.data.board.tiles[availableTiles[0]].occupant =\r\n        this.getOccupantByID(21, {\r\n          player: this.state.data.board.tiles[tile].occupant.player,\r\n        });\r\n\r\n      //Balloon Cheek\r\n      this.processSpecialEffect(43, {\r\n        action: \"gain\",\r\n        tile: availableTiles[0],\r\n        attack: 1,\r\n      });\r\n      //Balloon Cheek\r\n    }\r\n  }\r\n\r\n  //40 - Mummy Cheek\r\n  processProductionEffect_40(tile) {\r\n    this.state.data.board.tiles[tile].occupant.attack =\r\n      this.state.data.board.tiles[tile].occupant.base_attack;\r\n    this.state.data.board.tiles[tile].occupant.health =\r\n      this.state.data.board.tiles[tile].occupant.base_health;\r\n  }\r\n\r\n  //47 - Cheek Pyramid\r\n  processProductionEffect_47(tile) {\r\n    const availableTiles = this.getRandomTiles().filter(\r\n      (randomTile) =>\r\n        !this.state.data.board.tiles[randomTile].occupant.player &&\r\n        this.state.tiles[tile].adjacent.includes(randomTile) &&\r\n        this.state.data.board.tiles[randomTile].type !== \"none\"\r\n    );\r\n    if (availableTiles.length !== 0) {\r\n      this.state.data.board.tiles[availableTiles.splice(0, 1)].occupant =\r\n        this.getOccupantByID(40, {\r\n          player: this.state.data.board.tiles[tile].occupant.player,\r\n        });\r\n    }\r\n  }\r\n\r\n  //Creatures - Special Effects\r\n\r\n  //37 - Cheeksphynx A\r\n  processSpecialEffect_37(params) {\r\n    const occupant = JSON.parse(\r\n      JSON.stringify(this.state.data.board.tiles[params.tile].occupant)\r\n    );\r\n    occupant.id = this.data.id;\r\n    this.processSummonEffect(occupant);\r\n  }\r\n\r\n  //38 - Cheeksphynx B\r\n  processSpecialEffect_38(params) {\r\n    const occupant = JSON.parse(\r\n      JSON.stringify(this.state.data.board.tiles[params.tile].occupant)\r\n    );\r\n    occupant.id = this.data.id;\r\n    this.processSummonEffect(occupant);\r\n  }\r\n\r\n  //39 - Cheeksphynx C\r\n  processSpecialEffect_39(params) {\r\n    const occupant = JSON.parse(\r\n      JSON.stringify(this.state.data.board.tiles[params.tile].occupant)\r\n    );\r\n    occupant.id = this.data.id;\r\n    this.initGiftEffect(occupant);\r\n  }\r\n\r\n  //43 - Balloon Cheek\r\n  processSpecialEffect_43(params) {\r\n    if (params.action === \"summon\") {\r\n      if (this.state.data.board.tiles[params.tile].occupant.id === 43) {\r\n        Object.keys(this.state.data.board.tiles).forEach((tile) => {\r\n          if (\r\n            this.state.data.board.tiles[tile].occupant.movement.special\r\n              .flying &&\r\n            tile !== params.tile\r\n          ) {\r\n            this.state.data.board.tiles[params.tile].occupant.attack +=\r\n              params.attack;\r\n          }\r\n        });\r\n      }\r\n      if (\r\n        this.state.data.board.tiles[params.tile].occupant.movement.special\r\n          .flying\r\n      ) {\r\n        Object.keys(this.state.data.board.tiles).forEach((tile) => {\r\n          if (\r\n            this.state.data.board.tiles[tile].occupant.id === 43 &&\r\n            tile !== params.tile\r\n          ) {\r\n            this.state.data.board.tiles[tile].occupant.attack += params.attack;\r\n          }\r\n        });\r\n      }\r\n    }\r\n    if (params.action === \"remove\" || params.action === \"gain\") {\r\n      if (\r\n        this.state.data.board.tiles[params.tile].occupant.movement.special\r\n          .flying\r\n      ) {\r\n        Object.keys(this.state.data.board.tiles).forEach((tile) => {\r\n          if (this.state.data.board.tiles[tile].occupant.id === 43) {\r\n            this.state.data.board.tiles[tile].occupant.attack += params.attack;\r\n          }\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  //53 - Cheek Cannon\r\n  processSpecialEffect_53(params) {\r\n    const availableTiles = this.getRandomTiles().filter(\r\n      (tile) =>\r\n        !this.state.data.board.tiles[tile].occupant.player &&\r\n        this.state.tiles[params.tile].adjacent.includes(tile) &&\r\n        this.state.data.board.tiles[tile].type !== \"none\"\r\n    );\r\n    if (availableTiles.length !== 0) {\r\n      this.state.data.board.tiles[availableTiles.splice(0, 1)].occupant =\r\n        this.getOccupantByID(55, {\r\n          player: params.player,\r\n        });\r\n    }\r\n  }\r\n}\r\n","import { initStore } from \"./store\";\r\nimport EventProcessor from \"./event-processor\";\r\nimport axios from \"axios\";\r\n\r\nconst configureStore = (loadStore) => {\r\n  const actions = {\r\n    SET_DATA: (currentState, data) => {\r\n      let updatedState = JSON.parse(JSON.stringify(currentState));\r\n      updatedState = data;\r\n      return updatedState;\r\n    },\r\n    SHUFFLE_DECK: (currentState, data) => {\r\n      const updatedState = JSON.parse(JSON.stringify(currentState));\r\n      const shuffledDeck = [];\r\n      for (let i = 0; i < currentState.data[data.player].deck.length; i++) {\r\n        let random = Math.floor(\r\n          Math.random() * updatedState.data[data.player].deck.length\r\n        );\r\n        shuffledDeck.push(updatedState.data[data.player].deck[random]);\r\n        updatedState.data[data.player].deck.splice(random, 1);\r\n      }\r\n      updatedState.data[data.player].deck = shuffledDeck;\r\n      updatedState.data[data.player].shuffle = true;\r\n      const newState = JSON.parse(JSON.stringify(updatedState));\r\n      const getdata = new FormData();\r\n      getdata.append(\"id\", document.getElementById(\"game_id\").value);\r\n      axios\r\n        .post(\"/faeria/Faeria/utils/getState.php\", getdata)\r\n        .then((res) => {\r\n          const prevState = JSON.parse(res.data);\r\n          newState.data[data.opponent] = prevState.data[data.opponent];\r\n          const postdata = new FormData();\r\n          postdata.append(\"react_state\", JSON.stringify(newState));\r\n          postdata.append(\"id\", data.id);\r\n          axios\r\n            .post(\"/faeria/Faeria/utils/saveState.php\", postdata)\r\n            .catch((error) => {\r\n              console.log(\"Network Error\", error.message);\r\n            });\r\n        })\r\n        .catch((error) => {\r\n          console.log(\"Network Error\", error.message);\r\n        });\r\n      return updatedState;\r\n    },\r\n    CONFIRM_MULLIGAN: (currentState, data) => {\r\n      let updatedState = JSON.parse(JSON.stringify(currentState));\r\n      updatedState = data;\r\n      return updatedState;\r\n    },\r\n    START_GAME: (currentState, data) => {\r\n      const updatedState = JSON.parse(JSON.stringify(currentState));\r\n\r\n      updatedState.data.status.turn = 1;\r\n      updatedState.data[data.player].wheel_used = false;\r\n\r\n      //Wheel\r\n      Object.keys(updatedState.wheelbuttons).forEach((wheel) => {\r\n        updatedState.wheelbuttons[wheel].selectable = true;\r\n        updatedState.wheelbuttons[wheel].selected = false;\r\n      });\r\n\r\n      //Hand\r\n      Object.keys(updatedState.hand).forEach((card) => {\r\n        updatedState.hand[card].selectable = true;\r\n        updatedState.hand[card].selected = false;\r\n      });\r\n\r\n      //Tiles and Occupants\r\n      Object.keys(updatedState.tiles).forEach((tile) => {\r\n        updatedState.tiles[tile].selectable = false;\r\n        updatedState.tiles[tile].selected = false;\r\n        updatedState.tiles[tile].occupantSelectable = true;\r\n        updatedState.tiles[tile].occupantSelected = false;\r\n      });\r\n\r\n      //Gods\r\n      Object.keys(updatedState.gods).forEach((god) => {\r\n        updatedState.gods[god].selectable = false;\r\n      });\r\n\r\n      const formdata = new FormData();\r\n      formdata.append(\"react_state\", JSON.stringify(updatedState));\r\n      formdata.append(\"id\", document.getElementById(\"game_id\").value);\r\n      axios\r\n        .post(\"/faeria/Faeria/utils/saveState.php\", formdata)\r\n        .catch((error) => {\r\n          console.log(\"Network Error\", error.message);\r\n        });\r\n      return updatedState;\r\n    },\r\n    SELECT_LAND: (currentState, data) => {\r\n      const updatedState = JSON.parse(JSON.stringify(currentState));\r\n      const newWheelState = updatedState.wheelbuttons;\r\n      newWheelState[data.wheelbutton_id].selected =\r\n        !newWheelState[data.wheelbutton_id].selected;\r\n      if (updatedState.data[data.player].wheel_neutral_counter !== 1) {\r\n        Object.keys(newWheelState).forEach((key) => {\r\n          if (key !== data.wheelbutton_id) {\r\n            newWheelState[key].selectable = !newWheelState[key].selectable;\r\n          }\r\n        });\r\n      }\r\n      if (newWheelState[data.wheelbutton_id].selected) {\r\n        Object.keys(updatedState.hand).forEach((key) => {\r\n          updatedState.hand[key].selectable = false;\r\n        });\r\n        Object.keys(updatedState.tiles).forEach((key) => {\r\n          updatedState.tiles[key].occupantSelectable = false;\r\n        });\r\n      } else {\r\n        Object.keys(updatedState.hand).forEach((key) => {\r\n          updatedState.hand[key].selectable = true;\r\n        });\r\n        Object.keys(updatedState.tiles).forEach((key) => {\r\n          updatedState.tiles[key].occupantSelectable = true;\r\n        });\r\n      }\r\n      updatedState.wheelbuttons = newWheelState;\r\n      const newTileState = updatedState.tiles;\r\n      const anyAdjacent = (tile) =>\r\n        updatedState.data.board.tiles[tile].owner === data.player;\r\n      const anyAdjacentFromOccupant = (tile) =>\r\n        updatedState.data.board.tiles[tile].occupant.player === data.player &&\r\n        updatedState.data.board.tiles[tile].type !== \"none\";\r\n      const god_key = Object.keys(updatedState.gods).filter(\r\n        (god) => updatedState.gods[god].player === data.player\r\n      );\r\n      if (updatedState.wheelbuttons[data.wheelbutton_id].selected) {\r\n        Object.keys(newTileState).forEach((key) => {\r\n          let tileType = updatedState.data.board.tiles[key].type;\r\n          let tileOwner = updatedState.data.board.tiles[key].owner;\r\n          if (\r\n            tileType === \"none\" ||\r\n            (tileType === \"prairie\" && tileOwner === data.player)\r\n          ) {\r\n            if (\r\n              newTileState[key].adjacent.some(anyAdjacent) ||\r\n              newTileState[key].adjacent.some(anyAdjacentFromOccupant) ||\r\n              updatedState.gods[god_key].adjacent.includes(key)\r\n            ) {\r\n              if (\r\n                !updatedState.data.board.tiles[key].occupant.movement.special\r\n                  .aquatic\r\n              ) {\r\n                newTileState[key].selectable = true;\r\n              } else if (\r\n                updatedState.wheelbuttons[data.wheelbutton_id].action === \"lake\"\r\n              ) {\r\n                newTileState[key].selectable = true;\r\n              }\r\n            }\r\n          }\r\n        });\r\n      } else {\r\n        Object.keys(newTileState).forEach((key) => {\r\n          newTileState[key].selectable = false;\r\n        });\r\n      }\r\n      updatedState.tiles = newTileState;\r\n      return updatedState;\r\n    },\r\n    DRAW_CARD: (currentState, data) => {\r\n      const updatedState = JSON.parse(JSON.stringify(currentState));\r\n      const god = {\r\n        player1: \"D6\",\r\n        player2: \"D0\",\r\n      };\r\n      if (updatedState.data[data.player].deck.length > 0) {\r\n        if (updatedState.data[data.player].hand.length < 9) {\r\n          updatedState.data[data.player].hand.push(\r\n            updatedState.data[data.player].deck.splice(0, 1)[0]\r\n          );\r\n        } else {\r\n          updatedState.data[data.player].deck.splice(0, 1);\r\n        }\r\n      } else {\r\n        updatedState.data.board.gods[god[data.player]].health -= ++updatedState\r\n          .data[data.player].health_dmg;\r\n        if (updatedState.data.board.gods[god[data.player]].health <= 0) {\r\n          updatedState.data.status.finished = true;\r\n          updatedState.data.status.winner = data.opponent;\r\n        }\r\n      }\r\n      updatedState.data[data.player].wheel_used = true;\r\n      const formdata = new FormData();\r\n      formdata.append(\"react_state\", JSON.stringify(updatedState));\r\n      formdata.append(\"id\", document.getElementById(\"game_id\").value);\r\n      axios\r\n        .post(\"/faeria/Faeria/utils/saveState.php\", formdata)\r\n        .catch((error) => {\r\n          console.log(\"Network Error\", error.message);\r\n        });\r\n      return updatedState;\r\n    },\r\n    PLUS_FAERIA: (currentState, player) => {\r\n      const updatedState = JSON.parse(JSON.stringify(currentState));\r\n      updatedState.data[player].faeria++;\r\n      updatedState.data[player].wheel_used = true;\r\n      const formdata = new FormData();\r\n      formdata.append(\"react_state\", JSON.stringify(updatedState));\r\n      formdata.append(\"id\", document.getElementById(\"game_id\").value);\r\n      axios\r\n        .post(\"/faeria/Faeria/utils/saveState.php\", formdata)\r\n        .catch((error) => {\r\n          console.log(\"Network Error\", error.message);\r\n        });\r\n      return updatedState;\r\n    },\r\n    BUILD_TILE: (currentState, data) => {\r\n      const updatedState = JSON.parse(JSON.stringify(currentState));\r\n      let type = \"none\";\r\n      Object.values(updatedState.wheelbuttons).forEach((wheelbutton) => {\r\n        if (wheelbutton.selected) {\r\n          type = wheelbutton.action;\r\n        }\r\n      });\r\n      updatedState.data.board.tiles[data.tile_id].type = type;\r\n\r\n      // Cheekbloom\r\n      if (type === \"forest\") {\r\n        Object.keys(updatedState.data.board.tiles).forEach((tile) => {\r\n          if (updatedState.data.board.tiles[tile].occupant.id === 33) {\r\n            updatedState.data.board.tiles[tile].occupant.health += 1;\r\n            updatedState.data.board.tiles[tile].occupant.attack += 1;\r\n          }\r\n        });\r\n      }\r\n      // Cheekbloom\r\n\r\n      updatedState.data.board.tiles[data.tile_id].owner = data.player;\r\n      const wheelbutton_id = Object.keys(updatedState.wheelbuttons).filter(\r\n        (key) => updatedState.wheelbuttons[key].selected\r\n      );\r\n      updatedState.wheelbuttons[wheelbutton_id].selected = false;\r\n      Object.keys(updatedState.tiles).forEach((key) => {\r\n        updatedState.tiles[key].selectable = false;\r\n        updatedState.tiles[key].occupantSelectable = true;\r\n      });\r\n      Object.keys(updatedState.hand).forEach((key) => {\r\n        updatedState.hand[key].selectable = true;\r\n      });\r\n      if (type === \"prairie\") {\r\n        updatedState.data[data.player].wheel_neutral_counter += 1;\r\n      }\r\n      if (updatedState.data[data.player].wheel_neutral_counter !== 1) {\r\n        Object.keys(updatedState.wheelbuttons).forEach((key) => {\r\n          updatedState.wheelbuttons[key].selectable = true;\r\n        });\r\n        updatedState.data[data.player].wheel_used = true;\r\n        updatedState.data[data.player].wheel_neutral_counter = 0;\r\n      }\r\n      const formdata = new FormData();\r\n      formdata.append(\"react_state\", JSON.stringify(updatedState));\r\n      formdata.append(\"id\", document.getElementById(\"game_id\").value);\r\n      axios\r\n        .post(\"/faeria/Faeria/utils/saveState.php\", formdata)\r\n        .catch((error) => {\r\n          console.log(\"Network Error\", error.message);\r\n        });\r\n      return updatedState;\r\n    },\r\n    SELECT_CARD: (currentState, data) => {\r\n      const updatedState = JSON.parse(JSON.stringify(currentState));\r\n      const newHand = updatedState.hand;\r\n      newHand[data.hand_id].selected = !newHand[data.hand_id].selected;\r\n      Object.keys(newHand).forEach((key) => {\r\n        if (parseInt(key) !== data.hand_id) {\r\n          newHand[key].selectable = !newHand[key].selectable;\r\n        }\r\n      });\r\n      updatedState.hand = newHand;\r\n      if (updatedState.data[data.player].wheel_neutral_counter !== 1) {\r\n        Object.keys(updatedState.wheelbuttons).forEach((key) => {\r\n          if (newHand[data.hand_id].selected) {\r\n            updatedState.wheelbuttons[key].selectable = false;\r\n          } else {\r\n            updatedState.wheelbuttons[key].selectable = true;\r\n          }\r\n        });\r\n      } else {\r\n        if (newHand[data.hand_id].selected) {\r\n          updatedState.wheelbuttons[\"wheel-B2\"].selectable = true;\r\n        } else {\r\n          updatedState.wheelbuttons[\"wheel-B2\"].selectable = true;\r\n        }\r\n      }\r\n      Object.keys(updatedState.tiles).forEach((key) => {\r\n        if (newHand[data.hand_id].selected) {\r\n          updatedState.tiles[key].occupantSelectable = false;\r\n        } else {\r\n          updatedState.tiles[key].occupantSelectable = true;\r\n        }\r\n      });\r\n      const getLands = () => {\r\n        let lands = { forest: 0, lake: 0, mountain: 0, desert: 0 };\r\n        Object.values(updatedState.data.board.tiles).forEach((tile) => {\r\n          if (tile.owner === data.player && tile.type !== \"prairie\") {\r\n            lands[tile.type] += 1;\r\n          }\r\n        });\r\n        return lands;\r\n      };\r\n      const lands = getLands();\r\n      const getLandTypes = () => {\r\n        return Object.keys(\r\n          updatedState.data[data.player].cards[data.card_id].land_cost\r\n        ).filter(\r\n          (key) =>\r\n            updatedState.data[data.player].cards[data.card_id].land_cost[key] >\r\n              0 && key !== \"wild\"\r\n        );\r\n      };\r\n      const landtypes = getLandTypes();\r\n      const requirementsMet = (tile) => {\r\n        const canSpawnAdjacentToFriendliesArray = {\r\n          8: \"lake\", //Cheek lord\r\n        };\r\n        const canSpawnAdjacentToFriendlies = (adjTile) => {\r\n          return (\r\n            updatedState.data.board.tiles[adjTile].occupant.player ===\r\n              data.player &&\r\n            updatedState.data.board.tiles[adjTile].occupant.land_cost[\r\n              canSpawnAdjacentToFriendliesArray[\r\n                updatedState.data[data.player].cards[data.card_id].id\r\n              ]\r\n            ] > 0\r\n          );\r\n        };\r\n        if (\r\n          Object.keys(canSpawnAdjacentToFriendliesArray).includes(\r\n            String(updatedState.data[data.player].cards[data.card_id].id)\r\n          )\r\n        ) {\r\n          if (\r\n            !updatedState.tiles[tile].adjacent.some(\r\n              canSpawnAdjacentToFriendlies\r\n            ) &&\r\n            ((!landtypes.includes(updatedState.data.board.tiles[tile].type) &&\r\n              landtypes.length) ||\r\n              updatedState.data.board.tiles[tile].owner !== data.player)\r\n          ) {\r\n            return false;\r\n          }\r\n          if (\r\n            !updatedState.data[data.player].cards[data.card_id].movement.special\r\n              .aquatic &&\r\n            !updatedState.data[data.player].cards[data.card_id].movement.special\r\n              .flying\r\n          ) {\r\n            if (updatedState.data.board.tiles[tile].type === \"none\") {\r\n              return false;\r\n            }\r\n          }\r\n          if (\r\n            updatedState.data[data.player].cards[data.card_id].movement.special\r\n              .aquatic &&\r\n            !updatedState.data[data.player].cards[data.card_id].movement.special\r\n              .flying\r\n          ) {\r\n            if (\r\n              updatedState.data.board.tiles[tile].type !== \"none\" &&\r\n              updatedState.data.board.tiles[tile].type !== \"lake\"\r\n            ) {\r\n              return false;\r\n            }\r\n          }\r\n        } else {\r\n          if (updatedState.data.board.tiles[tile].owner !== data.player) {\r\n            return false;\r\n          }\r\n          if (\r\n            !landtypes.includes(updatedState.data.board.tiles[tile].type) &&\r\n            landtypes.length\r\n          ) {\r\n            return false;\r\n          }\r\n        }\r\n        if (updatedState.data.board.tiles[tile].occupant.player) {\r\n          return false;\r\n        }\r\n        let valid = true;\r\n        Object.keys(\r\n          updatedState.data[data.player].cards[data.card_id].land_cost\r\n        ).forEach((key) => {\r\n          if (key !== \"wild\") {\r\n            if (\r\n              updatedState.data[data.player].cards[data.card_id].land_cost[\r\n                key\r\n              ] > lands[key]\r\n            ) {\r\n              valid = false;\r\n            }\r\n          } else {\r\n            if (\r\n              updatedState.data[data.player].cards[data.card_id].land_cost[\r\n                key\r\n              ] >\r\n              Object.values(lands).reduce(\r\n                (sum, currentValue) => sum + currentValue\r\n              )\r\n            ) {\r\n              valid = false;\r\n            }\r\n          }\r\n        });\r\n        return valid;\r\n      };\r\n      if (newHand[data.hand_id].selected) {\r\n        updatedState.currentAction = \"summon_creature\";\r\n        Object.keys(updatedState.tiles).forEach((key) => {\r\n          if (requirementsMet(key)) {\r\n            updatedState.tiles[key].selectable = true;\r\n          }\r\n        });\r\n      } else {\r\n        updatedState.currentAction = \"\";\r\n        Object.keys(updatedState.tiles).forEach((key) => {\r\n          updatedState.tiles[key].selectable = false;\r\n        });\r\n      }\r\n      return updatedState;\r\n    },\r\n    SELECT_EVENT: (currentState, data) => {\r\n      let updatedState = JSON.parse(JSON.stringify(currentState));\r\n      const getLands = () => {\r\n        let lands = { forest: 0, lake: 0, mountain: 0, desert: 0 };\r\n        Object.values(updatedState.data.board.tiles).forEach((tile) => {\r\n          if (tile.owner === data.player && tile.type !== \"prairie\") {\r\n            lands[tile.type] += 1;\r\n          }\r\n        });\r\n        return lands;\r\n      };\r\n      const lands = getLands();\r\n      let runLogic = true;\r\n      Object.keys(\r\n        updatedState.data[data.player].cards[data.card_id].land_cost\r\n      ).forEach((key) => {\r\n        if (key !== \"wild\") {\r\n          if (\r\n            updatedState.data[data.player].cards[data.card_id].land_cost[key] >\r\n            lands[key]\r\n          ) {\r\n            runLogic = false;\r\n          }\r\n        } else {\r\n          if (\r\n            updatedState.data[data.player].cards[data.card_id].land_cost[key] >\r\n            Object.values(lands).reduce(\r\n              (sum, currentValue) => sum + currentValue\r\n            )\r\n          ) {\r\n            runLogic = false;\r\n          }\r\n        }\r\n      });\r\n      if (runLogic) {\r\n        const EP = new EventProcessor(updatedState, data);\r\n        if (updatedState.data[data.player].cards[data.card_id].effects.target) {\r\n          updatedState = EP.initEventLogic();\r\n        } else {\r\n          updatedState.hand[data.hand_id].selected =\r\n            !updatedState.hand[data.hand_id].selected;\r\n          updatedState = EP.handleEventLogic();\r\n          const formdata = new FormData();\r\n          formdata.append(\"react_state\", JSON.stringify(updatedState));\r\n          formdata.append(\"id\", document.getElementById(\"game_id\").value);\r\n          axios\r\n            .post(\"/faeria/Faeria/utils/saveState.php\", formdata)\r\n            .catch((error) => {\r\n              console.log(\"Network Error\", error.message);\r\n            });\r\n        }\r\n      }\r\n      return updatedState;\r\n    },\r\n    PROCESS_EVENT_OCCUPANT: (currentState, data) => {\r\n      let updatedState = JSON.parse(JSON.stringify(currentState));\r\n      const EP = new EventProcessor(updatedState, data);\r\n      updatedState = EP.handleEventLogic();\r\n      const formdata = new FormData();\r\n      formdata.append(\"react_state\", JSON.stringify(updatedState));\r\n      formdata.append(\"id\", document.getElementById(\"game_id\").value);\r\n      axios\r\n        .post(\"/faeria/Faeria/utils/saveState.php\", formdata)\r\n        .catch((error) => {\r\n          console.log(\"Network Error\", error.message);\r\n        });\r\n      return updatedState;\r\n    },\r\n    PROCESS_EVENT_TILE: (currentState, data) => {\r\n      let updatedState = JSON.parse(JSON.stringify(currentState));\r\n      const EP = new EventProcessor(updatedState, data);\r\n      updatedState = EP.handleEventLogic();\r\n      const formdata = new FormData();\r\n      formdata.append(\"react_state\", JSON.stringify(updatedState));\r\n      formdata.append(\"id\", document.getElementById(\"game_id\").value);\r\n      axios\r\n        .post(\"/faeria/Faeria/utils/saveState.php\", formdata)\r\n        .catch((error) => {\r\n          console.log(\"Network Error\", error.message);\r\n        });\r\n      return updatedState;\r\n    },\r\n    PROCESS_GIFT_OCCUPANT: (currentState, data) => {\r\n      let updatedState = JSON.parse(JSON.stringify(currentState));\r\n      const selected_occupant_id = Object.keys(updatedState.tiles).filter(\r\n        (key) => updatedState.tiles[key].occupantSelected\r\n      )[0];\r\n      const EP = new EventProcessor(updatedState, data);\r\n      updatedState = EP.processGiftEffect(selected_occupant_id);\r\n      const formdata = new FormData();\r\n      formdata.append(\"react_state\", JSON.stringify(updatedState));\r\n      formdata.append(\"id\", document.getElementById(\"game_id\").value);\r\n      axios\r\n        .post(\"/faeria/Faeria/utils/saveState.php\", formdata)\r\n        .catch((error) => {\r\n          console.log(\"Network Error\", error.message);\r\n        });\r\n      return updatedState;\r\n    },\r\n    CHOOSE_CARD: (currentState, data) => {\r\n      let updatedState = JSON.parse(JSON.stringify(currentState));\r\n      const EP = new EventProcessor(updatedState, data);\r\n      EP.processSpecialEffect(data.id, { tile: data.tile });\r\n\r\n      //Wheel\r\n      Object.keys(updatedState.wheelbuttons).forEach((wheel) => {\r\n        updatedState.wheelbuttons[wheel].selectable = true;\r\n        updatedState.wheelbuttons[wheel].selected = false;\r\n      });\r\n\r\n      //Hand\r\n      Object.keys(updatedState.hand).forEach((card) => {\r\n        updatedState.hand[card].selectable = true;\r\n        updatedState.hand[card].selected = false;\r\n      });\r\n\r\n      //Tiles and Occupants\r\n      Object.keys(updatedState.tiles).forEach((tile) => {\r\n        updatedState.tiles[tile].selectable = false;\r\n        updatedState.tiles[tile].selected = false;\r\n        updatedState.tiles[tile].occupantSelectable = true;\r\n        updatedState.tiles[tile].occupantSelected = false;\r\n      });\r\n\r\n      //Gods\r\n      Object.keys(updatedState.gods).forEach((god) => {\r\n        updatedState.gods[god].selectable = false;\r\n      });\r\n\r\n      const formdata = new FormData();\r\n      formdata.append(\"react_state\", JSON.stringify(updatedState));\r\n      formdata.append(\"id\", document.getElementById(\"game_id\").value);\r\n      axios\r\n        .post(\"/faeria/Faeria/utils/saveState.php\", formdata)\r\n        .catch((error) => {\r\n          console.log(\"Network Error\", error.message);\r\n        });\r\n\r\n      return updatedState;\r\n    },\r\n    SUMMON_CREATURE: (currentState, data) => {\r\n      const updatedState = JSON.parse(JSON.stringify(currentState));\r\n      const newOccupant = updatedState.data.board.tiles[data.tile_id].occupant;\r\n      newOccupant.player = data.player;\r\n      const selected_card_id = parseInt(\r\n        Object.keys(updatedState.hand).filter(\r\n          (key) => updatedState.hand[key].selected\r\n        )[0]\r\n      );\r\n      const card =\r\n        updatedState.data[data.player].cards[\r\n          updatedState.data[data.player].hand[selected_card_id - 1]\r\n        ];\r\n      newOccupant.id = card.id;\r\n      newOccupant.type = card.type;\r\n      newOccupant.faeria_cost = card.faeria_cost;\r\n      newOccupant.land_cost = card.land_cost;\r\n      newOccupant.attack = card.attack;\r\n      newOccupant.base_attack = card.base_attack;\r\n      newOccupant.health = card.health;\r\n      newOccupant.base_health = card.base_health;\r\n      newOccupant.movement = card.movement;\r\n      newOccupant.taunt = card.taunt;\r\n      newOccupant.divine = card.divine;\r\n      newOccupant.protection = card.protection;\r\n      newOccupant.ranged = card.ranged;\r\n      newOccupant.hasDashed = false;\r\n      newOccupant.effects = card.effects;\r\n      if (!card.movement.haste) {\r\n        newOccupant.hasMoved = true;\r\n        newOccupant.hasAttacked = true;\r\n        newOccupant.canCollect = false;\r\n      } else {\r\n        newOccupant.canCollect = true;\r\n        newOccupant.hasMoved = false;\r\n        newOccupant.hasAttacked = false;\r\n        if (card.movement.dash === 0) {\r\n          Object.keys(updatedState.data.board.wells).forEach((key) => {\r\n            if (\r\n              updatedState.data.board.wells[key].adjacent.includes(\r\n                data.tile_id\r\n              ) &&\r\n              updatedState.data.board.wells[key].available\r\n            ) {\r\n              updatedState.data.board.wells[key].available = false;\r\n              updatedState.data.board.wells[key].collected = true;\r\n              updatedState.data[data.player].faeria += 1;\r\n            }\r\n          });\r\n        }\r\n      }\r\n      updatedState.data.board.tiles[data.tile_id].occupant = newOccupant;\r\n      const newHand = updatedState.hand;\r\n      newHand[selected_card_id].selected = !newHand[selected_card_id].selected;\r\n      if (newOccupant.effects.summon) {\r\n        const EP = new EventProcessor(updatedState, data);\r\n        EP.processSummonEffect(\r\n          updatedState.data.board.tiles[data.tile_id].occupant\r\n        );\r\n      }\r\n      if (newOccupant.effects.gift) {\r\n        const EP = new EventProcessor(updatedState, data);\r\n        newHand[selected_card_id].selectable = false;\r\n        EP.initGiftEffect(updatedState.data.board.tiles[data.tile_id].occupant);\r\n      } else if (\r\n        updatedState.currentAction !== \"event_choose_occupant\" &&\r\n        updatedState.data.board.tiles[data.tile_id].occupant.movement.dash === 0\r\n      ) {\r\n        Object.keys(updatedState.tiles).forEach((key) => {\r\n          updatedState.tiles[key].selectable = false;\r\n          updatedState.tiles[key].occupantSelectable = true;\r\n        });\r\n        Object.keys(newHand).forEach((key) => {\r\n          newHand[key].selectable = true;\r\n        });\r\n        if (updatedState.data[data.player].wheel_neutral_counter !== 1) {\r\n          Object.keys(updatedState.wheelbuttons).forEach((key) => {\r\n            updatedState.wheelbuttons[key].selectable = true;\r\n          });\r\n        } else {\r\n          updatedState.wheelbuttons[\"wheel-B2\"].selectable = true;\r\n        }\r\n        updatedState.currentAction = \"\";\r\n      }\r\n      if (\r\n        updatedState.data.board.tiles[data.tile_id].occupant.movement.dash > 0\r\n      ) {\r\n        updatedState.tiles[data.tile_id].occupantSelectable = true;\r\n      }\r\n      updatedState.hand = newHand;\r\n      updatedState.data[data.player].faeria -=\r\n        updatedState.data[data.player].cards[\r\n          updatedState.data[data.player].hand[selected_card_id - 1]\r\n        ].faeria_cost;\r\n      updatedState.data[data.player].hand.splice(selected_card_id - 1, 1);\r\n\r\n      //Balloon Cheek\r\n      const EP = new EventProcessor(updatedState, data);\r\n      EP.processSpecialEffect(43, {\r\n        action: \"summon\",\r\n        tile: data.tile_id,\r\n        attack: 1,\r\n      });\r\n      //Balloon Cheek\r\n\r\n      const formdata = new FormData();\r\n      formdata.append(\"react_state\", JSON.stringify(updatedState));\r\n      formdata.append(\"id\", document.getElementById(\"game_id\").value);\r\n      axios\r\n        .post(\"/faeria/Faeria/utils/saveState.php\", formdata)\r\n        .catch((error) => {\r\n          console.log(\"Network Error\", error.message);\r\n        });\r\n      return updatedState;\r\n    },\r\n    SELECT_OCCUPANT: (currentState, data) => {\r\n      const updatedState = JSON.parse(JSON.stringify(currentState));\r\n      updatedState.tiles[data.tile_id].occupantSelected =\r\n        !updatedState.tiles[data.tile_id].occupantSelected;\r\n      const anyTaunt = (taunt_tile) =>\r\n        updatedState.data.board.tiles[taunt_tile].occupant.taunt &&\r\n        updatedState.data.board.tiles[taunt_tile].occupant.player ===\r\n          data.opponent;\r\n      const isTaunted =\r\n        updatedState.tiles[data.tile_id].adjacent.some(anyTaunt);\r\n      const jumpTiles = [];\r\n      if (\r\n        updatedState.data.board.tiles[data.tile_id].occupant.movement.special\r\n          .jump\r\n      ) {\r\n        updatedState.tiles[data.tile_id].adjacent.forEach((tile) => {\r\n          if (!jumpTiles.includes(tile) && tile !== data.tile_id) {\r\n            jumpTiles.push(tile);\r\n          }\r\n          updatedState.tiles[tile].adjacent.forEach((adjacent_tile) => {\r\n            if (\r\n              !jumpTiles.includes(adjacent_tile) &&\r\n              adjacent_tile !== data.tile_id\r\n            ) {\r\n              jumpTiles.push(adjacent_tile);\r\n            }\r\n          });\r\n        });\r\n      }\r\n      const movementRange =\r\n        updatedState.data.board.tiles[data.tile_id].occupant.movement.dash >\r\n          0 && !updatedState.data.board.tiles[data.tile_id].occupant.hasDashed\r\n          ? updatedState.data.board.tiles[data.tile_id].occupant.movement.dash\r\n          : updatedState.data.board.tiles[data.tile_id].occupant.movement.range;\r\n      const rangeTiles = [];\r\n      const rangeTilesHelper = {};\r\n      for (let i = 1; i <= movementRange; i++) {\r\n        if (i === 1) {\r\n          rangeTilesHelper[i] = {};\r\n          updatedState.tiles[data.tile_id].adjacent.forEach((tile) => {\r\n            let valid = true;\r\n            if (\r\n              updatedState.data.board.tiles[data.tile_id].occupant.movement\r\n                .special.aquatic &&\r\n              !updatedState.data.board.tiles[data.tile_id].occupant.movement\r\n                .special.flying\r\n            ) {\r\n              if (\r\n                updatedState.data.board.tiles[tile].type !== \"lake\" &&\r\n                updatedState.data.board.tiles[tile].type !== \"none\"\r\n              ) {\r\n                valid = false;\r\n              }\r\n            }\r\n            if (\r\n              !updatedState.data.board.tiles[data.tile_id].occupant.movement\r\n                .special.aquatic &&\r\n              !updatedState.data.board.tiles[data.tile_id].occupant.movement\r\n                .special.flying\r\n            ) {\r\n              if (updatedState.data.board.tiles[tile].type === \"none\") {\r\n                valid = false;\r\n              }\r\n            }\r\n            if (valid && !updatedState.data.board.tiles[tile].occupant.player) {\r\n              rangeTiles.push(tile);\r\n              rangeTilesHelper[i][tile] = {\r\n                prevTile: data.tile_id,\r\n                currentTile: tile,\r\n              };\r\n            }\r\n          });\r\n        } else {\r\n          rangeTilesHelper[i] = {};\r\n          Object.values(rangeTilesHelper[i - 1]).forEach((rangetile) => {\r\n            updatedState.tiles[rangetile.currentTile].adjacent\r\n              .filter(\r\n                (rangetile_key) =>\r\n                  !updatedState.tiles[rangetile.prevTile].adjacent.includes(\r\n                    rangetile_key\r\n                  ) && rangetile_key !== rangetile.prevTile\r\n              )\r\n              .forEach((rangetile_adj) => {\r\n                let valid = true;\r\n                updatedState.tiles[rangetile_adj].adjacent\r\n                  .filter(\r\n                    (rangetile_adj_key) =>\r\n                      rangetile_adj_key !== rangetile.currentTile\r\n                  )\r\n                  .forEach((rangetile_adj_adj) => {\r\n                    if (\r\n                      updatedState.tiles[rangetile_adj_adj].adjacent.includes(\r\n                        rangetile.prevTile\r\n                      )\r\n                    ) {\r\n                      valid = false;\r\n                    }\r\n                  });\r\n                if (updatedState.tiles[rangetile_adj].adjacentNonTile) {\r\n                  if (\r\n                    updatedState.tiles[rangetile_adj].adjacentNonTile.includes(\r\n                      \"D\"\r\n                    )\r\n                  ) {\r\n                    if (\r\n                      updatedState.gods[\r\n                        updatedState.tiles[rangetile_adj].adjacentNonTile\r\n                      ].adjacent.includes(rangetile.prevTile)\r\n                    ) {\r\n                      valid = false;\r\n                    }\r\n                  } else {\r\n                    if (\r\n                      updatedState.data.board.wells[\r\n                        updatedState.tiles[rangetile_adj].adjacentNonTile\r\n                      ].adjacent.includes(rangetile.prevTile)\r\n                    ) {\r\n                      valid = false;\r\n                    }\r\n                  }\r\n                }\r\n                if (\r\n                  updatedState.data.board.tiles[data.tile_id].occupant.movement\r\n                    .special.aquatic &&\r\n                  !updatedState.data.board.tiles[data.tile_id].occupant.movement\r\n                    .special.flying\r\n                ) {\r\n                  if (\r\n                    updatedState.data.board.tiles[rangetile_adj].type !==\r\n                      \"lake\" &&\r\n                    updatedState.data.board.tiles[rangetile_adj].type !== \"none\"\r\n                  ) {\r\n                    valid = false;\r\n                  }\r\n                }\r\n                if (\r\n                  !updatedState.data.board.tiles[data.tile_id].occupant.movement\r\n                    .special.aquatic &&\r\n                  !updatedState.data.board.tiles[data.tile_id].occupant.movement\r\n                    .special.flying\r\n                ) {\r\n                  if (\r\n                    updatedState.data.board.tiles[rangetile_adj].type === \"none\"\r\n                  ) {\r\n                    valid = false;\r\n                  }\r\n                }\r\n                if (\r\n                  valid &&\r\n                  !rangeTiles.includes(rangetile_adj) &&\r\n                  !updatedState.data.board.tiles[rangetile_adj].occupant.player\r\n                ) {\r\n                  rangeTiles.push(rangetile_adj);\r\n                  rangeTilesHelper[i][rangetile_adj] = {\r\n                    prevTile: rangetile.currentTile,\r\n                    currentTile: rangetile_adj,\r\n                  };\r\n                }\r\n              });\r\n          });\r\n        }\r\n      }\r\n      const rangeAttack = [];\r\n      const rangeAttackHelper = {};\r\n      if (updatedState.data.board.tiles[data.tile_id].occupant.ranged) {\r\n        for (let i = 1; i <= 5; i++) {\r\n          if (i === 1) {\r\n            rangeAttackHelper[i] = {};\r\n            updatedState.tiles[data.tile_id].adjacent.forEach((tile) => {\r\n              if (!updatedState.data.board.tiles[tile].occupant.player) {\r\n                rangeAttack.push(tile);\r\n                rangeAttackHelper[i][tile] = {\r\n                  prevTile: data.tile_id,\r\n                  currentTile: tile,\r\n                };\r\n              }\r\n            });\r\n          } else {\r\n            rangeAttackHelper[i] = {};\r\n            Object.values(rangeAttackHelper[i - 1]).forEach((rangetile) => {\r\n              updatedState.tiles[rangetile.currentTile].adjacent\r\n                .filter(\r\n                  (rangetile_key) =>\r\n                    !updatedState.tiles[rangetile.prevTile].adjacent.includes(\r\n                      rangetile_key\r\n                    ) && rangetile_key !== rangetile.prevTile\r\n                )\r\n                .forEach((rangetile_adj) => {\r\n                  let valid = true;\r\n                  updatedState.tiles[rangetile_adj].adjacent\r\n                    .filter(\r\n                      (rangetile_adj_key) =>\r\n                        rangetile_adj_key !== rangetile.currentTile\r\n                    )\r\n                    .forEach((rangetile_adj_adj) => {\r\n                      if (\r\n                        updatedState.tiles[rangetile_adj_adj].adjacent.includes(\r\n                          rangetile.prevTile\r\n                        )\r\n                      ) {\r\n                        valid = false;\r\n                      }\r\n                    });\r\n                  if (updatedState.tiles[rangetile_adj].adjacentNonTile) {\r\n                    if (\r\n                      updatedState.tiles[\r\n                        rangetile_adj\r\n                      ].adjacentNonTile.includes(\"D\")\r\n                    ) {\r\n                      if (\r\n                        updatedState.gods[\r\n                          updatedState.tiles[rangetile_adj].adjacentNonTile\r\n                        ].adjacent.includes(rangetile.prevTile)\r\n                      ) {\r\n                        valid = false;\r\n                      }\r\n                    } else {\r\n                      if (\r\n                        updatedState.data.board.wells[\r\n                          updatedState.tiles[rangetile_adj].adjacentNonTile\r\n                        ].adjacent.includes(rangetile.prevTile)\r\n                      ) {\r\n                        valid = false;\r\n                      }\r\n                    }\r\n                  }\r\n                  if (\r\n                    valid &&\r\n                    !rangeAttack.includes(rangetile_adj) &&\r\n                    !updatedState.data.board.tiles[rangetile.currentTile]\r\n                      .occupant.player\r\n                  ) {\r\n                    rangeAttack.push(rangetile_adj);\r\n                    rangeAttackHelper[i][rangetile_adj] = {\r\n                      prevTile: rangetile.currentTile,\r\n                      currentTile: rangetile_adj,\r\n                    };\r\n                  }\r\n                });\r\n            });\r\n          }\r\n        }\r\n      }\r\n      const moveRequirementsMet = (tile_id) => {\r\n        if (updatedState.data.board.tiles[tile_id].occupant.player) {\r\n          return false;\r\n        }\r\n        if (\r\n          updatedState.data.board.tiles[data.tile_id].occupant.movement.dash >\r\n            0 &&\r\n          !updatedState.data.board.tiles[data.tile_id].occupant.hasDashed\r\n        ) {\r\n          if (!rangeTiles.includes(tile_id)) {\r\n            return false;\r\n          }\r\n        } else {\r\n          if (updatedState.data.board.tiles[data.tile_id].occupant.hasMoved) {\r\n            return false;\r\n          }\r\n          if (isTaunted) return false;\r\n          if (\r\n            updatedState.data.board.tiles[data.tile_id].occupant.movement\r\n              .special.jump\r\n          ) {\r\n            if (!jumpTiles.includes(tile_id) && !rangeTiles.includes(tile_id)) {\r\n              return false;\r\n            }\r\n          } else {\r\n            if (!rangeTiles.includes(tile_id)) {\r\n              return false;\r\n            }\r\n          }\r\n        }\r\n        if (\r\n          !updatedState.data.board.tiles[data.tile_id].occupant.movement.special\r\n            .aquatic &&\r\n          !updatedState.data.board.tiles[data.tile_id].occupant.movement.special\r\n            .flying\r\n        ) {\r\n          if (updatedState.data.board.tiles[tile_id].type === \"none\") {\r\n            return false;\r\n          }\r\n        }\r\n        if (\r\n          updatedState.data.board.tiles[data.tile_id].occupant.movement.special\r\n            .aquatic &&\r\n          !updatedState.data.board.tiles[data.tile_id].occupant.movement.special\r\n            .flying\r\n        ) {\r\n          if (\r\n            updatedState.data.board.tiles[tile_id].type !== \"lake\" &&\r\n            updatedState.data.board.tiles[tile_id].type !== \"none\"\r\n          ) {\r\n            return false;\r\n          }\r\n        }\r\n        return true;\r\n      };\r\n      const attackRequirementsMet = (tile_id) => {\r\n        if (updatedState.data.board.tiles[data.tile_id].occupant.ranged) {\r\n          if (!rangeAttack.includes(tile_id)) {\r\n            if (!updatedState.tiles[data.tile_id].adjacent.includes(tile_id)) {\r\n              return false;\r\n            }\r\n          }\r\n        } else {\r\n          if (!updatedState.tiles[data.tile_id].adjacent.includes(tile_id)) {\r\n            return false;\r\n          }\r\n        }\r\n        if (\r\n          !updatedState.data.board.tiles[tile_id].occupant.player ||\r\n          updatedState.data.board.tiles[tile_id].occupant.player === data.player\r\n        ) {\r\n          return false;\r\n        }\r\n        if (updatedState.data.board.tiles[data.tile_id].occupant.hasAttacked) {\r\n          return false;\r\n        }\r\n        if (isTaunted) {\r\n          if (\r\n            !updatedState.tiles[data.tile_id].adjacent.includes(tile_id) ||\r\n            (updatedState.tiles[data.tile_id].adjacent.includes(tile_id) &&\r\n              !updatedState.data.board.tiles[tile_id].occupant.taunt)\r\n          ) {\r\n            return false;\r\n          }\r\n        }\r\n        return true;\r\n      };\r\n      if (updatedState.tiles[data.tile_id].occupantSelected) {\r\n        Object.keys(updatedState.wheelbuttons).forEach((key) => {\r\n          updatedState.wheelbuttons[key].selectable = false;\r\n        });\r\n        Object.keys(updatedState.hand).forEach((key) => {\r\n          updatedState.hand[key].selectable = false;\r\n        });\r\n        Object.keys(updatedState.tiles).forEach((key) => {\r\n          if (moveRequirementsMet(key)) {\r\n            updatedState.tiles[key].selectable = true;\r\n          }\r\n          if (attackRequirementsMet(key)) {\r\n            updatedState.tiles[key].occupantSelectable = true;\r\n          } else if (data.tile_id !== key) {\r\n            updatedState.tiles[key].occupantSelectable = false;\r\n          }\r\n        });\r\n        updatedState.currentAction = \"occupant_selected\";\r\n      } else {\r\n        if (updatedState.data[data.player].wheel_neutral_counter !== 1) {\r\n          Object.keys(updatedState.wheelbuttons).forEach((key) => {\r\n            updatedState.wheelbuttons[key].selectable = true;\r\n          });\r\n        } else {\r\n          updatedState.wheelbuttons[\"wheel-B2\"].selectable = true;\r\n        }\r\n        Object.keys(updatedState.hand).forEach((key) => {\r\n          updatedState.hand[key].selectable = true;\r\n        });\r\n        Object.keys(updatedState.tiles).forEach((key) => {\r\n          updatedState.tiles[key].selectable = false;\r\n          updatedState.tiles[key].occupantSelectable = true;\r\n        });\r\n        updatedState.data.board.tiles[data.tile_id].occupant.hasDashed = true;\r\n        if (\r\n          updatedState.data.board.tiles[data.tile_id].occupant.movement.haste\r\n        ) {\r\n          Object.keys(updatedState.data.board.wells).forEach((key) => {\r\n            if (\r\n              updatedState.data.board.wells[key].adjacent.includes(\r\n                data.tile_id\r\n              ) &&\r\n              updatedState.data.board.wells[key].available\r\n            ) {\r\n              updatedState.data.board.wells[key].available = false;\r\n              updatedState.data.board.wells[key].collected = true;\r\n              updatedState.data[data.player].faeria += 1;\r\n            }\r\n          });\r\n        }\r\n        updatedState.currentAction = \"\";\r\n      }\r\n      const god = data.player === \"player1\" ? \"D0\" : \"D6\";\r\n      const rangeAttackArrayHelper =\r\n        data.player === \"player1\"\r\n          ? [\"B1\", \"F1\", \"D2\", \"D3\", \"D4\", \"D5\"]\r\n          : [\"B5\", \"F5\", \"D1\", \"D2\", \"D3\", \"D4\"];\r\n      if (updatedState.tiles[data.tile_id].occupantSelected) {\r\n        if (!updatedState.data.board.tiles[data.tile_id].occupant.hasAttacked) {\r\n          if (\r\n            updatedState.data.board.tiles[data.tile_id].occupant.ranged &&\r\n            !updatedState.gods[god].adjacent.includes(data.tile_id)\r\n          ) {\r\n            const rangeAttackArray = rangeAttack.filter((attacktile) =>\r\n              updatedState.gods[god].adjacent.includes(attacktile)\r\n            );\r\n            if (\r\n              rangeAttackArray.length === 1 &&\r\n              !updatedState.data.board.tiles[rangeAttackArray[0]].occupant\r\n                .player &&\r\n              rangeAttackArrayHelper.includes(data.tile_id)\r\n            ) {\r\n              updatedState.gods[god].selectable = true;\r\n            }\r\n          } else {\r\n            if (updatedState.gods[god].adjacent.includes(data.tile_id)) {\r\n              updatedState.gods[god].selectable = true;\r\n            }\r\n          }\r\n        }\r\n      } else {\r\n        updatedState.gods[god].selectable = false;\r\n      }\r\n      return updatedState;\r\n    },\r\n    MOVE_OCCUPANT: (currentState, data) => {\r\n      const updatedState = JSON.parse(JSON.stringify(currentState));\r\n      const selected_tile_id = Object.keys(updatedState.tiles).filter(\r\n        (key) => updatedState.tiles[key].occupantSelected\r\n      )[0];\r\n      updatedState.data.board.tiles[data.tile_id].occupant =\r\n        updatedState.data.board.tiles[selected_tile_id].occupant;\r\n      const removeOccupant = {\r\n        player: \"\",\r\n        id: 0,\r\n        type: \"\",\r\n        faeria_cost: 0,\r\n        land_cost: {\r\n          forest: 0,\r\n          desert: 0,\r\n          mountain: 0,\r\n          lake: 0,\r\n          wild: 0,\r\n        },\r\n        attack: 0,\r\n        base_attack: 0,\r\n        health: 0,\r\n        base_health: 0,\r\n        movement: {\r\n          range: 1,\r\n          haste: true,\r\n          dash: 0,\r\n          special: {\r\n            aquatic: false,\r\n            flying: false,\r\n            jump: false,\r\n          },\r\n        },\r\n        taunt: false,\r\n        divine: false,\r\n        protection: false,\r\n        ranged: false,\r\n        canCollect: false,\r\n        hasMoved: false,\r\n        hasDashed: false,\r\n        hasAttacked: false,\r\n        effects: {\r\n          summon: false,\r\n          gift: false,\r\n          lastword: false,\r\n          production: false,\r\n        },\r\n        effectUsed: false,\r\n      };\r\n      updatedState.data.board.tiles[selected_tile_id].occupant = removeOccupant;\r\n      if (updatedState.data[data.player].wheel_neutral_counter !== 1) {\r\n        Object.keys(updatedState.wheelbuttons).forEach((key) => {\r\n          updatedState.wheelbuttons[key].selectable = true;\r\n        });\r\n      } else {\r\n        updatedState.wheelbuttons[\"wheel-B2\"].selectable = true;\r\n      }\r\n      Object.keys(updatedState.hand).forEach((key) => {\r\n        updatedState.hand[key].selectable = true;\r\n      });\r\n      Object.keys(updatedState.tiles).forEach((key) => {\r\n        updatedState.tiles[key].selectable = false;\r\n        updatedState.tiles[key].occupantSelectable = true;\r\n      });\r\n      updatedState.tiles[selected_tile_id].occupantSelected = false;\r\n      if (\r\n        updatedState.data.board.tiles[data.tile_id].occupant.movement.dash >\r\n          0 &&\r\n        !updatedState.data.board.tiles[data.tile_id].occupant.hasDashed &&\r\n        updatedState.currentAction !== \"event_move_occupant\"\r\n      ) {\r\n        updatedState.data.board.tiles[data.tile_id].occupant.hasDashed = true;\r\n        if (\r\n          updatedState.data.board.tiles[data.tile_id].occupant.movement.haste\r\n        ) {\r\n          Object.keys(updatedState.data.board.wells).forEach((key) => {\r\n            if (\r\n              updatedState.data.board.wells[key].adjacent.includes(\r\n                data.tile_id\r\n              ) &&\r\n              updatedState.data.board.wells[key].available\r\n            ) {\r\n              updatedState.data.board.wells[key].available = false;\r\n              updatedState.data.board.wells[key].collected = true;\r\n              updatedState.data[data.player].faeria += 1;\r\n            }\r\n          });\r\n        }\r\n      } else {\r\n        if (updatedState.currentAction !== \"event_move_occupant\") {\r\n          updatedState.data.board.tiles[data.tile_id].occupant.hasMoved = true;\r\n          if (updatedState.data.board.tiles[data.tile_id].occupant.ranged) {\r\n            updatedState.data.board.tiles[\r\n              data.tile_id\r\n            ].occupant.hasAttacked = true;\r\n          }\r\n        }\r\n        Object.keys(updatedState.data.board.wells).forEach((key) => {\r\n          if (\r\n            updatedState.data.board.wells[key].adjacent.includes(\r\n              data.tile_id\r\n            ) &&\r\n            updatedState.data.board.wells[key].available &&\r\n            updatedState.data.board.tiles[data.tile_id].occupant.canCollect &&\r\n            updatedState.data.board.tiles[data.tile_id].occupant.player ===\r\n              data.player\r\n          ) {\r\n            updatedState.data.board.wells[key].available = false;\r\n            updatedState.data.board.wells[key].collected = true;\r\n            updatedState.data[data.player].faeria += 1;\r\n          }\r\n        });\r\n      }\r\n      Object.keys(updatedState.gods).forEach((god) => {\r\n        updatedState.gods[god].selectable = false;\r\n      });\r\n      updatedState.currentAction = \"\";\r\n      const formdata = new FormData();\r\n      formdata.append(\"react_state\", JSON.stringify(updatedState));\r\n      formdata.append(\"id\", document.getElementById(\"game_id\").value);\r\n      axios\r\n        .post(\"/faeria/Faeria/utils/saveState.php\", formdata)\r\n        .catch((error) => {\r\n          console.log(\"Network Error\", error.message);\r\n        });\r\n      return updatedState;\r\n    },\r\n    ATTACK_OCCUPANT: (currentState, data) => {\r\n      const updatedState = JSON.parse(JSON.stringify(currentState));\r\n      const selected_occupant_id = Object.keys(updatedState.tiles).filter(\r\n        (key) => updatedState.tiles[key].occupantSelected\r\n      )[0];\r\n      const attacker =\r\n        updatedState.data.board.tiles[selected_occupant_id].occupant;\r\n      const defender = updatedState.data.board.tiles[data.tile_id].occupant;\r\n      const removeOccupant = {\r\n        player: \"\",\r\n        id: 0,\r\n        type: \"\",\r\n        faeria_cost: 0,\r\n        land_cost: {\r\n          forest: 0,\r\n          desert: 0,\r\n          mountain: 0,\r\n          lake: 0,\r\n          wild: 0,\r\n        },\r\n        attack: 0,\r\n        base_attack: 0,\r\n        health: 0,\r\n        base_health: 0,\r\n        movement: {\r\n          range: 1,\r\n          haste: true,\r\n          dash: 0,\r\n          special: {\r\n            aquatic: false,\r\n            flying: false,\r\n            jump: false,\r\n          },\r\n        },\r\n        taunt: false,\r\n        divine: false,\r\n        protection: false,\r\n        ranged: false,\r\n        canCollect: false,\r\n        hasMoved: false,\r\n        hasDashed: false,\r\n        hasAttacked: false,\r\n        effects: {\r\n          summon: false,\r\n          gift: false,\r\n          lastword: false,\r\n          production: false,\r\n        },\r\n        effectUsed: false,\r\n      };\r\n      if (\r\n        updatedState.tiles[data.tile_id].adjacent.includes(selected_occupant_id)\r\n      ) {\r\n        attacker.health -= defender.attack;\r\n      }\r\n      if (defender.protection) {\r\n        defender.protection = false;\r\n      } else {\r\n        defender.health -= attacker.attack;\r\n      }\r\n      attacker.hasAttacked = true;\r\n      attacker.hasMoved = true;\r\n      attacker.hasDashed = true;\r\n\r\n      const EP = new EventProcessor(updatedState, data);\r\n\r\n      //Balloon Cheek\r\n      if (attacker.health <= 0) {\r\n        EP.processSpecialEffect(43, {\r\n          action: \"remove\",\r\n          tile: selected_occupant_id,\r\n          attack: -1,\r\n        });\r\n      }\r\n      if (defender.health <= 0) {\r\n        EP.processSpecialEffect(43, {\r\n          action: \"remove\",\r\n          tile: data.tile_id,\r\n          attack: -1,\r\n        });\r\n      }\r\n      //Balloon Cheek\r\n\r\n      //Cheek Cannon\r\n      EP.processSpecialEffect(53, {\r\n        tile: data.tile_id,\r\n        player: data.player,\r\n      });\r\n      //Cheek Cannon\r\n\r\n      updatedState.data.board.tiles[selected_occupant_id].occupant =\r\n        attacker.health > 0 ? attacker : removeOccupant;\r\n      updatedState.data.board.tiles[data.tile_id].occupant =\r\n        defender.health > 0 ? defender : removeOccupant;\r\n\r\n      if (attacker.health <= 0 && attacker.effects.lastword) {\r\n        EP.processLastwordEffect(attacker, selected_occupant_id);\r\n      }\r\n      if (defender.health <= 0 && defender.effects.lastword) {\r\n        EP.processLastwordEffect(defender, data.tile_id);\r\n      }\r\n      if (updatedState.data[data.player].wheel_neutral_counter !== 1) {\r\n        Object.keys(updatedState.wheelbuttons).forEach((key) => {\r\n          updatedState.wheelbuttons[key].selectable = true;\r\n        });\r\n      } else {\r\n        updatedState.wheelbuttons[\"wheel-B2\"].selectable = true;\r\n      }\r\n      Object.keys(updatedState.hand).forEach((key) => {\r\n        updatedState.hand[key].selectable = true;\r\n      });\r\n      Object.keys(updatedState.tiles).forEach((key) => {\r\n        updatedState.tiles[key].selectable = false;\r\n        updatedState.tiles[key].occupantSelectable = true;\r\n      });\r\n      updatedState.tiles[selected_occupant_id].occupantSelected = false;\r\n      updatedState.currentAction = \"\";\r\n      const formdata = new FormData();\r\n      formdata.append(\"react_state\", JSON.stringify(updatedState));\r\n      formdata.append(\"id\", document.getElementById(\"game_id\").value);\r\n      axios\r\n        .post(\"/faeria/Faeria/utils/saveState.php\", formdata)\r\n        .catch((error) => {\r\n          console.log(\"Network Error\", error.message);\r\n        });\r\n      return updatedState;\r\n    },\r\n    ATTACK_GOD: (currentState, data) => {\r\n      const updatedState = JSON.parse(JSON.stringify(currentState));\r\n      const selected_occupant_id = Object.keys(updatedState.tiles).filter(\r\n        (key) => updatedState.tiles[key].occupantSelected\r\n      )[0];\r\n      const attacker =\r\n        updatedState.data.board.tiles[selected_occupant_id].occupant;\r\n      updatedState.data.board.gods[data.god].health -= attacker.attack;\r\n      updatedState.data.board.gods[data.god].wasHit = true;\r\n      attacker.hasAttacked = true;\r\n      attacker.hasMoved = true;\r\n      updatedState.gods[data.god].selectable = false;\r\n      if (updatedState.data[data.player].wheel_neutral_counter !== 1) {\r\n        Object.keys(updatedState.wheelbuttons).forEach((key) => {\r\n          updatedState.wheelbuttons[key].selectable = true;\r\n        });\r\n      } else {\r\n        updatedState.wheelbuttons[\"wheel-B2\"].selectable = true;\r\n      }\r\n      Object.keys(updatedState.hand).forEach((key) => {\r\n        updatedState.hand[key].selectable = true;\r\n      });\r\n      Object.keys(updatedState.tiles).forEach((key) => {\r\n        updatedState.tiles[key].selectable = false;\r\n        updatedState.tiles[key].occupantSelectable = true;\r\n      });\r\n      updatedState.tiles[selected_occupant_id].occupantSelected = false;\r\n      updatedState.currentAction = \"\";\r\n      if (updatedState.data.board.gods[data.god].health <= 0) {\r\n        updatedState.data.status.finished = true;\r\n        updatedState.data.status.winner = data.player;\r\n      }\r\n      const formdata = new FormData();\r\n      formdata.append(\"react_state\", JSON.stringify(updatedState));\r\n      formdata.append(\"id\", document.getElementById(\"game_id\").value);\r\n      axios\r\n        .post(\"/faeria/Faeria/utils/saveState.php\", formdata)\r\n        .catch((error) => {\r\n          console.log(\"Network Error\", error.message);\r\n        });\r\n      return updatedState;\r\n    },\r\n    END_TURN: (currentState, data) => {\r\n      const updatedState = JSON.parse(JSON.stringify(currentState));\r\n      updatedState.data[data.opponent].wheel_used = false;\r\n      const god = {\r\n        player1: \"D6\",\r\n        player2: \"D0\",\r\n      };\r\n      if (updatedState.data.status.turn > 1) {\r\n        updatedState.data[data.opponent].faeria += 3;\r\n        if (updatedState.data[data.opponent].deck.length > 0) {\r\n          if (updatedState.data[data.opponent].hand.length < 9) {\r\n            updatedState.data[data.opponent].hand.push(\r\n              updatedState.data[data.opponent].deck.splice(0, 1)[0]\r\n            );\r\n          } else {\r\n            updatedState.data[data.opponent].deck.splice(0, 1);\r\n          }\r\n        } else {\r\n          updatedState.data.board.gods[god[data.opponent]].health -=\r\n            ++updatedState.data[data.opponent].health_dmg;\r\n          if (updatedState.data.board.gods[god[data.opponent]].health <= 0) {\r\n            updatedState.data.status.finished = true;\r\n            updatedState.data.status.winner = data.player;\r\n          }\r\n        }\r\n      }\r\n      const removeOccupant = {\r\n        player: \"\",\r\n        id: 0,\r\n        type: \"\",\r\n        faeria_cost: 0,\r\n        land_cost: {\r\n          forest: 0,\r\n          desert: 0,\r\n          mountain: 0,\r\n          lake: 0,\r\n          wild: 0,\r\n        },\r\n        attack: 0,\r\n        base_attack: 0,\r\n        health: 0,\r\n        base_health: 0,\r\n        movement: {\r\n          range: 1,\r\n          haste: true,\r\n          dash: 0,\r\n          special: {\r\n            aquatic: false,\r\n            flying: false,\r\n            jump: false,\r\n          },\r\n        },\r\n        taunt: false,\r\n        divine: false,\r\n        protection: false,\r\n        ranged: false,\r\n        canCollect: false,\r\n        hasMoved: false,\r\n        hasDashed: false,\r\n        hasAttacked: false,\r\n        effects: {\r\n          summon: false,\r\n          gift: false,\r\n          lastword: false,\r\n          production: false,\r\n        },\r\n        effectUsed: false,\r\n      };\r\n      Object.keys(updatedState.data.board.tiles).forEach((key) => {\r\n        if (\r\n          (updatedState.data.board.tiles[key].occupant.movement.special\r\n            .aquatic &&\r\n            !updatedState.data.board.tiles[key].occupant.movement.special\r\n              .flying &&\r\n            updatedState.data.board.tiles[key].occupant.player ===\r\n              data.player &&\r\n            updatedState.data.board.tiles[key].type !== \"lake\" &&\r\n            updatedState.data.board.tiles[key].type !== \"none\") ||\r\n          (!updatedState.data.board.tiles[key].occupant.movement.special\r\n            .aquatic &&\r\n            !updatedState.data.board.tiles[key].occupant.movement.special\r\n              .flying &&\r\n            updatedState.data.board.tiles[key].occupant.player ===\r\n              data.player &&\r\n            updatedState.data.board.tiles[key].type === \"none\")\r\n        ) {\r\n          const occupant = updatedState.data.board.tiles[key].occupant;\r\n          updatedState.data.board.tiles[key].occupant = removeOccupant;\r\n          const EP = new EventProcessor(updatedState, data);\r\n          if (occupant.health <= 0 && occupant.effects.lastword) {\r\n            EP.processLastwordEffect(occupant, key);\r\n          }\r\n        } else {\r\n          //Cheeksquito\r\n          if (updatedState.data.board.tiles[key].occupant.id !== 41) {\r\n            updatedState.data.board.tiles[key].occupant.canCollect = true;\r\n          }\r\n          //Cheeksquito\r\n\r\n          updatedState.data.board.tiles[key].occupant.hasMoved = false;\r\n          updatedState.data.board.tiles[key].occupant.hasAttacked = false;\r\n          updatedState.data.board.tiles[key].occupant.hasDashed = true;\r\n        }\r\n\r\n        //Cheekshrooms\r\n        if (\r\n          updatedState.data.board.tiles[key].occupant.id === 28 &&\r\n          updatedState.data.status.current ===\r\n            updatedState.data.board.tiles[key].occupant.player\r\n        ) {\r\n          updatedState.tiles[key].adjacent.forEach((adjTile) => {\r\n            if (\r\n              updatedState.data.board.tiles[adjTile].occupant.player ===\r\n              data.opponent\r\n            ) {\r\n              let target = updatedState.data.board.tiles[adjTile].occupant;\r\n              if (target.protection) {\r\n                target.protection = false;\r\n              } else {\r\n                target.health -= 1;\r\n              }\r\n\r\n              const EP = new EventProcessor(updatedState, data);\r\n\r\n              //Balloon Cheek\r\n              if (target.health <= 0) {\r\n                EP.processSpecialEffect(43, {\r\n                  action: \"remove\",\r\n                  tile: adjTile,\r\n                  attack: -1,\r\n                });\r\n              }\r\n              //Balloon Cheek\r\n\r\n              updatedState.data.board.tiles[adjTile].occupant =\r\n                target.health > 0 ? target : removeOccupant;\r\n\r\n              if (target.health <= 0 && target.effects.lastword) {\r\n                EP.processLastwordEffect(target, adjTile);\r\n              }\r\n            }\r\n          });\r\n        }\r\n        //Cheekshrooms\r\n      });\r\n\r\n      const anyAdjacent = (tile) =>\r\n        updatedState.data.board.tiles[tile].occupant.player === data.opponent &&\r\n        updatedState.data.board.tiles[tile].occupant.canCollect;\r\n      Object.keys(updatedState.data.board.wells).forEach((key) => {\r\n        if (updatedState.data.board.wells[key].adjacent.some(anyAdjacent)) {\r\n          updatedState.data.board.wells[key].available = false;\r\n          updatedState.data.board.wells[key].collected = true;\r\n          updatedState.data[data.opponent].faeria += 1;\r\n        } else {\r\n          updatedState.data.board.wells[key].available = true;\r\n          updatedState.data.board.wells[key].collected = false;\r\n        }\r\n      });\r\n\r\n      Object.keys(updatedState.data.board.tiles).forEach((key) => {\r\n        if (\r\n          updatedState.data.board.tiles[key].occupant.effects.production &&\r\n          updatedState.data.board.tiles[key].occupant.player === data.opponent\r\n        ) {\r\n          const EP = new EventProcessor(updatedState, data);\r\n          EP.processProductionEffect(\r\n            updatedState.data.board.tiles[key].occupant,\r\n            key\r\n          );\r\n        }\r\n      });\r\n\r\n      updatedState.data.status.turn += 1;\r\n      updatedState.data.status.current = data.opponent;\r\n\r\n      //Wheel\r\n      Object.keys(updatedState.wheelbuttons).forEach((wheel) => {\r\n        updatedState.wheelbuttons[wheel].selectable = true;\r\n        updatedState.wheelbuttons[wheel].selected = false;\r\n      });\r\n\r\n      //Hand\r\n      Object.keys(updatedState.hand).forEach((card) => {\r\n        updatedState.hand[card].selectable = true;\r\n        updatedState.hand[card].selected = false;\r\n      });\r\n\r\n      //Tiles and Occupants\r\n      Object.keys(updatedState.tiles).forEach((tile) => {\r\n        updatedState.tiles[tile].selectable = false;\r\n        updatedState.tiles[tile].selected = false;\r\n        updatedState.tiles[tile].occupantSelectable = true;\r\n        updatedState.tiles[tile].occupantSelected = false;\r\n      });\r\n\r\n      //Gods\r\n      Object.keys(updatedState.gods).forEach((god) => {\r\n        updatedState.gods[god].selectable = false;\r\n      });\r\n\r\n      updatedState.currentAction = \"\";\r\n\r\n      const formdata = new FormData();\r\n      formdata.append(\"react_state\", JSON.stringify(updatedState));\r\n      formdata.append(\"id\", document.getElementById(\"game_id\").value);\r\n      axios\r\n        .post(\"/faeria/Faeria/utils/saveState.php\", formdata)\r\n        .catch((error) => {\r\n          console.log(\"Network Error\", error.message);\r\n        });\r\n\r\n      return updatedState;\r\n    },\r\n    HIGHLIGHT_OCCUPANT: (currentState, data) => {\r\n      const updatedState = JSON.parse(JSON.stringify(currentState));\r\n      updatedState.highlightedOccupant = data.highlight;\r\n      return updatedState;\r\n    },\r\n    END_GAME: (currentState, data) => {\r\n      const updatedState = JSON.parse(JSON.stringify(currentState));\r\n      updatedState.data.status.winner = data.opponent;\r\n      updatedState.data.status.finished = true;\r\n      return updatedState;\r\n    },\r\n  };\r\n  initStore(actions, loadStore);\r\n};\r\n\r\nexport default configureStore;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport configureStore from \"./hooks-store/global-store\";\nimport axios from \"axios\";\n\nlet loadStore = {};\nconst formdata = new FormData();\nformdata.append(\"id\", document.getElementById(\"game_id\").value);\naxios\n  .post(\"/faeria/Faeria/utils/getState.php\", formdata)\n  .then((res) => {\n    loadStore = JSON.parse(res.data);\n    axios\n      .post(\"/faeria/Faeria/utils/getCardsStore.php\")\n      .then((res) => {\n        loadStore.cardLibrary = res.data;\n        configureStore(loadStore);\n        ReactDOM.render(\n          <React.StrictMode>\n            <App />\n          </React.StrictMode>,\n          document.getElementById(\"game\")\n        );\n      })\n      .catch((error) => {\n        console.log(\"Network Error\", error.message);\n      });\n  })\n  .catch((error) => {\n    console.log(\"Network Error\", error.message);\n  });\n"],"sourceRoot":""}