{"version":3,"sources":["DeckBuilder/Deck/CardList/CardListItem/CardListItem.js","DeckBuilder/Deck/CardList/CardList.js","assets/images/cards/images.js","DeckBuilder/Deck/Card/Card.js","DeckBuilder/Deck/SearchBar/Hexagon/Hexagon.js","DeckBuilder/Deck/SearchBar/SearchBar.js","DeckBuilder/Deck/Deck.js","DeckBuilder/DeckList/DeckListItem/DeckListItem.js","DeckBuilder/DeckList/DeckList.js","DeckBuilder/DeckBuilder.js","App.js","index.js"],"names":["CardListItem","props","data","ListGroupItem","action","variant","id","onClick","click","Badge","pill","faeria","name","count","CardList","cardlist","map","item","length","filter","card","ListGroup","images","0","1","2","3","4","5","6","7","8","9","10","11","12","13","14","15","16","17","18","19","20","21","22","23","24","25","26","27","28","29","30","31","32","33","34","35","36","37","38","39","40","41","42","43","44","45","46","47","48","49","50","51","52","53","54","55","Card","className","playable","style","width","margin","alt","src","Hexagon","hexSize","startPosX","startPosY","points","join","Math","sqrt","SearchBar","landBar","Object","keys","landFilter","land","i","changeLandFilter","display","InputGroup","alignItems","FormControl","onChange","changeNameFilter","placeholder","aria-label","aria-describedby","height","Deck","useState","cardsState","setCardsState","cardsListState","setCardsListState","deckState","setDeckState","neutral","forest","desert","mountain","lake","landFilterState","setLandFilterState","nameFilterState","setNameFilterState","useEffect","axios","get","params","find","key","then","res","forEach","array","arr","includes","parseInt","legendary","catch","error","console","log","message","newCardsState","cards","reduce","prev","curr","push","getAvgCost","sum","addCardHandler","event","newDeckState","target","sort","a","b","cost","saveButton","Button","FormData","append","document","getElementById","value","JSON","stringify","post","size","disabled","setName","deck_name","setCover","cover","options","Dropdown","Item","flexWrap","justifyContent","overflow","nameFilter","newLandFilterState","flexDirection","Prepend","Text","parseFloat","toFixed","readOnly","defaultValue","DropdownButton","as","Append","title","splice","findIndex","DeckListItem","cursor","textAlign","DeckList","decksState","setDecksState","decks","deck","DeckBuilder","isListView","setIsListView","setDeck","parse","attributes","app","ReactDOM","render","StrictMode","App"],"mappings":"gTAgBeA,EAbM,SAACC,GACpB,OAAOA,EAAMC,KACX,eAACC,EAAA,EAAD,CAAeC,QAAM,EAACC,QAAQ,UAAUC,GAAIL,EAAMK,GAAIC,QAASN,EAAMO,MAArE,UACE,cAACC,EAAA,EAAD,CAAOC,MAAI,EAACL,QAAQ,UAApB,SACGJ,EAAMC,KAAKS,SACL,IACRV,EAAMC,KAAKU,KAJd,IAIoB,eAACH,EAAA,EAAD,CAAOJ,QAAQ,YAAf,cAA6BJ,EAAMY,YAGvD,cAACV,EAAA,EAAD,K,QCKWW,EAbE,SAACb,GAChB,IAAMc,EAAWd,EAAMc,SAASC,KAAI,SAACC,GAAD,OAClC,cAAC,EAAD,CAEEX,GAAIW,EAAK,GACTJ,MAAOI,EAAKC,OACZhB,KAAMD,EAAMC,KAAKiB,QAAO,SAACC,GAAD,OAAUA,EAAKd,IAAMW,EAAK,MAAI,GACtDT,MAAOP,EAAMO,OAJRS,EAAK,OAOd,OAAO,cAACI,EAAA,EAAD,UAAYN,KC6CNO,EA3DA,CACXC,EAAG,sCACHC,EAAG,mCACHC,EAAG,6CACHC,EAAG,oCACHC,EAAG,qCACHC,EAAG,+CACHC,EAAG,4CACHC,EAAG,4CACHC,EAAG,oCACHC,EAAG,wCACHC,GAAI,oCACJC,GAAI,oCACJC,GAAI,qCACJC,GAAI,oCACJC,GAAI,oCACJC,GAAI,qCACJC,GAAI,qCACJC,GAAI,qCACJC,GAAI,4CACJC,GAAI,0CACJC,GAAI,2CACJC,GAAI,qCACJC,GAAI,+CACJC,GAAI,uCACJC,GAAI,mCACJC,GAAI,sCACJC,GAAI,4CACJC,GAAI,yCACJC,GAAI,uCACJC,GAAI,0CACJC,GAAI,0CACJC,GAAI,uCACJC,GAAI,mCACJC,GAAI,4CACJC,GAAI,6CACJC,GAAI,wCACJC,GAAI,sCACJC,GAAI,wCACJC,GAAI,wCACJC,GAAI,wCACJC,GAAI,sCACJC,GAAI,sCACJC,GAAI,4CACJC,GAAI,wCACJC,GAAI,4CACJC,GAAI,2CACJC,GAAI,uCACJC,GAAI,wCACJC,GAAI,qCACJC,GAAI,2CACJC,GAAI,oCACJC,GAAI,wCACJC,GAAI,4CACJC,GAAI,uCACJC,GAAI,uCACJC,GAAI,uCCpCOC,G,MAhBF,SAAC9E,GACZ,IAAM+E,EAAY/E,EAAMC,KAAK+E,SAAW,aAAe,iBACjDzE,EAAQP,EAAMC,KAAK+E,SAAWhF,EAAMO,MAAQ,KAElD,OACE,qBAAK0E,MAAO,CAAEC,MAAO,OAAQC,OAAQ,QAAU9E,GAAIL,EAAMC,KAAKI,GAAIC,QAASC,EAAOwE,UAAWA,EAA7F,SACE,qBACEE,MAAO,CAAEC,MAAO,QAChB7E,GAAIL,EAAMC,KAAKI,GACf+E,IAAKpF,EAAMC,KAAKI,GAChBgF,IAAKhE,EAAOrB,EAAMC,KAAKI,UCIhBiF,EAhBC,SAACtF,GACf,IAAMuF,EAAUvF,EAAMuF,QAChBC,EAAYxF,EAAMwF,UAClBC,EAAYzF,EAAMyF,UAClBC,EAAS,CACb,CAACF,EAAsB,GAAVD,EAAeE,GAAWE,OACvC,CAACH,EAAsB,IAAVD,EAAeE,GAAWE,OACvC,CAACH,EAAsB,EAAVD,EAAaE,EAAYG,KAAKC,KAAK,GAAKN,EAAU,IAAKI,OACpE,CAACH,EAAsB,IAAVD,EAAeE,EAAYG,KAAKC,KAAK,GAAKN,GAASI,OAChE,CAACH,EAAsB,GAAVD,EAAeE,EAAYG,KAAKC,KAAK,GAAKN,GAASI,OAChE,CAACH,EAAWC,EAAYG,KAAKC,KAAK,GAAKN,EAAU,IAAKI,QACtDA,KAAK,KAEP,OAAO,yBAAStF,GAAIL,EAAMK,GAAIC,QAASN,EAAMO,MAAOwE,UAAW/E,EAAM+E,UAAWW,OAAQA,K,gBCyB3EI,G,MAnCG,SAAC9F,GACjB,IACM+F,EAAUC,OAAOC,KAAKjG,EAAMkG,YAAYnF,KAAI,SAACoF,EAAMC,GAAP,OAChD,4BACE,cAAC,EAAD,CACE/F,GAAI8F,EACJpB,UAAWoB,GAAQnG,EAAMkG,WAAWC,GAAQ,UAAY,IACxDZ,QANU,GAOVC,UAPU,GAOWY,EAAI,IAAM,EAC/BX,UARU,MAQqBG,KAAKC,KAAK,GAAK,GAC9CtF,MAAOP,EAAMqG,oBAPTF,MAWV,OACE,sBACElB,MAAO,CACLqB,QAAS,QAFb,UAKE,cAACC,EAAA,EAAD,CAAYtB,MAAO,CAAEC,MAAO,MAAOsB,WAAY,UAA/C,SACE,cAACC,EAAA,EAAD,CACEC,SAAU1G,EAAM2G,iBAChBC,YAAY,iBACZC,aAAW,OACXC,mBAAiB,mBAGrB,qBAAK5B,MAAM,OAAO6B,OAAO,OAAzB,SACGhB,S,wBCmPMiB,EAvQF,SAAChH,GAAW,IAAD,EACciH,mBAAS,IADvB,mBACfC,EADe,KACHC,EADG,OAEsBF,mBAAS,IAF/B,mBAEfG,EAFe,KAECC,EAFD,OAGYJ,mBAASjH,EAAMC,MAH3B,mBAGfqH,EAHe,KAGJC,EAHI,OAIwBN,mBAAS,CACrDO,SAAS,EACTC,QAAQ,EACRC,QAAQ,EACRC,UAAU,EACVC,MAAM,IATc,mBAIfC,EAJe,KAIEC,EAJF,OAWwBb,mBAAS,IAXjC,mBAWfc,EAXe,KAWEC,EAXF,KAatBC,qBAAU,WACRC,IACGC,IAAI,oCAAqC,CACxCC,OAAQ,CACNzH,KAAMoH,EACN5B,KAAMH,OAAOC,KAAK4B,GAAiBQ,MACjC,SAACC,GAAD,OAAST,EAAgBS,SAI9BC,MAAK,SAACC,GACLA,EAAIvI,KAAKwI,SAAQ,SAACtH,GAChB,IAAMuH,EAAQ5H,EAASuH,MAAK,SAACM,GAAD,OAASA,EAAIC,SAASC,SAAS1H,EAAKd,QACzC,MAAnBc,EAAK2H,WACNJ,GAASA,EAAMzH,OAAS,EACpBE,EAAK6D,UAAW,EAChB7D,EAAK6D,UAAW,GAEpB0D,GAASA,EAAMzH,OAAS,EACpBE,EAAK6D,UAAW,EAChB7D,EAAK6D,UAAW,KAGK,IAA1BoC,EAAenG,QACjBoG,EAAkBmB,EAAIvI,MAExBkH,EAAcqB,EAAIvI,SAEnB8I,OAAM,SAACC,GACNC,QAAQC,IAAI,gBAAiBF,EAAMG,cAEtC,CAACtB,EAAiBE,IAErBE,qBAAU,WACR,IAAMmB,EAAa,YAAOlC,GAC1BkC,EAAcX,SAAQ,SAACtH,GACrB,IAAMuH,EAAQ5H,EAASuH,MAAK,SAACM,GAAD,OAASA,EAAIC,SAASC,SAAS1H,EAAKd,QACzC,MAAnBc,EAAK2H,WACNJ,GAASA,EAAMzH,OAAS,EACpBE,EAAK6D,UAAW,EAChB7D,EAAK6D,UAAW,GAEpB0D,GAASA,EAAMzH,OAAS,EACpBE,EAAK6D,UAAW,EAChB7D,EAAK6D,UAAW,KAGzBmC,EAAciC,KACb,CAAC9B,IAEJ,IAAMxG,EAAWwG,EAAU+B,MAAMC,QAAO,SAACC,EAAMC,EAAMpD,EAAGiD,GAItD,OAHAG,IAASH,EAAMjD,EAAI,GACfmD,EAAKA,EAAKtI,OAAS,GAAGwI,KAAKD,GAC3BD,EAAKE,KAAK,CAACD,IACRD,IACN,IAEGG,EAAa,SAACL,GAClB,IAAIM,EAAM,EACN/I,EAAQ,EAKZ,OAJAyI,EAAMZ,SAAQ,SAACpI,GACbO,IACA+I,GAAOd,SAASzB,EAAelG,QAAO,SAACC,GAAD,OAAUA,EAAKd,IAAMA,KAAI,GAAGK,WAE7DE,EAAQ+I,EAAM/I,EAAQ,GAGzBgJ,EAAiB,SAACC,GACtB,IAAMC,EAAY,eAAQxC,GAC1BwC,EAAaT,MAAMI,KAAKZ,SAASgB,EAAME,OAAO1J,KAC9CyJ,EAAaT,MAAMW,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAIC,KACtCJ,EAAaK,KAAOT,EAAWI,EAAaT,OAC5C9B,EAAauC,IAaTT,EAAQnC,EAAWnG,KAAI,SAACI,EAAMiF,GAAP,OAC3B,cAAC,EAAD,CAAoB7F,MAAOqJ,EAAgB3J,KAAMkB,GAAtCA,EAAKd,OAqBZ+J,EACuB,KAA3B9C,EAAU+B,MAAMpI,OACd,cAACoJ,EAAA,EAAD,CAAQ/J,QApBK,WACf,IAAML,EAAO,IAAIqK,SACjBrK,EAAKsK,OAAO,OAAQC,SAASC,eAAe,QAAQC,OACpDzK,EAAKsK,OAAO,OAAQI,KAAKC,UAAUtD,IACnCY,IACG2C,KAAK,oCAAqC5K,GAC1CsI,MAAK,WACJvI,EAAMO,WAEPwI,OAAM,SAACC,GACNC,QAAQC,IAAI,gBAAiBF,EAAMG,aAUV/I,QAAQ,UAAU0K,KAAK,KAAlD,kBAIA,cAACT,EAAA,EAAD,CAAQU,UAAQ,EAAC3K,QAAQ,YAAY0K,KAAK,KAA1C,kBAKEE,EAAU,SAACnB,GACf,IAAMC,EAAY,eAAQxC,GAC1BwC,EAAamB,UAAYpB,EAAME,OAAOW,MACtCnD,EAAauC,IAGToB,EAAW,SAACrB,GAChB,IAAMC,EAAY,eAAQxC,GAC1BwC,EAAaqB,MAAQtB,EAAME,OAAO1J,GAClCkH,EAAauC,IAgBTqB,EACJ/D,EAAenG,OAAS,EACpBmG,EAAeiB,MAAK,SAAClH,GAAD,OAAUA,EAAKd,IAAMiH,EAAU6D,SACjD/D,EAAeiB,MAAK,SAAClH,GAAD,OAAUA,EAAKd,IAAMiH,EAAU6D,SAAOxK,KAC1D,WACF,KACAyK,EAAUD,EACZrK,EAASC,KAAI,SAACC,GAAD,OACX,cAACqK,EAAA,EAASC,KAAV,CAA6BjL,GAAIW,EAAK,GAAIV,QAAS4K,EAAnD,SACG9D,EAAeiB,MAAK,SAAClH,GAAD,OAAUA,EAAKd,IAAMW,EAAK,MAAIL,MADjCK,EAAK,OAI3B,KAEJ,OACE,sBAAKiE,MAAO,CAAEqB,QAAS,QAAvB,UACE,gCACE,qBACErB,MAAO,CACLqB,QAAS,OACTiF,SAAU,OACVxE,OAAQ,OACR7B,MAAO,OACPsG,eAAgB,eAChBC,SAAU,UAPd,SAUGpC,IAEH,qBACEpE,MAAO,CACLqB,QAAS,OACTiF,SAAU,OACVxE,OAAQ,OACR7B,MAAO,OACPsG,eAAgB,gBANpB,SASE,cAAC,EAAD,CACEtF,WAAY2B,EACZ6D,WAAY3D,EACZ1B,iBAtDe,SAACwD,GACxB,IAAM8B,EAAkB,eAAQ9D,GAChC8D,EAAmB9B,EAAME,OAAO1J,KAAOsL,EAAmB9B,EAAME,OAAO1J,IACvE2F,OAAOC,KAAK0F,GACTzK,QAAO,SAACoH,GAAD,OAASA,IAAQuB,EAAME,OAAO1J,MACrCoI,SAAQ,SAACtC,GAAD,OAAWwF,EAAmBxF,IAAQ,KACjD2B,EAAmB6D,IAiDXhF,iBA9Ce,SAACkD,GACxB7B,EAAmB6B,EAAME,OAAOW,eAiD9B,sBACEzF,MAAO,CACLqB,QAAS,OACTsF,cAAe,SACf1G,MAAO,OACP6B,OAAQ,QACRyE,eAAgB,aAChBC,SAAU,UAPd,UAUE,eAAClF,EAAA,EAAD,WACE,eAACA,EAAA,EAAWsF,QAAZ,WACE,cAACtF,EAAA,EAAWuF,KAAZ,UACE,cAACtL,EAAA,EAAD,CAAOC,MAAI,EAACL,QAAQ,UAApB,SACG2L,WAAWzE,EAAU6C,MAAM6B,QAAQ,OAGxC,eAACzF,EAAA,EAAWuF,KAAZ,WAAkBxE,EAAU+B,MAAMpI,OAAlC,SACA,cAACsF,EAAA,EAAWuF,KAAZ,CAAiBzL,GAAG,eAApB,sBAEF,cAACoG,EAAA,EAAD,CACEC,SAAUsE,EACVpE,YAAaU,EAAU2D,UACvBpE,aAAYS,EAAU2D,UACtBnE,mBAAiB,oBAGrB,eAACP,EAAA,EAAD,WACE,cAACA,EAAA,EAAWsF,QAAZ,UACE,cAACtF,EAAA,EAAWuF,KAAZ,CAAiBzL,GAAG,eAApB,sBAEF,cAACoG,EAAA,EAAD,CACEC,SAAUsE,EACViB,UAAQ,EACRC,aAAcf,EACdtE,aAAYsE,EACZrE,mBAAiB,iBAEnB,cAACqF,EAAA,EAAD,CACEC,GAAI7F,IAAW8F,OACfjM,QAAQ,YACRkM,MAAM,SACNjM,GAAG,yBAJL,SAMG+K,OAGL,cAAC,EAAD,CACEtK,SAAUA,EACVb,KAAMmH,EACN7G,MApKkB,SAACsJ,GACzB,IAAMC,EAAY,eAAQxC,GAC1BwC,EAAaT,MAAMkD,OACjBzC,EAAaT,MAAMmD,WAAU,SAACrL,GAAD,OAAUA,GAAQ0I,EAAME,OAAO1J,MAC5D,GAEFyJ,EAAaK,KAAOT,EAAWI,EAAaT,OAC5C9B,EAAauC,MA+JRM,EACD,cAACC,EAAA,EAAD,CAAQ/J,QA3IK,WACjBN,EAAMO,SA0I2BH,QAAQ,OAAO0K,KAAK,KAAjD,2BCtPO2B,EApBM,SAACzM,GACpB,OACE,sBACEC,KAAM0K,KAAKC,UAAU5K,EAAMC,MAC3BgF,MAAO,CAAEC,MAAO,OAAQwH,OAAQ,WAChCrM,GAAIL,EAAMC,KAAKI,GACfC,QAASN,EAAMO,MAJjB,UAME,oBAAI0E,MAAO,CAAE0H,UAAW,UAAxB,SAAqC3M,EAAMC,KAAKgL,YAChD,qBACEhG,MAAO,CAAEC,MAAO,QAChB7E,GAAIL,EAAMC,KAAKI,GACf+E,IAAKpF,EAAMC,KAAKI,GAChBJ,KAAM0K,KAAKC,UAAU5K,EAAMC,MAC3BoF,IAAKhE,EAAOrB,EAAMC,KAAKkL,aCgBhByB,EA7BE,SAAC5M,GAAW,IAAD,EACUiH,mBAAS,IADnB,mBACnB4F,EADmB,KACPC,EADO,KAG1B7E,qBAAU,WACR,IAAMhI,EAAO,IAAIqK,SACjBrK,EAAKsK,OAAO,OAAQC,SAASC,eAAe,QAAQC,OACpDxC,IACG2C,KAAK,oCAAqC5K,GAC1CsI,MAAK,SAACC,GACLsE,EAActE,EAAIvI,SAEnB8I,OAAM,SAACC,GACNC,QAAQC,IAAI,gBAAiBF,EAAMG,cAEtC,IAEH,IAAM4D,EAAQF,EAAW9L,KAAI,SAACiM,GAAD,OAC3B,cAAC,EAAD,CAA4B/M,KAAM+M,EAAMzM,MAAOP,EAAMO,OAAlCyM,EAAK3M,OAS1B,OAPA0M,EAAMtD,KACJ,cAAC,EAAD,CAEExJ,KAAM,CAAEI,GAAI,EAAG4K,UAAW,UAAWE,MAAO,EAAG9B,MAAO,GAAIc,KAAM,GAChE5J,MAAOP,EAAMO,OAFT,MAKDwM,GCQME,EAlCK,WAAO,IAAD,EACYhG,oBAAS,GADrB,mBACjBiG,EADiB,KACLC,EADK,OAEAlG,mBAAS,IAFT,mBAEjB+F,EAFiB,KAEXI,EAFW,KA+BxB,OAjBgBF,EACd,qBACEjI,MAAO,CACLqB,QAAS,OACTiF,SAAU,OACVxE,OAAQ,QACR7B,MAAO,QACPsG,eAAgB,eAChBC,SAAU,UAPd,SAUE,cAAC,EAAD,CAAUlL,MArBS,SAACsJ,GACtBuD,EAAQzC,KAAK0C,MAAMxD,EAAME,OAAOuD,WAAWrN,KAAKyK,QAChDyC,GAAc,QAsBd,cAAC,EAAD,CAAMlN,KAAM+M,EAAMzM,MAnBE,WACpB6M,EAAQ,IACRD,GAAc,OCNHI,EANH,WACV,OACE,cAAC,EAAD,K,MCCJC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACC,EAAD,MAEFnD,SAASC,eAAe,mB","file":"static/js/main.83bfdba7.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Badge, ListGroupItem } from \"react-bootstrap\";\r\n\r\nconst CardListItem = (props) => {\r\n  return props.data ? (\r\n    <ListGroupItem action variant=\"primary\" id={props.id} onClick={props.click}>\r\n      <Badge pill variant=\"primary\">\r\n        {props.data.faeria}\r\n      </Badge>{\" \"}\r\n      {props.data.name} <Badge variant=\"secondary\">x{props.count}</Badge>\r\n    </ListGroupItem>\r\n  ) : (\r\n    <ListGroupItem />\r\n  );\r\n};\r\n\r\nexport default CardListItem;\r\n","import React from \"react\";\r\nimport CardListItem from \"./CardListItem/CardListItem\";\r\nimport { ListGroup } from \"react-bootstrap\";\r\n\r\nconst CardList = (props) => {\r\n  const cardlist = props.cardlist.map((item) => (\r\n    <CardListItem\r\n      key={item[0]}\r\n      id={item[0]}\r\n      count={item.length}\r\n      data={props.data.filter((card) => card.id == item[0])[0]} // eslint-disable-line eqeqeq\r\n      click={props.click}\r\n    />\r\n  ));\r\n  return <ListGroup>{cardlist}</ListGroup>;\r\n};\r\n\r\nexport default CardList;\r\n","const images = {\r\n    0: 'assets/images/cards/cheeksplore.jpg',\r\n    1: 'assets/images/cards/mercheek.jpg',\r\n    2: 'assets/images/cards/dolphin_cheekrider.jpg',\r\n    3: 'assets/images/cards/clamcheek.jpg',\r\n    4: 'assets/images/cards/ninjacheek.jpg',\r\n    5: 'assets/images/cards/song_of_the_mercheek.jpg',\r\n    6: 'assets/images/cards/cheek_in_a_bottle.jpg',\r\n    7: 'assets/images/cards/cheekie_in_a_lamp.jpg',\r\n    8: 'assets/images/cards/cheeklord.jpg',\r\n    9: 'assets/images/cards/rain_of_cheek.jpg',\r\n    10: 'assets/images/cards/cheekdrop.jpg',\r\n    11: 'assets/images/cards/cheekmoon.jpg',\r\n    12: 'assets/images/cards/cheekpearl.jpg',\r\n    13: 'assets/images/cards/crabcheek.jpg',\r\n    14: 'assets/images/cards/cheekcano.jpg',\r\n    15: 'assets/images/cards/cheekdevil.jpg',\r\n    16: 'assets/images/cards/cheekflame.jpg',\r\n    17: 'assets/images/cards/cheekblast.jpg',\r\n    18: 'assets/images/cards/cheekflame_faerie.jpg',\r\n    19: 'assets/images/cards/baby_cheekdevil.jpg',\r\n    20: 'assets/images/cards/ghostcheek_tower.jpg',\r\n    21: 'assets/images/cards/ghostcheek.jpg',\r\n    22: 'assets/images/cards/ghostcheek_alchemist.jpg',\r\n    23: 'assets/images/cards/cheekruption.jpg',\r\n    24: 'assets/images/cards/suncheek.jpg',\r\n    25: 'assets/images/cards/cheekflower.jpg',\r\n    26: 'assets/images/cards/cavecheek_dweller.jpg',\r\n    27: 'assets/images/cards/mushroom_cheek.jpg',\r\n    28: 'assets/images/cards/cheekshrooms.jpg',\r\n    29: 'assets/images/cards/cheektree_giant.jpg',\r\n    30: 'assets/images/cards/cheekworld_tree.jpg',\r\n    31: 'assets/images/cards/cheek_shaman.jpg',\r\n    32: 'assets/images/cards/cheekfox.jpg',\r\n    33: 'assets/images/cards/cheekbloom_spirit.jpg',\r\n    34: 'assets/images/cards/cheekshield_spirit.jpg',\r\n    35: 'assets/images/cards/cheek_dancers.jpg',\r\n    36: 'assets/images/cards/cheeksphynx.jpg',\r\n    37: 'assets/images/cards/cheeksphynx_a.jpg',\r\n    38: 'assets/images/cards/cheeksphynx_b.jpg',\r\n    39: 'assets/images/cards/cheeksphynx_c.jpg',\r\n    40: 'assets/images/cards/mummy_cheek.jpg',\r\n    41: 'assets/images/cards/cheeksquito.jpg',\r\n    42: 'assets/images/cards/cheek_air_balloon.jpg',\r\n    43: 'assets/images/cards/balloon_cheek.jpg',\r\n    44: 'assets/images/cards/dragon_cheekrider.jpg',\r\n    45: 'assets/images/cards/baby_dragoncheek.jpg',\r\n    46: 'assets/images/cards/cheek_glider.jpg',\r\n    47: 'assets/images/cards/cheek_pyramid.jpg',\r\n    48: 'assets/images/cards/cheek_wind.jpg',\r\n    49: 'assets/images/cards/canopic_cheekjar.jpg',\r\n    50: 'assets/images/cards/cavecheek.jpg',\r\n    51: 'assets/images/cards/book_of_cheek.jpg',\r\n    52: 'assets/images/cards/milk_of_the_cheek.jpg',\r\n    53: 'assets/images/cards/cheek_cannon.jpg',\r\n    54: 'assets/images/cards/cheekcrobats.jpg',\r\n    55: 'assets/images/cards/cheekcrobat.jpg',\r\n}\r\n\r\nexport default images;","import React from \"react\";\r\nimport images from \"../../../assets/images/cards/images\";\r\nimport \"./Card.css\";\r\n\r\nconst Card = (props) => {\r\n  const className = props.data.playable ? \"selectable\" : \"not-selectable\";\r\n  const click = props.data.playable ? props.click : null;\r\n\r\n  return (\r\n    <div style={{ width: \"15vw\", margin: \"10px\" }} id={props.data.id} onClick={click} className={className}>\r\n      <img\r\n        style={{ width: \"15vw\" }}\r\n        id={props.data.id}\r\n        alt={props.data.id}\r\n        src={images[props.data.id]}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","import React from \"react\";\r\n\r\nconst Hexagon = (props) => {\r\n  const hexSize = props.hexSize;\r\n  const startPosX = props.startPosX;\r\n  const startPosY = props.startPosY;\r\n  const points = [\r\n    [startPosX + hexSize * 0.5, startPosY].join(),\r\n    [startPosX + hexSize * 1.5, startPosY].join(),\r\n    [startPosX + hexSize * 2, startPosY + Math.sqrt(3) * hexSize * 0.5].join(),\r\n    [startPosX + hexSize * 1.5, startPosY + Math.sqrt(3) * hexSize].join(),\r\n    [startPosX + hexSize * 0.5, startPosY + Math.sqrt(3) * hexSize].join(),\r\n    [startPosX, startPosY + Math.sqrt(3) * hexSize * 0.5].join(),\r\n  ].join(\" \");\r\n\r\n  return <polygon id={props.id} onClick={props.click} className={props.className} points={points} />;\r\n};\r\n\r\nexport default Hexagon;\r\n","import React from \"react\";\r\nimport Hexagon from \"./Hexagon/Hexagon\";\r\nimport { InputGroup, FormControl } from \"react-bootstrap\";\r\nimport \"./Searchbar.css\";\r\n\r\nconst SearchBar = (props) => {\r\n  const hexSize = 40;\r\n  const landBar = Object.keys(props.landFilter).map((land, i) => (\r\n    <g key={land}>\r\n      <Hexagon\r\n        id={land}\r\n        className={land + (props.landFilter[land] ? \"-active\" : \"\")}\r\n        hexSize={hexSize}\r\n        startPosX={hexSize * i * 2.5 + 8}\r\n        startPosY={hexSize - hexSize * Math.sqrt(3) * 0.5}\r\n        click={props.changeLandFilter}\r\n      />\r\n    </g>\r\n  ));\r\n  return (\r\n    <div\r\n      style={{\r\n        display: \"flex\",\r\n      }}\r\n    >\r\n      <InputGroup style={{ width: \"50%\", alignItems: \"center\" }}>\r\n        <FormControl\r\n          onChange={props.changeNameFilter}\r\n          placeholder=\"Search by name\"\r\n          aria-label=\"name\"\r\n          aria-describedby=\"basic-addon1\"\r\n        />\r\n      </InputGroup>\r\n      <svg width=\"100%\" height=\"80px\">\r\n        {landBar}\r\n      </svg>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchBar;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport CardList from \"./CardList/CardList\";\r\nimport Card from \"./Card/Card\";\r\nimport SearchBar from \"./SearchBar/SearchBar\";\r\nimport {\r\n  Badge,\r\n  Button,\r\n  InputGroup,\r\n  FormControl,\r\n  Dropdown,\r\n  DropdownButton,\r\n} from \"react-bootstrap\";\r\n\r\nconst Deck = (props) => {\r\n  const [cardsState, setCardsState] = useState([]);\r\n  const [cardsListState, setCardsListState] = useState([]);\r\n  const [deckState, setDeckState] = useState(props.data);\r\n  const [landFilterState, setLandFilterState] = useState({\r\n    neutral: false,\r\n    forest: false,\r\n    desert: false,\r\n    mountain: false,\r\n    lake: false,\r\n  });\r\n  const [nameFilterState, setNameFilterState] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(\"/faeria/Faeria/utils/getCards.php\", {\r\n        params: {\r\n          name: nameFilterState,\r\n          land: Object.keys(landFilterState).find(\r\n            (key) => landFilterState[key]\r\n          ),\r\n        },\r\n      })\r\n      .then((res) => {\r\n        res.data.forEach((card) => {\r\n          const array = cardlist.find((arr) => arr.includes(parseInt(card.id)));\r\n          if (card.legendary === \"1\") {\r\n            !array || array.length < 1\r\n              ? (card.playable = true)\r\n              : (card.playable = false);\r\n          } else {\r\n            !array || array.length < 3\r\n              ? (card.playable = true)\r\n              : (card.playable = false);\r\n          }\r\n        });\r\n        if (cardsListState.length === 0) {\r\n          setCardsListState(res.data);\r\n        }\r\n        setCardsState(res.data);\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Network Error\", error.message);\r\n      });\r\n  }, [landFilterState, nameFilterState]);\r\n\r\n  useEffect(() => {\r\n    const newCardsState = [...cardsState];\r\n    newCardsState.forEach((card) => {\r\n      const array = cardlist.find((arr) => arr.includes(parseInt(card.id)));\r\n      if (card.legendary === \"1\") {\r\n        !array || array.length < 1\r\n          ? (card.playable = true)\r\n          : (card.playable = false);\r\n      } else {\r\n        !array || array.length < 3\r\n          ? (card.playable = true)\r\n          : (card.playable = false);\r\n      }\r\n    });\r\n    setCardsState(newCardsState);\r\n  }, [deckState]);\r\n\r\n  const cardlist = deckState.cards.reduce((prev, curr, i, cards) => {\r\n    curr === cards[i - 1]\r\n      ? prev[prev.length - 1].push(curr)\r\n      : prev.push([curr]);\r\n    return prev;\r\n  }, []);\r\n\r\n  const getAvgCost = (cards) => {\r\n    let sum = 0;\r\n    let count = 0;\r\n    cards.forEach((id) => {\r\n      count++;\r\n      sum += parseInt(cardsListState.filter((card) => card.id == id)[0].faeria); // eslint-disable-line eqeqeq\r\n    });\r\n    return count ? sum / count : 0;\r\n  };\r\n\r\n  const addCardHandler = (event) => {\r\n    const newDeckState = { ...deckState };\r\n    newDeckState.cards.push(parseInt(event.target.id));\r\n    newDeckState.cards.sort((a, b) => a - b);\r\n    newDeckState.cost = getAvgCost(newDeckState.cards);\r\n    setDeckState(newDeckState);\r\n  };\r\n\r\n  const removeCardHandler = (event) => {\r\n    const newDeckState = { ...deckState };\r\n    newDeckState.cards.splice(\r\n      newDeckState.cards.findIndex((card) => card == event.target.id), // eslint-disable-line eqeqeq\r\n      1\r\n    );\r\n    newDeckState.cost = getAvgCost(newDeckState.cards);\r\n    setDeckState(newDeckState);\r\n  };\r\n\r\n  const cards = cardsState.map((card, i) => (\r\n    <Card key={card.id} click={addCardHandler} data={card} />\r\n  ));\r\n\r\n  const saveDeck = () => {\r\n    const data = new FormData();\r\n    data.append(\"user\", document.getElementById(\"user\").value);\r\n    data.append(\"deck\", JSON.stringify(deckState));\r\n    axios\r\n      .post(\"/faeria/Faeria/utils/saveDeck.php\", data)\r\n      .then(() => {\r\n        props.click();\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Network Error\", error.message);\r\n      });\r\n  };\r\n\r\n  const cancelDeck = () => {\r\n    props.click();\r\n  };\r\n\r\n  const saveButton =\r\n    deckState.cards.length === 30 ? (\r\n      <Button onClick={saveDeck} variant=\"primary\" size=\"lg\">\r\n        Save\r\n      </Button>\r\n    ) : (\r\n      <Button disabled variant=\"secondary\" size=\"lg\">\r\n        Save\r\n      </Button>\r\n    );\r\n\r\n  const setName = (event) => {\r\n    const newDeckState = { ...deckState };\r\n    newDeckState.deck_name = event.target.value;\r\n    setDeckState(newDeckState);\r\n  };\r\n\r\n  const setCover = (event) => {\r\n    const newDeckState = { ...deckState };\r\n    newDeckState.cover = event.target.id;\r\n    setDeckState(newDeckState);\r\n  };\r\n\r\n  const changeLandFilter = (event) => {\r\n    const newLandFilterState = { ...landFilterState };\r\n    newLandFilterState[event.target.id] = !newLandFilterState[event.target.id];\r\n    Object.keys(newLandFilterState)\r\n      .filter((key) => key !== event.target.id)\r\n      .forEach((land) => (newLandFilterState[land] = false));\r\n    setLandFilterState(newLandFilterState);\r\n  };\r\n\r\n  const changeNameFilter = (event) => {\r\n    setNameFilterState(event.target.value);\r\n  };\r\n\r\n  const cover =\r\n    cardsListState.length > 0\r\n      ? cardsListState.find((card) => card.id == deckState.cover)\r\n        ? cardsListState.find((card) => card.id == deckState.cover).name\r\n        : \"No cover\"\r\n      : null;\r\n  const options = cover\r\n    ? cardlist.map((item) => (\r\n        <Dropdown.Item key={item[0]} id={item[0]} onClick={setCover}>\r\n          {cardsListState.find((card) => card.id == item[0]).name}\r\n        </Dropdown.Item>\r\n      ))\r\n    : null;\r\n\r\n  return (\r\n    <div style={{ display: \"flex\" }}>\r\n      <div>\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            flexWrap: \"wrap\",\r\n            height: \"80vh\",\r\n            width: \"70vw\",\r\n            justifyContent: \"space-evenly\",\r\n            overflow: \"scroll\",\r\n          }}\r\n        >\r\n          {cards}\r\n        </div>\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            flexWrap: \"wrap\",\r\n            height: \"20vh\",\r\n            width: \"70vw\",\r\n            justifyContent: \"space-evenly\",\r\n          }}\r\n        >\r\n          <SearchBar\r\n            landFilter={landFilterState}\r\n            nameFilter={nameFilterState}\r\n            changeLandFilter={changeLandFilter}\r\n            changeNameFilter={changeNameFilter}\r\n          />\r\n        </div>\r\n      </div>\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          flexDirection: \"column\",\r\n          width: \"30vw\",\r\n          height: \"100vh\",\r\n          justifyContent: \"flex-start\",\r\n          overflow: \"scroll\",\r\n        }}\r\n      >\r\n        <InputGroup>\r\n          <InputGroup.Prepend>\r\n            <InputGroup.Text>\r\n              <Badge pill variant=\"primary\">\r\n                {parseFloat(deckState.cost).toFixed(1)}\r\n              </Badge>\r\n            </InputGroup.Text>\r\n            <InputGroup.Text>{deckState.cards.length}/30</InputGroup.Text>\r\n            <InputGroup.Text id=\"basic-addon1\">Name:</InputGroup.Text>\r\n          </InputGroup.Prepend>\r\n          <FormControl\r\n            onChange={setName}\r\n            placeholder={deckState.deck_name}\r\n            aria-label={deckState.deck_name}\r\n            aria-describedby=\"basic-addon1\"\r\n          />\r\n        </InputGroup>\r\n        <InputGroup>\r\n          <InputGroup.Prepend>\r\n            <InputGroup.Text id=\"basic-addon2\">Cover:</InputGroup.Text>\r\n          </InputGroup.Prepend>\r\n          <FormControl\r\n            onChange={setName}\r\n            readOnly\r\n            defaultValue={cover}\r\n            aria-label={cover}\r\n            aria-describedby=\"basic-addon2\"\r\n          />\r\n          <DropdownButton\r\n            as={InputGroup.Append}\r\n            variant=\"secondary\"\r\n            title=\"Select\"\r\n            id=\"input-group-dropdown-2\"\r\n          >\r\n            {options}\r\n          </DropdownButton>\r\n        </InputGroup>\r\n        <CardList\r\n          cardlist={cardlist}\r\n          data={cardsListState}\r\n          click={removeCardHandler}\r\n        />\r\n        {saveButton}\r\n        <Button onClick={cancelDeck} variant=\"dark\" size=\"lg\">\r\n          Cancel\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Deck;\r\n","import React from \"react\";\r\nimport images from \"../../../assets/images/cards/images\";\r\n\r\nconst DeckListItem = (props) => {\r\n  return (\r\n    <div\r\n      data={JSON.stringify(props.data)}\r\n      style={{ width: \"17vw\", cursor: \"pointer\" }}\r\n      id={props.data.id}\r\n      onClick={props.click}\r\n    >\r\n      <h1 style={{ textAlign: \"center\" }}>{props.data.deck_name}</h1>\r\n      <img\r\n        style={{ width: \"17vw\" }}\r\n        id={props.data.id}\r\n        alt={props.data.id}\r\n        data={JSON.stringify(props.data)}\r\n        src={images[props.data.cover]}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DeckListItem;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport DeckListItem from \"./DeckListItem/DeckListItem\";\r\n\r\nconst DeckList = (props) => {\r\n  const [decksState, setDecksState] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const data = new FormData();\r\n    data.append(\"user\", document.getElementById(\"user\").value);\r\n    axios\r\n      .post(\"/faeria/Faeria/utils/getDecks.php\", data)\r\n      .then((res) => {\r\n        setDecksState(res.data);\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Network Error\", error.message);\r\n      });\r\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  const decks = decksState.map((deck) => (\r\n    <DeckListItem key={deck.id} data={deck} click={props.click} />\r\n  ));\r\n  decks.push(\r\n    <DeckListItem\r\n      key=\"0\"\r\n      data={{ id: 0, deck_name: \"Add new\", cover: 0, cards: [], cost: 0.0 }}\r\n      click={props.click}\r\n    />\r\n  );\r\n  return decks;\r\n};\r\n\r\nexport default DeckList;\r\n","import React, { useState } from \"react\";\r\nimport Deck from \"./Deck/Deck\";\r\nimport DeckList from \"./DeckList/DeckList\";\r\n\r\nconst DeckBuilder = () => {\r\n  const [isListView, setIsListView] = useState(true);\r\n  const [deck, setDeck] = useState({});\r\n\r\n  const onClickHandler = (event) => {\r\n    setDeck(JSON.parse(event.target.attributes.data.value));\r\n    setIsListView(false);\r\n  };\r\n\r\n  const returnHandler = () => {\r\n    setDeck({});\r\n    setIsListView(true);\r\n  };\r\n\r\n  const display = isListView ? (\r\n    <div\r\n      style={{\r\n        display: \"flex\",\r\n        flexWrap: \"wrap\",\r\n        height: \"100vh\",\r\n        width: \"100vw\",\r\n        justifyContent: \"space-evenly\",\r\n        overflow: \"scroll\",\r\n      }}\r\n    >\r\n      <DeckList click={onClickHandler} />\r\n    </div>\r\n  ) : (\r\n    <Deck data={deck} click={returnHandler} />\r\n  );\r\n\r\n  return display;\r\n};\r\n\r\nexport default DeckBuilder;\r\n","import React from 'react';\nimport DeckBuilder from \"./DeckBuilder/DeckBuilder\";\n\nconst app = () => {\n  return (\n    <DeckBuilder />\n  );\n}\n\nexport default app;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('deck-builder')\n);\n"],"sourceRoot":""}